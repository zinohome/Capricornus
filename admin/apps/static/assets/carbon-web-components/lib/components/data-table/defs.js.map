{"version":3,"sources":["components/data-table/defs.ts"],"names":["TABLE_COLOR_SCHEME","TABLE_SIZE","TABLE_SORT_DIRECTION","TABLE_SORT_CYCLE","TABLE_SORT_CYCLES","BI_STATES_FROM_ASCENDING","ASCENDING","DESCENDING","BI_STATES_FROM_DESCENDING","TRI_STATES_FROM_ASCENDING","NONE","TRI_STATES_FROM_DESCENDING"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;IACYA,kB;AAYZ;AACA;AACA;;;;WAdYA,kB;AAAAA,EAAAA,kB;AAAAA,EAAAA,kB;GAAAA,kB,kCAAAA,kB;;IAeAC,U;AAsBZ;AACA;AACA;;;;WAxBYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,0BAAAA,U;;IAyBAC,oB;AAiBZ;AACA;AACA;;;;WAnBYA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;GAAAA,oB,oCAAAA,oB;;IAoBAC,gB;AAOZ;AACA;AACA;;;;WATYA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,gCAAAA,gB;;AAUL,MAAMC,iBAAiB,GAAG;AAC/B,GAACD,gBAAgB,CAACE,wBAAlB,GAA6C,CAACH,oBAAoB,CAACI,SAAtB,EAAiCJ,oBAAoB,CAACK,UAAtD,CADd;AAE/B,GAACJ,gBAAgB,CAACK,yBAAlB,GAA8C,CAACN,oBAAoB,CAACK,UAAtB,EAAkCL,oBAAoB,CAACI,SAAvD,CAFf;AAG/B,GAACH,gBAAgB,CAACM,yBAAlB,GAA8C,CAC5CP,oBAAoB,CAACQ,IADuB,EAE5CR,oBAAoB,CAACI,SAFuB,EAG5CJ,oBAAoB,CAACK,UAHuB,CAHf;AAQ/B,GAACJ,gBAAgB,CAACQ,0BAAlB,GAA+C,CAC7CT,oBAAoB,CAACQ,IADwB,EAE7CR,oBAAoB,CAACK,UAFwB,EAG7CL,oBAAoB,CAACI,SAHwB;AARhB,CAA1B","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Table color scheme.\n */\nexport enum TABLE_COLOR_SCHEME {\n  /**\n   * Regular color scheme.\n   */\n  REGULAR = '',\n\n  /**\n   * Color scheme with zebra stripe.\n   */\n  ZEBRA = 'zebra',\n}\n\n/**\n * Table size.\n */\nexport enum TABLE_SIZE {\n  /**\n   * Compact size.\n   */\n  COMPACT = 'compact',\n\n  /**\n   * Short size.\n   */\n  SHORT = 'short',\n\n  /**\n   * Regular size.\n   */\n  REGULAR = '',\n\n  /**\n   * Tall size.\n   */\n  TALL = 'tall',\n}\n\n/**\n * Table sort state.\n */\nexport enum TABLE_SORT_DIRECTION {\n  /**\n   * Not sorted.\n   */\n  NONE = 'none',\n\n  /**\n   * Sorted ascendingly.\n   */\n  ASCENDING = 'ascending',\n\n  /**\n   * Sorted descendingly.\n   */\n  DESCENDING = 'descending',\n}\n\n/**\n * Table sort cycle.\n */\nexport enum TABLE_SORT_CYCLE {\n  BI_STATES_FROM_ASCENDING = 'bi-states-from-ascending',\n  BI_STATES_FROM_DESCENDING = 'bi-states-from-descending',\n  TRI_STATES_FROM_ASCENDING = 'tri-states-from-ascending',\n  TRI_STATES_FROM_DESCENDING = 'tri-states-from-descending',\n}\n\n/**\n * Mapping of table sort cycles to table sort states.\n */\nexport const TABLE_SORT_CYCLES = {\n  [TABLE_SORT_CYCLE.BI_STATES_FROM_ASCENDING]: [TABLE_SORT_DIRECTION.ASCENDING, TABLE_SORT_DIRECTION.DESCENDING],\n  [TABLE_SORT_CYCLE.BI_STATES_FROM_DESCENDING]: [TABLE_SORT_DIRECTION.DESCENDING, TABLE_SORT_DIRECTION.ASCENDING],\n  [TABLE_SORT_CYCLE.TRI_STATES_FROM_ASCENDING]: [\n    TABLE_SORT_DIRECTION.NONE,\n    TABLE_SORT_DIRECTION.ASCENDING,\n    TABLE_SORT_DIRECTION.DESCENDING,\n  ],\n  [TABLE_SORT_CYCLE.TRI_STATES_FROM_DESCENDING]: [\n    TABLE_SORT_DIRECTION.NONE,\n    TABLE_SORT_DIRECTION.DESCENDING,\n    TABLE_SORT_DIRECTION.ASCENDING,\n  ],\n};\n"],"file":"defs.js"}