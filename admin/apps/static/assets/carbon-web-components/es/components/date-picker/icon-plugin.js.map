{"version":3,"sources":["components/date-picker/icon-plugin.ts"],"names":["render","ChevronLeft16","ChevronRight16","fp","setIcon","prevMonthNav","nextMonthNav","parseConfig","config","prevArrow","nextArrow","register","loadedPlugins","push","onParseConfig","onReady"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,UAAvB;AAGA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA;AACA;AACA;AACA;;AAHA;AACA;AACA;AACA;;AACA,gBAAe,MAAeC,EAAD,IAA2B;AACtD;AACF;AACA;AACE,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAiCH,EAAvC;AACAH,IAAAA,MAAM,CAACC,aAAa,EAAd,EAAkBI,YAAlB,CAAN;AACAL,IAAAA,MAAM,CAACE,cAAc,EAAf,EAAmBI,YAAnB,CAAN;AACD,GAJD;AAMA;AACF;AACA;;;AACE,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAaL,EAAnB;AACAK,IAAAA,MAAM,CAACC,SAAP,GAAmB,EAAnB;AACAD,IAAAA,MAAM,CAACE,SAAP,GAAmB,EAAnB;AACD,GAJD;AAMA;AACF;AACA;AACA;;;AACE,QAAMC,QAAQ,GAAG,MAAM;AACrBR,IAAAA,EAAE,CAACS,aAAH,CAAiBC,IAAjB,CAAsB,2BAAtB;AACD,GAFD;;AAIA,SAAO;AACLC,IAAAA,aAAa,EAAEP,WADV;AAELQ,IAAAA,OAAO,EAAE,CAACJ,QAAD,EAAWP,OAAX;AAFJ,GAAP;AAID,CA/BD","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { render } from 'lit-html';\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport ChevronLeft16 from '@carbon/icons/lib/chevron--left/16';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16';\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to set the right icons in the design system.\n */\nexport default (): Plugin => (fp: FlatpickrInstance) => {\n  /**\n   * Sets the icon in the design system.\n   */\n  const setIcon = () => {\n    const { prevMonthNav, nextMonthNav } = fp;\n    render(ChevronLeft16(), prevMonthNav);\n    render(ChevronRight16(), nextMonthNav);\n  };\n\n  /**\n   * Sets empty arrow icon contents as we render those icons after initialization.\n   */\n  const parseConfig = () => {\n    const { config } = fp;\n    config.prevArrow = '';\n    config.nextArrow = '';\n  };\n\n  /**\n   * Registers this Flatpickr plugin.\n   * @param calendar The Flatpickr instance.\n   */\n  const register = () => {\n    fp.loadedPlugins.push('carbonFlatpickrIconPlugin');\n  };\n\n  return {\n    onParseConfig: parseConfig,\n    onReady: [register, setIcon],\n  };\n};\n"],"file":"icon-plugin.js"}