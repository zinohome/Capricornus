{"version":3,"sources":["components/date-picker/focus-plugin.ts"],"names":["on","config","fp","focusCalendar","calendarContainer","selectedDateElem","todayDateElem","focus","handleBlur","target","relatedTarget","isOpen","contains","Promise","resolve","then","rootNode","getRootNode","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","_lastFocusInput","inputTo","inputFrom","close","handleInputKeydown","event","key","preventDefault","open","setTimeout","handleInputFocus","release","_hBXCEDatePickerFocusPluginBlur","_hBXCEDatePickerFocusPluginFocusTo","_hBXCEDatePickerFocusPluginFocusFrom","_hBXCEDatePickerFocusPluginKeydownTo","_hBXCEDatePickerFocusPluginKeydownFrom","init","register","loadedPlugins","push","onReady","onDestroy"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport on from 'carbon-components/es/globals/js/misc/on';\nimport Handle from '../../globals/internal/handle';\nimport BXDatePickerInput from './date-picker-input';\n\n/**\n * The configuration for the Flatpickr plugin to set CSS classes specific to this design system.\n */\nexport interface DatePickerFocusPluginConfig {\n  /**\n   * The input box to enter starting date.\n   */\n  inputFrom: BXDatePickerInput;\n\n  /**\n   * The input box to enter end date.\n   */\n  inputTo?: BXDatePickerInput;\n}\n\n/**\n * `FlatpickrInstance` with additional properties used for `carbonFlatpickrFocusPlugin`.\n */\nexport interface ExtendedFlatpickrInstanceFocusPlugin extends FlatpickrInstance {\n  /**\n   * The handle for `blur` event handler in calendar dropdown.\n   */\n  _hBXCEDatePickerFocusPluginBlur?: Handle | null;\n\n  /**\n   * The handle for `keydown` event handler in the `<input>` for the starting date.\n   */\n  _hBXCEDatePickerFocusPluginKeydownFrom?: Handle | null;\n\n  /**\n   * The handle for `keydown` event handler in the `<input>` for the end date.\n   */\n  _hBXCEDatePickerFocusPluginKeydownTo?: Handle | null;\n\n  /**\n   * The handle for `focus` event handler in the `<input>` for the starting date.\n   */\n  _hBXCEDatePickerFocusPluginFocusFrom?: Handle | null;\n\n  /**\n   * The handle for `focus` event handler in the `<input>` for the end date.\n   */\n  _hBXCEDatePickerFocusPluginFocusTo?: Handle | null;\n\n  /**\n   * Lastly focused `<input>` for starting/end date.\n   */\n  _lastFocusInput?: HTMLInputElement;\n}\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to manage focus to align with the UX pattern in our design system.\n */\nexport default (config: DatePickerFocusPluginConfig): Plugin =>\n  (fp: ExtendedFlatpickrInstanceFocusPlugin) => {\n    /**\n     * Focuses on calendar dropdown.\n     */\n    const focusCalendar = () => {\n      const { calendarContainer, selectedDateElem, todayDateElem } = fp;\n      (selectedDateElem || todayDateElem || calendarContainer).focus();\n    };\n\n    /**\n     * Handles `blur` event to move the focus back to the `<input>`.\n     */\n    const handleBlur = ({ target, relatedTarget }: FocusEvent) => {\n      // Obtains `beingUpdated` up-front because it'll be flushed out shortly\n      const { calendarContainer, isOpen } = fp;\n      if (isOpen && calendarContainer.contains(target as Node) && !calendarContainer.contains(relatedTarget as Node)) {\n        Promise.resolve().then(() => {\n          const rootNode = (target as Node).getRootNode();\n          // This `blur` event handler can be called from Flatpickr's code cleaning up calenar dropdown's DOM,\n          // and changing focus in such condition causes removing an orphaned DOM node,\n          // because Flatpickr redraws the calendar dropdown when the `<input>` gets focus.\n          if (rootNode.nodeType === Node.DOCUMENT_NODE || rootNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            if (fp._lastFocusInput === config.inputTo) {\n              config.inputTo!.focus();\n            } else {\n              config.inputFrom.focus();\n            }\n            // Closing after moving focus. Reversing the order will cause re-opening calendar dropdown upon focusing\n            fp.close();\n          }\n        });\n      }\n    };\n\n    /**\n     * Handles `keydown` event to move focus on calendar dropdown.\n     */\n    const handleInputKeydown = (event: KeyboardEvent) => {\n      const { key } = event;\n      if (key === 'ArrowDown' || key === 'Down' || key === 'Enter') {\n        event.preventDefault();\n        fp.open();\n        if (key !== 'Enter') {\n          focusCalendar();\n        } else {\n          // Hitting Enter key blurs the `<input>`, causing any element to lose focus\n          setTimeout(focusCalendar, 0);\n        }\n      }\n    };\n\n    /**\n     * Handles `focus` event on `<input>` for starting/end date to track the lastly focused one.\n     */\n    const handleInputFocus = ({ target }: FocusEvent) => {\n      fp._lastFocusInput = target as HTMLInputElement;\n    };\n\n    /**\n     * Releases event listeners used in this Flatpickr plugin.\n     */\n    const release = () => {\n      if (fp._hBXCEDatePickerFocusPluginBlur) {\n        fp._hBXCEDatePickerFocusPluginBlur = fp._hBXCEDatePickerFocusPluginBlur.release();\n      }\n      if (fp._hBXCEDatePickerFocusPluginFocusTo) {\n        fp._hBXCEDatePickerFocusPluginFocusTo = fp._hBXCEDatePickerFocusPluginFocusTo.release();\n      }\n      if (fp._hBXCEDatePickerFocusPluginFocusFrom) {\n        fp._hBXCEDatePickerFocusPluginFocusFrom = fp._hBXCEDatePickerFocusPluginFocusFrom.release();\n      }\n      if (fp._hBXCEDatePickerFocusPluginKeydownTo) {\n        fp._hBXCEDatePickerFocusPluginKeydownTo = fp._hBXCEDatePickerFocusPluginKeydownTo.release();\n      }\n      if (fp._hBXCEDatePickerFocusPluginKeydownFrom) {\n        fp._hBXCEDatePickerFocusPluginKeydownFrom = fp._hBXCEDatePickerFocusPluginKeydownFrom.release();\n      }\n    };\n\n    /**\n     * Sets up event listeners used for this Flatpickr plugin.\n     */\n    const init = () => {\n      release();\n      const { inputFrom, inputTo } = config;\n      fp._hBXCEDatePickerFocusPluginBlur = on(fp.calendarContainer, 'blur', handleBlur, true);\n      fp._hBXCEDatePickerFocusPluginKeydownFrom = on(inputFrom, 'keydown', handleInputKeydown);\n      if (inputTo) {\n        fp._hBXCEDatePickerFocusPluginKeydownTo = on(inputTo, 'keydown', handleInputKeydown);\n      }\n      fp._hBXCEDatePickerFocusPluginFocusFrom = on(inputFrom, 'focus', handleInputFocus);\n      if (inputTo) {\n        fp._hBXCEDatePickerFocusPluginFocusTo = on(inputTo, 'focus', handleInputFocus);\n      }\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     * @param calendar The Flatpickr instance.\n     */\n    const register = () => {\n      fp.loadedPlugins.push('carbonFlatpickrFocusPlugin');\n    };\n\n    return {\n      onReady: [register, init],\n      onDestroy: release,\n    };\n  };\n"],"file":"focus-plugin.js"}