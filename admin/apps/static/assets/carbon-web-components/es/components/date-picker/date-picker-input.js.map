{"version":3,"sources":["components/date-picker/date-picker-input.ts"],"names":["classMap","html","property","query","customElement","LitElement","Calendar16","settings","ifNonNull","FocusMixin","ValidityMixin","INPUT_SIZE","DATE_PICKER_INPUT_COLOR_SCHEME","DATE_PICKER_INPUT_KIND","DATE_PICKER_INPUT_SIZE_HORIZONTAL","styles","prefix","BXDatePickerInput","validityMessage","_slotValidityMessage","slotValidityMessage","assignedNodes","length","event","target","_iconNode","input","focus","requestUpdate","value","kind","SIMPLE","undefined","class","role","children","_hasValidityMessage","hasValidityMessage","_handleSlotChangeValidityMessage","handleSlotChangeValidityMessage","attribute","reflect","REGULAR","type","Boolean","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","constructor","disabled","hideLabel","invalid","labelText","pattern","defaultPattern","placeholder","size","defaultType","_handleClickWrapper","handleClickWrapper","_handleInput","handleInput","labelClasses","inputClasses","_renderIcon","_renderValidityMessage"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport Calendar16 from '@carbon/icons/lib/calendar/16';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport ifNonNull from '../../globals/directives/if-non-null';\nimport FocusMixin from '../../globals/mixins/focus';\nimport ValidityMixin from '../../globals/mixins/validity';\nimport { INPUT_SIZE } from '../input/input';\nimport { DATE_PICKER_INPUT_COLOR_SCHEME, DATE_PICKER_INPUT_KIND, DATE_PICKER_INPUT_SIZE_HORIZONTAL } from './defs';\nimport styles from './date-picker.scss';\n\nexport { DATE_PICKER_INPUT_COLOR_SCHEME, DATE_PICKER_INPUT_KIND, DATE_PICKER_INPUT_SIZE_HORIZONTAL };\n\nconst { prefix } = settings;\n\n/**\n * The input box for date picker.\n * @element bx-date-picker-input\n */\n@customElement(`${prefix}-date-picker-input`)\nclass BXDatePickerInput extends ValidityMixin(FocusMixin(LitElement)) {\n  /**\n   * The calendar icon.\n   */\n  @query(`.${prefix}--date-picker__icon`)\n  private _iconNode!: SVGElement;\n\n  /**\n   * The `<slot>` for the validity message.\n   */\n  @query('slot[name=\"validity-message\"]')\n  private _slotValidityMessage!: HTMLSlotElement;\n\n  /**\n   * `true` if validity message is given via `validityMessage` property or via `<slot name=\"validity-message\">`.\n   */\n  private get _hasValidityMessage() {\n    const { validityMessage, _slotValidityMessage: slotValidityMessage } = this;\n    return validityMessage || (slotValidityMessage && slotValidityMessage.assignedNodes.length > 0);\n  }\n\n  /**\n   * Handles `click` event on the calendar icon.\n   * @param event The event.\n   */\n  private _handleClickWrapper(event: MouseEvent) {\n    if (event.target === this._iconNode) {\n      this.input.focus();\n    }\n  }\n\n  /**\n   * Handles `slotchange` event on `<slot name=\"validity-message\">`.\n   */\n  private _handleSlotChangeValidityMessage() {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `input` event on `<input>` in the shadow DOM.\n   * @param event The event.\n   */\n  private _handleInput({ target }: Event) {\n    const { value } = target as HTMLInputElement;\n    this.value = value;\n  }\n\n  /**\n   * @returns The template for the the calendar icon.\n   */\n  private _renderIcon() {\n    return this.kind === DATE_PICKER_INPUT_KIND.SIMPLE\n      ? undefined\n      : Calendar16({\n          class: `${prefix}--date-picker__icon`,\n          role: 'img',\n          children: [html` <title>Open calendar</title> `],\n        });\n  }\n\n  /**\n   * @returns The template for the the validity message.\n   */\n  private _renderValidityMessage() {\n    const {\n      validityMessage,\n      _hasValidityMessage: hasValidityMessage,\n      _handleSlotChangeValidityMessage: handleSlotChangeValidityMessage,\n    } = this;\n    return html`\n      <div ?hidden=\"${!hasValidityMessage}\" class=\"${prefix}--form-requirement\">\n        <slot name=\"validity-message\" @slotchange=\"${handleSlotChangeValidityMessage}\">${validityMessage}</slot>\n      </div>\n    `;\n  }\n\n  /**\n   * The `<input>`, used for Flatpickr to grab.\n   */\n  @query('input')\n  input!: HTMLInputElement;\n\n  /**\n   * The color scheme.\n   */\n  @property({ attribute: 'color-scheme', reflect: true })\n  colorScheme = DATE_PICKER_INPUT_COLOR_SCHEME.REGULAR;\n\n  /**\n   * `true` if the check box should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if the label should be hidden.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-label' })\n  hideLabel = false;\n\n  /**\n   * Controls the invalid state and visibility of the `validityMessage`.\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * Date picker input kind.\n   */\n  @property({ reflect: true })\n  kind = DATE_PICKER_INPUT_KIND.SIMPLE;\n\n  /**\n   * The label text.\n   */\n  @property({ attribute: 'label-text' })\n  labelText!: string;\n\n  /**\n   * The `pattern` attribute for the `<input>` in the shadow DOM.\n   */\n  @property()\n  pattern!: string;\n\n  /**\n   * The placeholder text.\n   */\n  @property()\n  placeholder!: string;\n\n  /**\n   * `true` if the value is required.\n   */\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  /**\n   * The special validity message for `required`.\n   */\n  @property({ attribute: 'required-validity-message' })\n  requiredValidityMessage = 'Please fill out this field.';\n\n  /**\n   * Vertical size of this date picker input.\n   */\n  @property({ attribute: 'size', reflect: true })\n  size = INPUT_SIZE.REGULAR;\n\n  /**\n   * Horizontal size of this date picker input.\n   * Effective only when `kind` property is `DATE_PICKER_INPUT_KIND.SIMPLE`.\n   */\n  @property({ attribute: 'size-horizontal', reflect: true })\n  sizeHorizontal = DATE_PICKER_INPUT_SIZE_HORIZONTAL.REGULAR;\n\n  /**\n   * The `type` attribute for the `<input>` in the shadow DOM.\n   */\n  @property()\n  type!: string;\n\n  /**\n   * The validity message.\n   * If present and non-empty, this date picker input shows the UI of its invalid state.\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  /**\n   * The value.\n   */\n  @property()\n  value!: string;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  render() {\n    const constructor = this.constructor as typeof BXDatePickerInput;\n    const {\n      disabled,\n      hideLabel,\n      invalid,\n      labelText,\n      pattern = constructor.defaultPattern,\n      placeholder,\n      size,\n      type = constructor.defaultType,\n      value,\n      _handleClickWrapper: handleClickWrapper,\n      _handleInput: handleInput,\n    } = this;\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--visually-hidden`]: hideLabel,\n      [`${prefix}--label--disabled`]: disabled,\n    });\n    const inputClasses = classMap({\n      [`${prefix}--date-picker__input`]: true,\n      [`${prefix}--date-picker__input--${size}`]: size,\n    });\n    return html`\n      <label for=\"input\" class=\"${labelClasses}\">\n        <slot name=\"label-text\">${labelText}</slot>\n      </label>\n      <div class=\"${prefix}--date-picker-input__wrapper\" @click=\"${handleClickWrapper}\">\n        <input\n          id=\"input\"\n          type=\"${type}\"\n          class=\"${inputClasses}\"\n          ?disabled=\"${disabled}\"\n          pattern=\"${pattern}\"\n          placeholder=\"${ifNonNull(placeholder)}\"\n          .value=\"${ifNonNull(value)}\"\n          ?data-invalid=\"${invalid}\"\n          @input=\"${handleInput}\" />\n        ${this._renderIcon()}\n      </div>\n      ${this._renderValidityMessage()}\n    `;\n  }\n\n  /**\n   * The default value for `pattern` property.\n   */\n  static defaultPattern = '\\\\d{1,2}\\\\/\\\\d{1,2}\\\\/\\\\d{4}';\n\n  /**\n   * The default value for `type` property.\n   */\n  static defaultType = 'text';\n\n  /**\n   * A selector that will return the parent date picker.\n   */\n  static get selectorParent() {\n    return `${prefix}-date-picker`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXDatePickerInput;\n"],"file":"date-picker-input.js"}