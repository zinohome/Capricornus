{"version":3,"sources":["components/date-picker/date-picker.ts"],"names":["html","property","query","customElement","LitElement","flatpickr","settings","FormMixin","HostListenerMixin","HostListener","getISODateString","parseISODateString","appendToPlugin","cssClassPlugin","fixEventsPlugin","focusPlugin","iconPlugin","monthSelectPlugin","rangePlugin","shadowDOMEventPlugin","stateHandshakePlugin","styles","prefix","DATE_PICKER_MODE","BXDatePicker","selectorInputFrom","selectorInputTo","constructor","querySelector","RANGE","SINGLE","SIMPLE","classCalendarContainer","classMonth","classWeekdays","classDays","classWeekday","classDay","classNoBorder","_selectorFlatpickrMonthYearContainer","selectorFlatpickrMonthYearContainer","_selectorFlatpickrYearContainer","selectorFlatpickrYearContainer","_selectorFlatpickrCurrentMonth","selectorFlatpickrCurrentMonth","_selectorFlatpickrMonth","selectorFlatpickrMonth","_selectorFlatpickrWeekdays","selectorFlatpickrWeekdays","_selectorFlatpickrDays","selectorFlatpickrDays","_selectorFlatpickrWeekday","selectorFlatpickrWeekday","_selectorFlatpickrDay","selectorFlatpickrDay","_classFlatpickrCurrentMonth","classFlatpickrCurrentMonth","_classFlatpickrToday","classFlatpickrToday","_floatingMenuContainerNode","floatingMenuContainerNode","_mode","mode","inputFrom","inputTo","plugins","appendTo","push","input","locale","defaultLocale","enabledRange","_dateInteractNode","dateInteractNode","_datePickerPlugins","_handleFlatpickrError","handleFlatpickrError","positionElement","minDate","undefined","maxDate","split","allowInput","dateFormat","defaultDateFormat","disableMobile","errorHandler","detail","_value","selectedDates","map","date","join","event","formData","disabled","name","value","append","target","oldDateInteractNode","assignedNodes","find","node","nodeType","Node","ELEMENT_NODE","matches","_instantiateDatePicker","error","dispatchEvent","CustomEvent","eventFlatpickrError","bubbles","cancelable","composed","_releaseDatePicker","calendar","_datePickerOptions","destroy","attribute","type","Boolean","reflect","oldValue","requestUpdate","changedProperties","open","has","set","dates","item","some","isNaN","Number","Error","close","forEach","filter","startDate","endDate","setDate","i","formatDate","Date","config","_handleSlotChange","handleSlotChange","l10ns","default"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport flatpickr from 'flatpickr';\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Locale as FlatpickrLocale } from 'flatpickr/dist/types/locale';\nimport { Options as FlatpickrOptions, Plugin as FlatpickrPlugin } from 'flatpickr/dist/types/options';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport FormMixin from '../../globals/mixins/form';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { getISODateString, parseISODateString } from './iso-date';\nimport BXDatePickerInput from './date-picker-input';\nimport appendToPlugin from './append-to-plugin';\nimport cssClassPlugin from './css-class-plugin';\nimport fixEventsPlugin from './fix-events-plugin';\nimport focusPlugin from './focus-plugin';\nimport iconPlugin from './icon-plugin';\nimport monthSelectPlugin from './month-select-plugin';\nimport rangePlugin from './range-plugin';\nimport shadowDOMEventPlugin from './shadow-dom-events-plugin';\nimport stateHandshakePlugin from './state-handshake-plugin';\nimport styles from './date-picker.scss';\n\nconst { prefix } = settings;\n\n/**\n * Date picker modes.\n */\nenum DATE_PICKER_MODE {\n  /**\n   * Simple mode, without calendar dropdown.\n   */\n  SIMPLE = 'simple',\n\n  /**\n   * Single date mode.\n   */\n  SINGLE = 'single',\n\n  /**\n   * Range mode.\n   */\n  RANGE = 'range',\n}\n\n/**\n * Date picker.\n * @element bx-date-picker\n * @fires bx-date-picker-changed - The custom event fired on this element when Flatpickr updates its value.\n */\n@customElement(`${prefix}-date-picker`)\nclass BXDatePicker extends HostListenerMixin(FormMixin(LitElement)) {\n  /**\n   * The slotted `<bx-date-input kind=\"from\">`.\n   */\n  private _dateInteractNode: BXDatePickerInput | null = null;\n\n  /**\n   * The element to put calendar dropdown in.\n   */\n  @query('#floating-menu-container')\n  private _floatingMenuContainerNode!: HTMLDivElement;\n\n  /**\n   * The internal placeholder for the `value` property.\n   */\n  private _value!: string;\n\n  /**\n   * @returns The effective date picker mode, determined by the child `<bx-date-picker-input>`.\n   */\n  private get _mode() {\n    const { selectorInputFrom, selectorInputTo } = this.constructor as typeof BXDatePicker;\n    if (this.querySelector(selectorInputTo)) {\n      return DATE_PICKER_MODE.RANGE;\n    }\n    if (this.querySelector(selectorInputFrom)) {\n      return DATE_PICKER_MODE.SINGLE;\n    }\n    return DATE_PICKER_MODE.SIMPLE;\n  }\n\n  /**\n   * @returns The Flatpickr plugins to use.\n   */\n  private get _datePickerPlugins(): FlatpickrPlugin[] {\n    const {\n      classCalendarContainer,\n      classMonth,\n      classWeekdays,\n      classDays,\n      classWeekday,\n      classDay,\n      classNoBorder,\n      selectorInputFrom,\n      selectorInputTo,\n      _selectorFlatpickrMonthYearContainer: selectorFlatpickrMonthYearContainer,\n      _selectorFlatpickrYearContainer: selectorFlatpickrYearContainer,\n      _selectorFlatpickrCurrentMonth: selectorFlatpickrCurrentMonth,\n      _selectorFlatpickrMonth: selectorFlatpickrMonth,\n      _selectorFlatpickrWeekdays: selectorFlatpickrWeekdays,\n      _selectorFlatpickrDays: selectorFlatpickrDays,\n      _selectorFlatpickrWeekday: selectorFlatpickrWeekday,\n      _selectorFlatpickrDay: selectorFlatpickrDay,\n      _classFlatpickrCurrentMonth: classFlatpickrCurrentMonth,\n      _classFlatpickrToday: classFlatpickrToday,\n    } = this.constructor as typeof BXDatePicker;\n    const { _floatingMenuContainerNode: floatingMenuContainerNode, _mode: mode } = this;\n    const inputFrom = this.querySelector(selectorInputFrom);\n    const inputTo = this.querySelector(selectorInputTo);\n    const plugins = [\n      appendToPlugin({ appendTo: floatingMenuContainerNode }),\n      cssClassPlugin({\n        classCalendarContainer,\n        classMonth,\n        classWeekdays,\n        classDays,\n        classWeekday,\n        classDay,\n        classNoBorder,\n        selectorFlatpickrMonth,\n        selectorFlatpickrWeekdays,\n        selectorFlatpickrDays,\n        selectorFlatpickrWeekday,\n        selectorFlatpickrDay,\n        classFlatpickrToday,\n      }),\n      fixEventsPlugin({ inputFrom: inputFrom as BXDatePickerInput, inputTo: inputTo as BXDatePickerInput }),\n      focusPlugin({ inputFrom: inputFrom as BXDatePickerInput, inputTo: inputTo as BXDatePickerInput }),\n      iconPlugin(),\n      monthSelectPlugin({\n        selectorFlatpickrMonthYearContainer,\n        selectorFlatpickrYearContainer,\n        selectorFlatpickrCurrentMonth,\n        classFlatpickrCurrentMonth,\n      }),\n      shadowDOMEventPlugin(),\n      stateHandshakePlugin(this),\n    ];\n    if (mode === DATE_PICKER_MODE.RANGE) {\n      // Flatpickr runs event handlers of last registered plugins first.\n      // Ensures `onValueUpdate` of `rangePlugin` runs first\n      // given Flatpickr puts `01/01/1970 to 01/02/1970` to from date\n      // where `rangePlugin` overrides it to separate them to from/to dates.\n      // We want to ensure our handler of `onValueUpdate` (notably one in `<bx-date-picker-input>`)\n      // gets the `<input>` value set by `rangePlugin` instead of Flatpickr core.\n      plugins.push(rangePlugin({ input: inputTo as HTMLInputElement }));\n    }\n    return plugins;\n  }\n\n  /**\n   * @returns The options to instantiate Flatpickr with.\n   */\n  private get _datePickerOptions(): FlatpickrOptions {\n    const {\n      locale = (this.constructor as typeof BXDatePicker).defaultLocale,\n      enabledRange,\n      _dateInteractNode: dateInteractNode,\n      _datePickerPlugins: plugins,\n      _handleFlatpickrError: handleFlatpickrError,\n    } = this;\n    // We use `<bx-date-picker-input>` to communicate values/events with Flatpickr,\n    // but want to use `<input>` in shadow DOM to base the calendar dropdown's position on\n    const { input: positionElement } = dateInteractNode!;\n    const [minDate = undefined, maxDate = undefined] = !enabledRange ? [] : enabledRange.split('/');\n    return {\n      allowInput: true,\n      dateFormat: this.dateFormat ?? (this.constructor as typeof BXDatePicker).defaultDateFormat,\n      disableMobile: true,\n      errorHandler: handleFlatpickrError,\n      locale,\n      maxDate,\n      minDate,\n      positionElement,\n      plugins,\n    };\n  }\n\n  /**\n   * Handles `${prefix}-date-picker-changed` event on this element.\n   */\n  @HostListener('eventChange')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleChange = ({ detail }: CustomEvent) => {\n    this._value = detail.selectedDates.map(date => getISODateString(date)).join('/');\n  };\n\n  _handleFormdata(event: Event) {\n    const { formData } = event as any; // TODO: Wait for `FormDataEvent` being available in `lib.dom.d.ts`\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * Handles `slotchange` event in the `<slot>`.\n   */\n  private _handleSlotChange({ target }: Event) {\n    const { _dateInteractNode: oldDateInteractNode } = this;\n    const dateInteractNode = (target as HTMLSlotElement)\n      .assignedNodes()\n      .find(\n        node =>\n          node.nodeType === Node.ELEMENT_NODE &&\n          (node as HTMLElement).matches((this.constructor as typeof BXDatePicker).selectorInputFrom)\n      );\n    if (oldDateInteractNode !== dateInteractNode) {\n      this._dateInteractNode = dateInteractNode as BXDatePickerInput;\n      this._instantiateDatePicker();\n    }\n  }\n\n  /**\n   * Fires a custom event to notify an error in Flatpickr.\n   */\n  private _handleFlatpickrError = (error: Error) => {\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof BXDatePicker).eventFlatpickrError, {\n        bubbles: true,\n        cancelable: false,\n        composed: true,\n        detail: {\n          error,\n        },\n      })\n    );\n  };\n\n  /**\n   * Instantiates Flatpickr.\n   * @returns The Flatpickr instance.\n   */\n  private _instantiateDatePicker() {\n    this._releaseDatePicker();\n    const { _dateInteractNode: dateInteractNode } = this;\n    // `this._dateInteractNode` won't be there unless there is a slotted `<bx-date-input type=\"from\">`,\n    // which means Flatpickr will never be instantiated in \"simple\" mode.\n    if (dateInteractNode && dateInteractNode.input) {\n      this.calendar = flatpickr(dateInteractNode as any, this._datePickerOptions);\n    }\n    return this.calendar;\n  }\n\n  /**\n   * Releases Flatpickr instances.\n   */\n  private _releaseDatePicker() {\n    if (this.calendar) {\n      this.calendar.destroy();\n      this.calendar = null;\n    }\n    return this.calendar;\n  }\n\n  /**\n   * The Flatpickr instance.\n   */\n  calendar: FlatpickrInstance | null = null;\n\n  /**\n   * The date format to let Flatpickr use.\n   */\n  @property({ attribute: 'date-format' })\n  dateFormat!: string;\n\n  /**\n   * Controls the disabled state of the input\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The localization data.\n   */\n  @property({ attribute: false })\n  locale!: FlatpickrLocale;\n\n  /**\n   * The date range that a user can pick in calendar dropdown.\n   */\n  @property({ attribute: 'enabled-range' })\n  enabledRange!: string;\n\n  /**\n   * Name for the input in the `FormData`\n   */\n  @property()\n  name = '';\n\n  /**\n   * `true` if the date picker should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * The date(s) in ISO8601 format (date portion only), for range mode, '/' is used for separate start/end dates.\n   */\n  @property()\n  get value() {\n    return this._value;\n  }\n\n  set value(value: string) {\n    const { _value: oldValue } = this;\n    this._value = value;\n    this.requestUpdate('value', oldValue);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._instantiateDatePicker();\n  }\n\n  disconnectedCallback() {\n    this._releaseDatePicker();\n    super.disconnectedCallback();\n  }\n\n  updated(changedProperties) {\n    const { calendar, disabled, open } = this;\n    const { selectorInputFrom, selectorInputTo } = this.constructor as typeof BXDatePicker;\n    const inputFrom = this.querySelector(selectorInputFrom) as BXDatePickerInput;\n    const inputTo = this.querySelector(selectorInputTo) as BXDatePickerInput;\n    if (calendar && changedProperties.has('dateFormat')) {\n      const { dateFormat } = this;\n      calendar.set({ dateFormat });\n    }\n    if (changedProperties.has('enabledRange')) {\n      const { enabledRange } = this;\n      const dates = enabledRange.split('/').map(item => (!item ? undefined : parseISODateString(item))); // Allows empty start/end\n      if (dates.some(item => Boolean(item && isNaN(Number(item))))) {\n        // Allows empty start/end\n        throw new Error(`Wrong date format found in \\`enabledRange\\` property: ${enabledRange}`);\n      }\n      const [minDate, maxDate] = dates;\n      if (minDate && maxDate && minDate > maxDate) {\n        throw new Error(\n          `In \\`enabledRange\\` property, the end date shouldn't be smaller than the start date. You have: ${enabledRange}`\n        );\n      }\n      if (calendar) {\n        calendar.set({ minDate, maxDate });\n      }\n    }\n    if (changedProperties.has('open') && calendar) {\n      if (open) {\n        calendar.open();\n      } else {\n        calendar.close();\n      }\n    }\n    if (changedProperties.has('disabled')) {\n      [inputFrom, inputTo].forEach(input => {\n        if (input) {\n          input.disabled = disabled;\n        }\n      });\n    }\n    if (changedProperties.has('value')) {\n      const { value } = this;\n      const dates = value\n        .split('/')\n        .filter(Boolean)\n        .map(item => parseISODateString(item));\n      if (dates.some(item => isNaN(Number(item)))) {\n        throw new Error(`Wrong date format found in \\`value\\` property: ${value}`);\n      }\n      const [startDate, endDate] = dates;\n      if (startDate && endDate && startDate > endDate) {\n        throw new Error(`In \\`value\\` property, the end date shouldn't be smaller than the start date. You have: ${value}`);\n      }\n      if (calendar) {\n        calendar.setDate(dates);\n        [inputFrom, inputTo].forEach((input, i) => {\n          if (input) {\n            input.value = !dates[i] ? '' : calendar.formatDate(new Date(dates[i]), calendar.config.dateFormat);\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    const { _handleSlotChange: handleSlotChange } = this;\n    return html`\n      <a class=\"${prefix}--visually-hidden\" href=\"javascript:void 0\" role=\"navigation\"></a>\n      <slot @slotchange=\"${handleSlotChange}\"></slot>\n      <div id=\"floating-menu-container\"></div>\n      <a class=\"${prefix}--visually-hidden\" href=\"javascript:void 0\" role=\"navigation\"></a>\n    `;\n  }\n\n  /**\n   * The CSS selector for Flatpickr's month/year portion.\n   */\n  private static _selectorFlatpickrMonthYearContainer = '.flatpickr-current-month';\n\n  /**\n   * The CSS selector for Flatpickr's year portion.\n   */\n  private static _selectorFlatpickrYearContainer = '.numInputWrapper';\n\n  /**\n   * The CSS selector for the inner element of Flatpickr's month portion.\n   */\n  private static _selectorFlatpickrCurrentMonth = '.cur-month';\n\n  /**\n   * The CSS selector for Flatpickr's month navigator.\n   */\n  private static _selectorFlatpickrMonth = '.flatpickr-month';\n\n  /**\n   * The CSS selector for Flatpickr's container of the weekdays.\n   */\n  private static _selectorFlatpickrWeekdays = '.flatpickr-weekdays';\n\n  /**\n   * The CSS selector for Flatpickr's container of the days.\n   */\n  private static _selectorFlatpickrDays = '.flatpickr-days';\n\n  /**\n   * The CSS selector applied to Flatpickr's each weekdays.\n   */\n  private static _selectorFlatpickrWeekday = '.flatpickr-weekday';\n\n  /**\n   * The CSS selector applied to Flatpickr's each days.\n   */\n  private static _selectorFlatpickrDay = '.flatpickr-day';\n\n  /**\n   * The CSS class for the inner element of Flatpickr's month portion.\n   */\n  private static _classFlatpickrCurrentMonth = 'cur-month';\n\n  /**\n   * The CSS class applied to Flatpickr's \"today\" highlight.\n   */\n  private static _classFlatpickrToday = 'today';\n\n  /**\n   * The CSS class for the calendar dropdown.\n   */\n  static get classCalendarContainer() {\n    return `${prefix}--date-picker__calendar`;\n  }\n\n  /**\n   * The CSS class for the month navigator.\n   */\n  static get classMonth() {\n    return `${prefix}--date-picker__month`;\n  }\n\n  /**\n   * The CSS class for the container of the weekdays.\n   */\n  static get classWeekdays() {\n    return `${prefix}--date-picker__weekdays`;\n  }\n\n  /**\n   * The CSS class for the container of the days.\n   */\n  static get classDays() {\n    return `${prefix}--date-picker__days`;\n  }\n\n  /**\n   * The CSS class applied to each weekdays.\n   */\n  static get classWeekday() {\n    return `${prefix}--date-picker__weekday`;\n  }\n\n  /**\n   * The CSS class applied to each days.\n   */\n  static get classDay() {\n    return `${prefix}--date-picker__day`;\n  }\n\n  /**\n   * The CSS class applied to the \"today\" highlight if there are any dates selected.\n   */\n  static classNoBorder = 'no-border';\n\n  /**\n   * The default date format.\n   */\n  static defaultDateFormat = 'm/d/Y';\n\n  /**\n   * The default localization data.\n   */\n  static defaultLocale = flatpickr.l10ns.default;\n\n  /**\n   * A selector that will return the `<input>` to enter starting date.\n   */\n  static get selectorInputFrom() {\n    return `${prefix}-date-picker-input[kind=\"single\"],${prefix}-date-picker-input[kind=\"from\"]`;\n  }\n\n  /**\n   * A selector that will return the `<input>` to enter end date.\n   */\n  static get selectorInputTo() {\n    return `${prefix}-date-picker-input[kind=\"to\"]`;\n  }\n\n  /**\n   * The name of the custom event when Flatpickr throws an error.\n   */\n  static get eventFlatpickrError() {\n    return `${prefix}-date-picker-flatpickr-error`;\n  }\n\n  /**\n   * The name of the custom event fired on this element when Flatpickr updates its value.\n   */\n  static get eventChange() {\n    return `${prefix}-date-picker-changed`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXDatePicker;\n"],"file":"date-picker.js"}