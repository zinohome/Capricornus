{"version":3,"sources":["components/date-picker/range-plugin.ts"],"names":["rangePlugin","config","factory","position","fp","origRangePlugin","onReady","origOnReady","Object","assign","onChange","onPreCalendarPosition","onValueUpdate","selectedDates","startDateFormatted","endDateFormatted","map","item","formatDate","dateFormat","_input","value","input","call","ignoredFocusElements","push","elem","shadowRoot","filter","Boolean"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,WAAP,MAAoC,oCAApC;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBC,MAAD,IAA4B;AACzC,QAAMC,OAAO,GAAGF,WAAW;AAAGG,IAAAA,QAAQ,EAAE;AAAb,KAAwBF,MAAxB,EAA3B;AACA,SAAQG,EAAD,IAA2B;AAChC,UAAMC,eAAe,GAAGH,OAAO,CAACE,EAAD,CAA/B;AACA,UAAM;AAAEE,MAAAA,OAAO,EAAEC;AAAX,QAA2BF,eAAjC;AACA,WAAOG,MAAM,CAACC,MAAP,CAAcJ,eAAd,EAA+B;AACpCK,MAAAA,QAAQ,GAAG,CAAE,CADuB;;AAEpCC,MAAAA,qBAAqB,GAAG,CAAE,CAFU;;AAGpCC,MAAAA,aAAa,CAACC,aAAD,EAAgB;AAC3B,cAAM,CAACC,kBAAD,EAAqBC,gBAArB,IAAyCF,aAAa,CAACG,GAAd,CAAkBC,IAAI,IAAIb,EAAE,CAACc,UAAH,CAAcD,IAAd,EAAoBb,EAAE,CAACH,MAAH,CAAUkB,UAA9B,CAA1B,CAA/C;;AACA,YAAIL,kBAAJ,EAAwB;AACtBV,UAAAA,EAAE,CAACgB,MAAH,CAAUC,KAAV,GAAkBP,kBAAlB;AACD;;AACD,YAAIC,gBAAJ,EAAsB;AACnBd,UAAAA,MAAM,CAACqB,KAAR,CAAmCD,KAAnC,GAA2CN,gBAA3C;AACD;AACF,OAXmC;;AAYpCT,MAAAA,OAAO,GAAG;AACPC,QAAAA,WAAD,CAA0BgB,IAA1B,CAA+B,IAA/B;AACA,cAAM;AAAEC,UAAAA;AAAF,YAA2BpB,EAAE,CAACH,MAApC;AACAuB,QAAAA,oBAAoB,CAACC,IAArB,CAA0B,GAAGD,oBAAoB,CAACR,GAArB,CAAyBU,IAAI,IAAIA,IAAI,CAACC,UAAtC,EAAyDC,MAAzD,CAAgEC,OAAhE,CAA7B;AACD;;AAhBmC,KAA/B,CAAP;AAkBD,GArBD;AAsBD,CAxBD","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport rangePlugin, { Config } from 'flatpickr/dist/plugins/rangePlugin';\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\n\n/**\n * @param config Plugin configuration.\n * @returns\n *   An extension of Flatpickr `rangePlugin` that does the following:\n *\n *   * Better ensures the calendar dropdown is always aligned to the `<input>` for the starting date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1944\n *   * Disables the logic in Flatpickr `rangePlugin` that calculates the new range with the old selected date\n *     when user selects a date from calendar dropdown.\n *     We'd like to reset the selection when user re-opens calendar dropdown and re-selects a date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1958\n *   * Disables the logic in Flatpickr `rangePlugin` that closes the calendar dropdown\n *     when it's lauched from the `<input>` for the end date and user selects a date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1958\n *   * Ensures that the `<input>` in shadow DOM is treated as part of Flatpickr UI,\n *     by ensuring such `<input>` hits `.contains()` search from `fp.config.ignoredFocusElements`.\n *     Without that, Flatpickr clears the `<input>` when end date hasn't been selected yet (which we don't want).\n */\nexport default (config: Config): Plugin => {\n  const factory = rangePlugin({ position: 'left', ...config });\n  return (fp: FlatpickrInstance) => {\n    const origRangePlugin = factory(fp);\n    const { onReady: origOnReady } = origRangePlugin;\n    return Object.assign(origRangePlugin, {\n      onChange() {},\n      onPreCalendarPosition() {},\n      onValueUpdate(selectedDates) {\n        const [startDateFormatted, endDateFormatted] = selectedDates.map(item => fp.formatDate(item, fp.config.dateFormat));\n        if (startDateFormatted) {\n          fp._input.value = startDateFormatted;\n        }\n        if (endDateFormatted) {\n          (config.input as HTMLInputElement).value = endDateFormatted;\n        }\n      },\n      onReady() {\n        (origOnReady as Function).call(this);\n        const { ignoredFocusElements } = fp.config;\n        ignoredFocusElements.push(...ignoredFocusElements.map(elem => elem.shadowRoot as any).filter(Boolean));\n      },\n    });\n  };\n};\n"],"file":"range-plugin.js"}