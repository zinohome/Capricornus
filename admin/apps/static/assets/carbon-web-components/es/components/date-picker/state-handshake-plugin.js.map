{"version":3,"sources":["components/date-picker/state-handshake-plugin.ts"],"names":["datePicker","fp","setOpen","open","setClosed","handleChange","selectedDates","eventChange","constructor","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","register","_selectedDates","_value","calendar","loadedPlugins","push","onOpen","onClose","onChange","onReady"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA,gBAAgBA,UAAD,IACZC,EAAD,IAA2B;AACzB;AACJ;AACA;AACI,QAAMC,OAAO,GAAG,MAAM;AACpBF,IAAAA,UAAU,CAACG,IAAX,GAAkB,IAAlB;AACD,GAFD;AAIA;AACJ;AACA;;;AACI,QAAMC,SAAS,GAAG,MAAM;AACtBJ,IAAAA,UAAU,CAACG,IAAX,GAAkB,KAAlB;AACD,GAFD;AAIA;AACJ;AACA;AACA;;;AACI,QAAME,YAAY,GAAIC,aAAD,IAA2B;AAC9C,UAAM;AAAEC,MAAAA;AAAF,QAAkBP,UAAU,CAACQ,WAAnC;AACAR,IAAAA,UAAU,CAACS,aAAX,CACE,IAAIC,WAAJ,CAAgBH,WAAhB,EAA6B;AAC3BI,MAAAA,OAAO,EAAE,IADkB;AAE3BC,MAAAA,UAAU,EAAE,IAFe;AAG3BC,MAAAA,QAAQ,EAAE,IAHiB;AAI3BC,MAAAA,MAAM,EAAE;AACNR,QAAAA;AADM;AAJmB,KAA7B,CADF;AAUD,GAZD;AAcA;AACJ;AACA;AACA;;;AACI,QAAMS,QAAQ,GAAG,CAACC,cAAD,EAAiBC,MAAjB,EAAyBC,QAAzB,KAAyD;AACxElB,IAAAA,UAAU,CAACkB,QAAX,GAAsBA,QAAtB;AACAjB,IAAAA,EAAE,CAACkB,aAAH,CAAiBC,IAAjB,CAAsB,qCAAtB;AACD,GAHD;;AAKA,SAAO;AACLC,IAAAA,MAAM,EAAEnB,OADH;AAELoB,IAAAA,OAAO,EAAElB,SAFJ;AAGLmB,IAAAA,QAAQ,EAAElB,YAHL;AAILmB,IAAAA,OAAO,EAAE,CAACT,QAAD;AAJJ,GAAP;AAMD,CAjDH","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport BXDatePicker from './date-picker';\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to handshake states with `<bx-date-picker>`.\n */\nexport default (datePicker: BXDatePicker): Plugin =>\n  (fp: FlatpickrInstance) => {\n    /**\n     * Sets open state.\n     */\n    const setOpen = () => {\n      datePicker.open = true;\n    };\n\n    /**\n     * Sets closed state.\n     */\n    const setClosed = () => {\n      datePicker.open = false;\n    };\n\n    /**\n     * Propagates Flatpickr's `onChange` event to `<bx-date-picker>`.\n     * @param selectedDates The latest selected dates.\n     */\n    const handleChange = (selectedDates: Date[]) => {\n      const { eventChange } = datePicker.constructor as typeof BXDatePicker;\n      datePicker.dispatchEvent(\n        new CustomEvent(eventChange, {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: {\n            selectedDates,\n          },\n        })\n      );\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     * @param calendar The Flatpickr instance.\n     */\n    const register = (_selectedDates, _value, calendar: FlatpickrInstance) => {\n      datePicker.calendar = calendar;\n      fp.loadedPlugins.push('carbonFlatpickrStateHandshakePlugin');\n    };\n\n    return {\n      onOpen: setOpen,\n      onClose: setClosed,\n      onChange: handleChange,\n      onReady: [register],\n    };\n  };\n"],"file":"state-handshake-plugin.js"}