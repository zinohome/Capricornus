{"version":3,"sources":["components/date-picker/month-select-plugin.ts"],"names":["forEach","monthToStr","monthNumber","shorthand","locale","months","config","fp","setupElements","monthElements","yearElements","currentMonth","l10n","_createElement","createElement","selectorFlatpickrMonthYearContainer","selectorFlatpickrYearContainer","classFlatpickrCurrentMonth","elem","parentNode","removeChild","splice","length","map","monthElement","textContent","monthYearContainer","closest","insertBefore","updateCurrentMonth","selectorFlatpickrCurrentMonth","monthStr","currentMonthContainer","querySelectorAll","register","loadedPlugins","push","onMonthChange","onValueUpdate","onOpen","onReady"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Instance as FlatpickrInstance } from 'flatpickr/dist/types/instance';\nimport { Locale } from 'flatpickr/dist/types/locale';\nimport { Plugin } from 'flatpickr/dist/types/options';\nimport { forEach } from '../../globals/internal/collection-helpers';\n\n/**\n * @param monthNumber The month number.\n * @param shorthand `true` to use shorthand month.\n * @param locale The Flatpickr locale data.\n * @returns The month string.\n */\nconst monthToStr = (monthNumber: number, shorthand: boolean, locale: Locale) =>\n  locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber];\n\n/**\n * The configuration for the Flatpickr plugin to use text instead of `<select>` for month picker.\n */\nexport interface DatePickerMonthSelectPluginConfig {\n  /**\n   * `true` to use shorthand month.\n   */\n  shorthand?: boolean;\n\n  /**\n   * The CSS selector for the container of month/year selection UI.\n   */\n  selectorFlatpickrMonthYearContainer: string;\n\n  /**\n   * The CSS selector for the container of year selection UI.\n   */\n  selectorFlatpickrYearContainer: string;\n\n  /**\n   * The CSS selector for the text-based month selection UI.\n   */\n  selectorFlatpickrCurrentMonth: string;\n\n  /**\n   * The CSS class for the text-based month selection UI.\n   */\n  classFlatpickrCurrentMonth: string;\n}\n\n/**\n * @param config Plugin configuration.\n * @returns A Flatpickr plugin to use text instead of `<select>` for month picker.\n */\nexport default (config: DatePickerMonthSelectPluginConfig): Plugin =>\n  (fp: FlatpickrInstance) => {\n    /**\n     * Replaces `<select>` for month with text content.\n     */\n    const setupElements = () => {\n      const { monthElements, yearElements, currentMonth, l10n, _createElement: createElement } = fp;\n      if (!monthElements) {\n        return;\n      }\n      const { shorthand, selectorFlatpickrMonthYearContainer, selectorFlatpickrYearContainer, classFlatpickrCurrentMonth } =\n        config;\n      monthElements.forEach(elem => {\n        if (!elem.parentNode) return;\n        elem.parentNode.removeChild(elem);\n      });\n      monthElements.splice(\n        0,\n        monthElements.length,\n        ...monthElements.map(() => {\n          const monthElement = createElement('span', classFlatpickrCurrentMonth);\n          monthElement.textContent = monthToStr(currentMonth, shorthand === true, l10n);\n          const monthYearContainer = yearElements[0].closest(selectorFlatpickrMonthYearContainer);\n          if (monthYearContainer) {\n            monthYearContainer.insertBefore(monthElement, yearElements[0].closest(selectorFlatpickrYearContainer));\n          }\n          return monthElement;\n        })\n      );\n    };\n\n    /**\n     * Updates the text-based month UI with the latest selected date.\n     */\n    const updateCurrentMonth = () => {\n      const { yearElements, currentMonth, l10n } = fp;\n      const { shorthand, selectorFlatpickrMonthYearContainer, selectorFlatpickrCurrentMonth } = config;\n      const monthStr = monthToStr(currentMonth, shorthand === true, l10n);\n      yearElements.forEach(elem => {\n        const currentMonthContainer = elem.closest(selectorFlatpickrMonthYearContainer);\n        if (currentMonthContainer) {\n          forEach(currentMonthContainer.querySelectorAll(selectorFlatpickrCurrentMonth), monthElement => {\n            monthElement.textContent = monthStr;\n          });\n        }\n      });\n    };\n\n    /**\n     * Registers this Flatpickr plugin.\n     */\n    const register = () => {\n      fp.loadedPlugins.push('carbonFlatpickrMonthSelectPlugin');\n    };\n\n    return {\n      onMonthChange: updateCurrentMonth,\n      onValueUpdate: updateCurrentMonth,\n      onOpen: updateCurrentMonth,\n      onReady: [setupElements, updateCurrentMonth, register],\n    };\n  };\n"],"file":"month-select-plugin.js"}