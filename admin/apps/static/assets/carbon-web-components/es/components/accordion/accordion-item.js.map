{"version":3,"sources":["components/accordion/accordion-item.ts"],"names":["settings","classMap","html","property","customElement","LitElement","ChevronRight16","FocusMixin","ACCORDION_ITEM_BREAKPOINT","styles","prefix","observeResize","observer","elem","observe","release","unobserve","BXAccordionItem","open","init","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","constructor","eventBeforeToggle","eventToggle","_handleUserInitiatedToggle","key","ResizeObserver","records","width","length","contentRect","_sizesBreakpoints","sizesBreakpoints","_currentBreakpoint","Object","keys","sort","lhs","rhs","find","size","requestUpdate","type","Boolean","reflect","attribute","hasAttribute","setAttribute","_hObserveResize","_resizeObserver","disabled","titleText","currentBreakpoint","_handleClickExpando","handleClickExpando","_handleKeydownExpando","handleKeydownExpando","_classesBreakpoints","classesBreakpoints","classBreakpoint","contentClasses","String","part","class","SMALL","MEDIUM"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16';\nimport FocusMixin from '../../globals/mixins/focus';\nimport Handle from '../../globals/internal/handle';\nimport { ACCORDION_ITEM_BREAKPOINT } from './defs';\nimport styles from './accordion.scss';\n\nexport { ACCORDION_ITEM_BREAKPOINT };\n\nconst { prefix } = settings;\n\n/**\n * Observes resize of the given element with the given resize observer.\n * @param observer The resize observer.\n * @param elem The element to observe the resize.\n */\nconst observeResize = (observer: ResizeObserver, elem: Element) => {\n  if (!elem) {\n    return null;\n  }\n  observer.observe(elem);\n  return {\n    release() {\n      observer.unobserve(elem);\n      return null;\n    },\n  } as Handle;\n};\n\n/**\n * Accordion item.\n * @element bx-accordion-item\n * @fires bx-accordion-item-beingtoggled\n *   The custom event fired before this accordion item is being toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of toggling this accordion item.\n * @fires bx-accordion-item-toggled - The custom event fired after this accordion item is toggled upon a user gesture.\n * @csspart expando The expando button.\n * @csspart expando-icon The expando icon.\n * @csspart title The title.\n * @csspart content The content.\n */\n@customElement(`${prefix}-accordion-item`)\nclass BXAccordionItem extends FocusMixin(LitElement) {\n  /**\n   * The current breakpoint.\n   */\n  private _currentBreakpoint?: ACCORDION_ITEM_BREAKPOINT;\n\n  /**\n   * The handle for observing resize of the parent element of this element.\n   */\n  private _hObserveResize: Handle | null = null;\n\n  /**\n   * Handles user-initiated toggle request of this accordion item.\n   * @param open The new open state.\n   */\n  private _handleUserInitiatedToggle(open = !this.open) {\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        open,\n      },\n    };\n    if (this.dispatchEvent(new CustomEvent((this.constructor as typeof BXAccordionItem).eventBeforeToggle, init))) {\n      this.open = open;\n      this.dispatchEvent(new CustomEvent((this.constructor as typeof BXAccordionItem).eventToggle, init));\n    }\n  }\n\n  /**\n   * Handler for the `click` event on the expando button.\n   */\n  private _handleClickExpando() {\n    this._handleUserInitiatedToggle();\n  }\n\n  /**\n   * Handler for the `keydown` event on the expando button.\n   */\n  private _handleKeydownExpando = ({ key }: KeyboardEvent) => {\n    if (this.open && (key === 'Esc' || key === 'Escape')) {\n      this._handleUserInitiatedToggle(false);\n    }\n  };\n\n  /**\n   * The `ResizeObserver` instance for observing element resizes for re-positioning floating menu position.\n   */\n  // TODO: Wait for `.d.ts` update to support `ResizeObserver`\n  // @ts-ignore\n  private _resizeObserver = new ResizeObserver((records: ResizeObserverEntry[]) => {\n    const { width } = records[records.length - 1].contentRect;\n    const { _sizesBreakpoints: sizesBreakpoints } = this.constructor as typeof BXAccordionItem;\n    this._currentBreakpoint = Object.keys(sizesBreakpoints)\n      .sort((lhs, rhs) => sizesBreakpoints[rhs] - sizesBreakpoints[lhs])\n      .find(size => width >= sizesBreakpoints[size]) as ACCORDION_ITEM_BREAKPOINT;\n    this.requestUpdate();\n  });\n\n  /**\n   * `true` if the accordion item should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if the accordion item should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * The title text.\n   */\n  @property({ attribute: 'title-text' })\n  titleText = '';\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'listitem');\n    }\n    super.connectedCallback();\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n    this._hObserveResize = observeResize(this._resizeObserver, this);\n  }\n\n  disconnectedCallback() {\n    if (this._hObserveResize) {\n      this._hObserveResize = this._hObserveResize.release();\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      titleText,\n      open,\n      _currentBreakpoint: currentBreakpoint,\n      _handleClickExpando: handleClickExpando,\n      _handleKeydownExpando: handleKeydownExpando,\n    } = this;\n    const { _classesBreakpoints: classesBreakpoints } = this.constructor as typeof BXAccordionItem;\n    const { [currentBreakpoint!]: classBreakpoint } = classesBreakpoints;\n    const contentClasses = classMap({\n      [classBreakpoint]: classBreakpoint,\n      [`${prefix}--accordion__content`]: true,\n    });\n    return html`\n      <button\n        ?disabled=\"${disabled}\"\n        type=\"button\"\n        part=\"expando\"\n        class=\"${prefix}--accordion__heading\"\n        aria-controls=\"content\"\n        aria-expanded=\"${String(Boolean(open))}\"\n        @click=\"${handleClickExpando}\"\n        @keydown=\"${handleKeydownExpando}\">\n        ${ChevronRight16({\n          part: 'expando-icon',\n          class: `${prefix}--accordion__arrow`,\n        })}\n        <div part=\"title\" class=\"${prefix}--accordion__title\"><slot name=\"title\">${titleText}</slot></div>\n      </button>\n      <div id=\"content\" part=\"content\" class=\"${contentClasses}\"><slot></slot></div>\n    `;\n  }\n\n  /**\n   * The CSS classes for breakpoints.\n   * @private\n   */\n  static get _classesBreakpoints() {\n    return {\n      [ACCORDION_ITEM_BREAKPOINT.SMALL]: `${prefix}-ce--accordion__content--${ACCORDION_ITEM_BREAKPOINT.SMALL}`,\n      [ACCORDION_ITEM_BREAKPOINT.MEDIUM]: `${prefix}-ce--accordion__content--${ACCORDION_ITEM_BREAKPOINT.MEDIUM}`,\n    };\n  }\n\n  /**\n   * The breakpoints.\n   * @private\n   */\n  static get _sizesBreakpoints() {\n    return {\n      [ACCORDION_ITEM_BREAKPOINT.SMALL]: 480,\n      [ACCORDION_ITEM_BREAKPOINT.MEDIUM]: 640,\n    };\n  }\n\n  /**\n   * The name of the custom event fired before this accordion item is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this accordion item.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-accordion-item-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this accordion item is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-accordion-item-toggled`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXAccordionItem;\n"],"file":"accordion-item.js"}