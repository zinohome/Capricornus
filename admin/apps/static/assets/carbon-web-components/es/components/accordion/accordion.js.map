{"version":3,"sources":["components/accordion/accordion.ts"],"names":["html","property","customElement","LitElement","settings","forEach","ACCORDION_SIZE","styles","prefix","BXAccordion","reflect","REGULAR","hasAttribute","setAttribute","changedProperties","has","querySelectorAll","constructor","selectorAccordionItems","elem","size"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAA0D,aAA1D;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASD,cAAT;AAEA,MAAM;AAAEE,EAAAA;AAAF,IAAaJ,QAAnB;AAEA;AACA;AACA;AACA;;IAEMK,W,cADLP,aAAa,CAAE,GAAEM,MAAO,YAAX,C;AAAd,QACMC,WADN,qBACqC;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAA/BA,W;;;mBAIHR,QAAQ,CAAC;AAAES,QAAAA,OAAO,EAAE;AAAX,OAAD,C;;;;eACFJ,cAAc,CAACK,O;;;;;;;AAJtB;AACF;AACA;AAIE,mCAAoB;AAClB,YAAI,CAAC,KAAKC,YAAL,CAAkB,MAAlB,CAAL,EAAgC;AAC9B,eAAKC,YAAL,CAAkB,MAAlB,EAA0B,MAA1B;AACD;;AACD,6BAXEJ,WAWF;AACD;;;;aAED,iBAAQK,iBAAR,EAA2B;AACzB,YAAIA,iBAAiB,CAACC,GAAlB,CAAsB,MAAtB,CAAJ,EAAmC;AACjC;AACAV,UAAAA,OAAO,CAAC,KAAKW,gBAAL,CAAuB,KAAKC,WAAN,CAAyCC,sBAA/D,CAAD,EAAyFC,IAAI,IAAI;AACtGA,YAAAA,IAAI,CAACN,YAAL,CAAkB,MAAlB,EAA0B,KAAKO,IAA/B;AACD,WAFM,CAAP;AAGD;AACF;;;;aAED,kBAAS;AACP,eAAOpB,IAAP;AACD;;;;;aAED,kCAAoC;AAClC,eAAQ,GAAEQ,MAAO,iBAAjB;AACD;;;;;;;eAEeD,M;;;;;GA/BQJ,U;;AAkC1B,eAAeM,WAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport { ACCORDION_SIZE } from './defs';\nimport styles from './accordion.scss';\n\nexport { ACCORDION_SIZE };\n\nconst { prefix } = settings;\n\n/**\n * Accordion container.\n * @element bx-accordion\n */\n@customElement(`${prefix}-accordion`)\nclass BXAccordion extends LitElement {\n  /**\n   * Accordion size.\n   */\n  @property({ reflect: true })\n  size = ACCORDION_SIZE.REGULAR;\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'list');\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('size')) {\n      // Propagate `size` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(this.querySelectorAll((this.constructor as typeof BXAccordion).selectorAccordionItems), elem => {\n        elem.setAttribute('size', this.size);\n      });\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  static get selectorAccordionItems() {\n    return `${prefix}-accordion-item`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXAccordion;\n"],"file":"accordion.js"}