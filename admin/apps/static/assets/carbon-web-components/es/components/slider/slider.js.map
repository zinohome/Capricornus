{"version":3,"sources":["components/slider/slider.ts"],"names":["classMap","throttle","html","property","query","customElement","LitElement","settings","FocusMixin","FormMixin","HostListenerMixin","HostListener","ifNonEmpty","styles","prefix","THUMB_DIRECTION","Left","ArrowLeft","Up","ArrowUp","Right","ArrowRight","Down","ArrowDown","BXSlider","max","min","value","Math","Number","rate","step","round","_thumbNode","focus","event","formData","disabled","name","append","String","key","shiftKey","rawMax","rawMin","rawStep","stepRatio","rawStepRatio","diff","stepCount","floor","ceil","dispatchEvent","CustomEvent","constructor","eventChange","bubbles","composed","detail","intermediate","_dragging","style","touchAction","_trackNode","trackNode","isRtl","ownerDocument","defaultView","getComputedStyle","getPropertyValue","thumbPosition","clientX","left","trackLeft","width","trackWidth","getBoundingClientRect","_rate","dragging","_throttledHandlePointermoveImpl","type","Boolean","reflect","attribute","_max","toString","oldMax","requestUpdate","_min","oldMin","_step","oldStep","_stepRatio","oldStepRatio","attachShadow","mode","delegatesFocus","exec","navigator","userAgent","_handlePointermoveImpl","cancel","changedProperties","input","querySelector","selectorInput","has","forEach","formatMaxText","formatMinText","labelText","_handleClickLabel","handleClickLabel","_handleKeydown","handleKeydown","_handleClick","handleClick","_startDrag","startDrag","_endDrag","endDrag","labelClasses","sliderClasses"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport throttle from 'lodash-es/throttle';\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport FormMixin from '../../globals/mixins/form';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport BXSliderInput from './slider-input';\nimport styles from './slider.scss';\n\nconst { prefix } = settings;\n\ninterface Cancelable {\n  cancel(): void;\n}\n\n/**\n * The direction to move the thumb, associated with key symbols.\n */\nconst THUMB_DIRECTION = {\n  Left: -1,\n  ArrowLeft: -1,\n  Up: -1,\n  ArrowUp: -1,\n  Right: 1,\n  ArrowRight: 1,\n  Down: 1,\n  ArrowDown: 1,\n};\n\n/**\n * Slider.\n * @element bx-slider\n * @slot label-text - The label text.\n * @slot max-text - The text for maximum value.\n * @slot min-text - The text for minimum value.\n * @fires bx-slider-changed - The custom event fired after the value is changed by user gesture.\n */\n@customElement(`${prefix}-slider`)\nclass BXSlider extends HostListenerMixin(FormMixin(FocusMixin(LitElement))) {\n  /**\n   * The internal value of `max` property.\n   */\n  private _max = '100';\n\n  /**\n   * The internal value of `min` property.\n   */\n  private _min = '0';\n\n  /**\n   * The internal value of `step` property.\n   */\n  private _step = '1';\n\n  /**\n   * The internal value of `stepRatio` property.\n   */\n  private _stepRatio = '4';\n\n  /**\n   * The handle for the throttled listener of `pointermove` event.\n   */\n  private _throttledHandlePointermoveImpl: (((event: PointerEvent) => void) & Cancelable) | null = null;\n\n  /**\n   * `true` if dragging of thumb is in progress.\n   */\n  private _dragging = false;\n\n  /**\n   * The rate of the thumb position in the track.\n   * When we try to set a new value, we adjust the value considering `step` property.\n   */\n  private get _rate() {\n    const { max, min, value } = this;\n    // Copes with out-of-range value coming programmatically or from `<bx-slider-input>`\n    return (Math.min(Number(max), Math.max(Number(min), value)) - Number(min)) / (Number(max) - Number(min));\n  }\n\n  private set _rate(rate: number) {\n    const { max, min, step } = this;\n    this.value =\n      Number(min) + Math.round(((Number(max) - Number(min)) * Math.min(1, Math.max(0, rate))) / Number(step)) * Number(step);\n  }\n\n  /**\n   * The DOM element of the thumb.\n   */\n  @query('#thumb')\n  private _thumbNode!: HTMLDivElement;\n\n  /**\n   * The DOM element of the track.\n   */\n  @query('#track')\n  private _trackNode!: HTMLDivElement;\n\n  /**\n   * Handles `click` event on the `<label>` to focus on the thumb.\n   */\n  _handleClickLabel() {\n    this._thumbNode?.focus();\n  }\n\n  _handleFormdata(event: Event) {\n    const { formData } = event as any; // TODO: Wait for `FormDataEvent` being available in `lib.dom.d.ts`\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, String(value));\n    }\n  }\n\n  /**\n   * Handles `keydown` event on the thumb to increase/decrease the value.\n   */\n  private _handleKeydown({ key, shiftKey }: KeyboardEvent) {\n    if (!this.disabled) {\n      if (key in THUMB_DIRECTION) {\n        const { max: rawMax, min: rawMin, step: rawStep, stepRatio: rawStepRatio, value } = this;\n        const max = Number(rawMax);\n        const min = Number(rawMin);\n        const step = Number(rawStep);\n        const stepRatio = Number(rawStepRatio);\n        const diff = (!shiftKey ? step : (max - min) / stepRatio) * THUMB_DIRECTION[key];\n        const stepCount = (value + diff) / step;\n        // Snaps to next\n        this.value = Math.min(max, Math.max(min, (diff >= 0 ? Math.floor(stepCount) : Math.ceil(stepCount)) * step));\n        this.dispatchEvent(\n          new CustomEvent((this.constructor as typeof BXSlider).eventChange, {\n            bubbles: true,\n            composed: true,\n            detail: {\n              value: this.value,\n              intermediate: false,\n            },\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Handles `pointerdown` event on the thumb to start dragging.\n   */\n  private _startDrag() {\n    this._dragging = true;\n    this._thumbNode.style.touchAction = 'none';\n  }\n\n  /**\n   * Handles `pointerdown` event on the track to update the thumb position and the value as necessary.\n   */\n  private _handleClick(event: PointerEvent) {\n    if (!this.disabled) {\n      const { _trackNode: trackNode } = this;\n      const isRtl = trackNode.ownerDocument!.defaultView!.getComputedStyle(trackNode).getPropertyValue('direction') === 'rtl';\n      const thumbPosition = event.clientX;\n      const { left: trackLeft, width: trackWidth } = trackNode.getBoundingClientRect();\n      this._rate = (isRtl ? trackLeft + trackWidth - thumbPosition : thumbPosition - trackLeft) / trackWidth;\n      this.dispatchEvent(\n        new CustomEvent((this.constructor as typeof BXSlider).eventChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            value: this.value,\n          },\n        })\n      );\n    }\n  }\n\n  /**\n   * Handles `pointermove` to update the thumb position and the value as necessary.\n   * @param event The event.\n   */\n  @HostListener('document:pointermove')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handlePointermove = (event: PointerEvent) => {\n    const { disabled, _dragging: dragging } = this;\n    if (!disabled && dragging) {\n      this._throttledHandlePointermoveImpl!(event);\n    }\n  };\n\n  /**\n   * Updates thumb position and value upon user's `pointermove` gesture.\n   * @param event The event.\n   */\n  private _handlePointermoveImpl(event: PointerEvent) {\n    const { disabled, _dragging: dragging, _trackNode: trackNode } = this;\n    if (!disabled && dragging) {\n      const isRtl = trackNode.ownerDocument!.defaultView!.getComputedStyle(trackNode).getPropertyValue('direction') === 'rtl';\n      const thumbPosition = event.clientX;\n      const { left: trackLeft, width: trackWidth } = this._trackNode.getBoundingClientRect();\n      this._rate = (isRtl ? trackLeft + trackWidth - thumbPosition : thumbPosition - trackLeft) / trackWidth;\n      this.dispatchEvent(\n        new CustomEvent((this.constructor as typeof BXSlider).eventChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            value: this.value,\n            intermediate: true,\n          },\n        })\n      );\n    }\n  }\n\n  /**\n   * Handles `pointerup` and `pointerleave` event to finishing dragging.\n   */\n  private _endDrag = () => {\n    if (this._dragging) {\n      this.dispatchEvent(\n        new CustomEvent((this.constructor as typeof BXSlider).eventChange, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            value: this.value,\n          },\n        })\n      );\n      this._dragging = false;\n      this._thumbNode.style.touchAction = '';\n    }\n  };\n\n  /**\n   * Handles `${prefix}-slider-input-changed` event to update the value.\n   */\n  @HostListener('eventChangeInput')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleChangeInput = ({ detail }: CustomEvent) => {\n    const { intermediate, value } = detail;\n    this.value = value;\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof BXSlider).eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          value,\n          intermediate,\n        },\n      })\n    );\n  };\n\n  /**\n   * `true` if the check box should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The formatter for the text for maximum value.\n   * Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatMaxText = ({ max }: { max: string }) => max;\n\n  /**\n   * The formatter for the text for minimum value.\n   * Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatMinText = ({ min }: { min: string }) => min;\n\n  /**\n   * The label text.\n   */\n  @property({ attribute: 'label-text' })\n  labelText = '';\n\n  /**\n   * The maximum value.\n   */\n  @property({ type: Number, reflect: true })\n  get max() {\n    return this._max.toString();\n  }\n\n  set max(value) {\n    const { max: oldMax } = this;\n    this._max = value;\n    this.requestUpdate('max', oldMax);\n  }\n\n  /**\n   * The minimum value.\n   */\n  @property({ type: Number, reflect: true })\n  get min() {\n    return this._min.toString();\n  }\n\n  set min(value) {\n    const { min: oldMin } = this;\n    this._min = value;\n    this.requestUpdate('min', oldMin);\n  }\n\n  /**\n   * The form name.\n   */\n  @property()\n  name!: string;\n\n  /**\n   * The snapping step of the value.\n   */\n  @property({ type: Number, reflect: true })\n  get step() {\n    return this._step.toString();\n  }\n\n  set step(value) {\n    const { step: oldStep } = this;\n    this._step = value;\n    this.requestUpdate('step', oldStep);\n  }\n\n  /**\n   * A value determining how much the value should increase/decrease by Shift+arrow keys,\n   * which will be `(max - min) / stepRatio`.\n   */\n  @property({ type: Number, reflect: true, attribute: 'step-ratio' })\n  get stepRatio() {\n    return this._stepRatio.toString();\n  }\n\n  set stepRatio(value) {\n    const { stepRatio: oldStepRatio } = this;\n    this._stepRatio = value;\n    this.requestUpdate('stepRatio', oldStepRatio);\n  }\n\n  /**\n   * The value.\n   */\n  @property({ type: Number })\n  value = 50;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this._throttledHandlePointermoveImpl) {\n      this._throttledHandlePointermoveImpl = throttle(this._handlePointermoveImpl, 10);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this._throttledHandlePointermoveImpl) {\n      this._throttledHandlePointermoveImpl.cancel();\n      this._throttledHandlePointermoveImpl = null;\n    }\n    super.disconnectedCallback();\n  }\n\n  shouldUpdate(changedProperties) {\n    const input = this.querySelector((this.constructor as typeof BXSlider).selectorInput) as BXSliderInput;\n    if (changedProperties.has('disabled')) {\n      if (input) {\n        input.disabled = this.disabled;\n      }\n      if (this.disabled) {\n        this._dragging = false;\n      }\n    }\n    if (input) {\n      ['max', 'min', 'step', 'value'].forEach(name => {\n        if (changedProperties.has(name)) {\n          input[name] = this[name];\n        }\n      });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      disabled,\n      formatMaxText,\n      formatMinText,\n      labelText,\n      max,\n      min,\n      name,\n      value,\n      _rate: rate,\n      _handleClickLabel: handleClickLabel,\n      _handleKeydown: handleKeydown,\n      _handleClick: handleClick,\n      _startDrag: startDrag,\n      _endDrag: endDrag,\n    } = this;\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--label--disabled`]: disabled,\n    });\n    const sliderClasses = classMap({\n      [`${prefix}--slider`]: true,\n      [`${prefix}--slider--disabled`]: disabled,\n    });\n    return html`\n      <label class=\"${labelClasses}\" @click=\"${handleClickLabel}\">\n        <slot name=\"label-text\">${labelText}</slot>\n      </label>\n      <div class=\"${prefix}--slider-container\">\n        <span class=\"${prefix}--slider__range-label\">\n          <slot name=\"min-text\">${formatMinText({ min })}</slot>\n        </span>\n        <div\n          @keydown=\"${handleKeydown}\"\n          @click=\"${handleClick}\"\n          @pointerup=\"${endDrag}\"\n          @pointerleave=\"${endDrag}\"\n          class=\"${sliderClasses}\"\n          role=\"presentation\">\n          <div\n            id=\"thumb\"\n            class=\"${prefix}--slider__thumb\"\n            role=\"slider\"\n            tabindex=\"0\"\n            aria-valuemax=\"${max}\"\n            aria-valuemin=\"${min}\"\n            aria-valuenow=\"${value}\"\n            style=\"left: ${rate * 100}%\"\n            @pointerdown=\"${startDrag}\"></div>\n          <div id=\"track\" class=\"${prefix}--slider__track\"></div>\n          <div class=\"${prefix}-ce--slider__filled-track-container\">\n            <div class=\"${prefix}--slider__filled-track\" style=\"transform: translate(0%, -50%) scaleX(${rate})\"></div>\n          </div>\n          <input\n            class=\"${prefix}--slider__input\"\n            type=\"hidden\"\n            name=\"${ifNonEmpty(name)}\"\n            .value=\"${value}\"\n            min=\"${ifNonEmpty(min)}\"\n            max=\"${ifNonEmpty(max)}\" />\n        </div>\n        <span class=\"${prefix}--slider__range-label\">\n          <slot name=\"max-text\">${formatMaxText({ max })}</slot>\n        </span>\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  /**\n   * A selector that will return the `<input>` box got entering the value directly.\n   */\n  static get selectorInput() {\n    return `${prefix}-slider-input`;\n  }\n\n  /**\n   * The name of the custom event fired after the value is changed by user gesture.\n   */\n  static get eventChange() {\n    return `${prefix}-slider-changed`;\n  }\n\n  /**\n   * The name of the custom event fired after the value is changed in `<bx-slider-input>` by user gesture.\n   */\n  static get eventChangeInput() {\n    return `${prefix}-slider-input-changed`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXSlider;\n"],"file":"slider.js"}