{"version":3,"sources":["components/button/button-skeleton.ts"],"names":["settings","classMap","html","customElement","ifNonNull","BXButton","styles","prefix","BXButtonSkeleton","event","disabled","preventDefault","stopPropagation","autofocus","download","href","hreflang","ping","rel","size","target","type","classes","_handleClickLinkSkeleton"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,0CAArB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,aAApC;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaP,QAAnB;AAEA;AACA;AACA;;IAEMQ,gB,cADLL,aAAa,CAAE,GAAEI,MAAO,eAAX,C;AAAd,QACMC,gBADN,mBACwC;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAAlCA,gB;;;;;AACJ;AACF;AACA;AACA;AACE,wCAAiCC,KAAjC,EAAoD;AAClD,YAAI,KAAKC,QAAT,EAAmB;AACjBD,UAAAA,KAAK,CAACE,cAAN,GADiB,CACO;;AACxBF,UAAAA,KAAK,CAACG,eAAN,GAFiB,CAEQ;AAC1B;AACF;;;;aAED,kBAAS;AACP,cAAM;AAAEC,UAAAA,SAAF;AAAaH,UAAAA,QAAb;AAAuBI,UAAAA,QAAvB;AAAiCC,UAAAA,IAAjC;AAAuCC,UAAAA,QAAvC;AAAiDC,UAAAA,IAAjD;AAAuDC,UAAAA,GAAvD;AAA4DC,UAAAA,IAA5D;AAAkEC,UAAAA,MAAlE;AAA0EC,UAAAA;AAA1E,YAAmF,IAAzF;AACA,cAAMC,OAAO,GAAGrB,QAAQ,CAAC;AACvB,WAAE,GAAEM,MAAO,OAAX,GAAoB,IADG;AAEvB,WAAE,GAAEA,MAAO,YAAX,GAAyB,IAFF;AAGvB,WAAE,GAAEA,MAAO,UAASY,IAAK,EAAzB,GAA6BA;AAHN,SAAD,CAAxB;AAKA,eAAOJ,IAAI,GACPb,IADO,8KAKMoB,OALN,EAMSlB,SAAS,CAACU,QAAD,CANlB,EAOKV,SAAS,CAACW,IAAD,CAPd,EAQSX,SAAS,CAACY,QAAD,CARlB,EASKZ,SAAS,CAACa,IAAD,CATd,EAUIb,SAAS,CAACc,GAAD,CAVb,EAWOd,SAAS,CAACgB,MAAD,CAXhB,EAYKhB,SAAS,CAACiB,IAAD,CAZd,EAaO,KAAKE,wBAbZ,IAePrB,IAfO,gHAkBMoB,OAlBN,EAmBWT,SAnBX,EAoBUH,QApBV,EAqBKN,SAAS,CAACiB,IAAD,CArBd,CAAX;AAuBD;;;;;;;eAEef,M;;;;;GA5CaD,Q;;AA+C/B,eAAeG,gBAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, customElement } from 'lit-element';\nimport ifNonNull from '../../globals/directives/if-non-null';\nimport BXButton from './button';\nimport styles from './button.scss';\n\nconst { prefix } = settings;\n\n/**\n * Button skeleton.\n */\n@customElement(`${prefix}-btn-skeleton`)\nclass BXButtonSkeleton extends BXButton {\n  /**\n   * Handles `click` event on the `<a>.\n   * @param event The event.\n   */\n  private _handleClickLinkSkeleton(event: MouseEvent) {\n    if (this.disabled) {\n      event.preventDefault(); // Stop following the link\n      event.stopPropagation(); // Stop firing `onClick`\n    }\n  }\n\n  render() {\n    const { autofocus, disabled, download, href, hreflang, ping, rel, size, target, type } = this;\n    const classes = classMap({\n      [`${prefix}--btn`]: true,\n      [`${prefix}--skeleton`]: true,\n      [`${prefix}--btn--${size}`]: size,\n    });\n    return href\n      ? html`\n          <a\n            id=\"button\"\n            role=\"button\"\n            class=\"${classes}\"\n            download=\"${ifNonNull(download)}\"\n            href=\"${ifNonNull(href)}\"\n            hreflang=\"${ifNonNull(hreflang)}\"\n            ping=\"${ifNonNull(ping)}\"\n            rel=\"${ifNonNull(rel)}\"\n            target=\"${ifNonNull(target)}\"\n            type=\"${ifNonNull(type)}\"\n            @click=\"${this._handleClickLinkSkeleton}\"></a>\n        `\n      : html`\n          <button\n            id=\"button\"\n            class=\"${classes}\"\n            ?autofocus=\"${autofocus}\"\n            ?disabled=\"${disabled}\"\n            type=\"${ifNonNull(type)}\"></button>\n        `;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXButtonSkeleton;\n"],"file":"button-skeleton.js"}