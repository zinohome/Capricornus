{"version":3,"sources":["components/button/button-skeleton.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAMH,OAAO,QAAQ,MAAM,UAAU,CAAC;AAKhC;;GAEG;AACH,cACM,gBAAiB,SAAQ,QAAQ;IACrC;;;OAGG;IACH,OAAO,CAAC,wBAAwB;IAOhC,MAAM;IAgCN,MAAM,CAAC,MAAM,MAAU;CACxB;AAED,eAAe,gBAAgB,CAAC","file":"button-skeleton.d.ts","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, customElement } from 'lit-element';\nimport ifNonNull from '../../globals/directives/if-non-null';\nimport BXButton from './button';\nimport styles from './button.scss';\n\nconst { prefix } = settings;\n\n/**\n * Button skeleton.\n */\n@customElement(`${prefix}-btn-skeleton`)\nclass BXButtonSkeleton extends BXButton {\n  /**\n   * Handles `click` event on the `<a>.\n   * @param event The event.\n   */\n  private _handleClickLinkSkeleton(event: MouseEvent) {\n    if (this.disabled) {\n      event.preventDefault(); // Stop following the link\n      event.stopPropagation(); // Stop firing `onClick`\n    }\n  }\n\n  render() {\n    const { autofocus, disabled, download, href, hreflang, ping, rel, size, target, type } = this;\n    const classes = classMap({\n      [`${prefix}--btn`]: true,\n      [`${prefix}--skeleton`]: true,\n      [`${prefix}--btn--${size}`]: size,\n    });\n    return href\n      ? html`\n          <a\n            id=\"button\"\n            role=\"button\"\n            class=\"${classes}\"\n            download=\"${ifNonNull(download)}\"\n            href=\"${ifNonNull(href)}\"\n            hreflang=\"${ifNonNull(hreflang)}\"\n            ping=\"${ifNonNull(ping)}\"\n            rel=\"${ifNonNull(rel)}\"\n            target=\"${ifNonNull(target)}\"\n            type=\"${ifNonNull(type)}\"\n            @click=\"${this._handleClickLinkSkeleton}\"></a>\n        `\n      : html`\n          <button\n            id=\"button\"\n            class=\"${classes}\"\n            ?autofocus=\"${autofocus}\"\n            ?disabled=\"${disabled}\"\n            type=\"${ifNonNull(type)}\"></button>\n        `;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXButtonSkeleton;\n"]}