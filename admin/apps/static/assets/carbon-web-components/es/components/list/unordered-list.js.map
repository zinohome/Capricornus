{"version":3,"sources":["components/list/unordered-list.ts"],"names":["classMap","html","customElement","LitElement","property","settings","styles","prefix","BXUnorderedList","type","Boolean","reflect","closest","constructor","selectorListItem","setAttribute","removeAttribute","classes","getAttribute","isExpressive"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,+BAAzB;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,QAA1C,QAA0D,aAA1D;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB;AAEA;AACA;AACA;;IAEMG,e,cADLN,aAAa,CAAE,GAAEK,MAAO,iBAAX,C;AAAd,QACMC,eADN,qBACyC;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAAnCA,e;;;mBAIHJ,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEC,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,C;;;;eACM,K;;;;;;;AAJf;AACF;AACA;AAIE,mCAAoB;AAClB;AACA,YAAI,KAAKC,OAAL,CAAc,KAAKC,WAAN,CAA6CC,gBAA1D,CAAJ,EAAiF;AAC/E,eAAKC,YAAL,CAAkB,MAAlB,EAA0B,QAA1B;AACD,SAFD,MAEO;AACL,eAAKC,eAAL,CAAqB,MAArB;AACD;;AACD,6BAdER,eAcF;AACD;;;;aAED,kBAAS;AACP,cAAMS,OAAO,GAAGjB,QAAQ,CAAC;AACvB,WAAE,GAAEO,MAAO,mBAAX,GAAgC,IADT;AAEvB,WAAE,GAAEA,MAAO,gBAAX,GAA6B,KAAKW,YAAL,CAAkB,MAAlB,MAA8B,QAFpC;AAGvB,WAAE,GAAEX,MAAO,oBAAX,GAAiC,KAAKY;AAHf,SAAD,CAAxB;AAKA,eAAOlB,IAAP,0DACegB,OADf;AAKD;AAED;AACF;AACA;;;;;;aACE,4BAA8B;AAC5B,eAAQ,GAAEV,MAAO,YAAjB;AACD;;;;;;;eAEeD,M;;;;;GArCYH,U;;AAwC9B,eAAeK,eAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, customElement, LitElement, property } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport styles from './list.scss';\n\nconst { prefix } = settings;\n\n/**\n * Ordered list.\n */\n@customElement(`${prefix}-unordered-list`)\nclass BXUnorderedList extends LitElement {\n  /**\n   * `true` if expressive theme enabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  isExpressive = false;\n\n  connectedCallback() {\n    // Uses attribute for lookup from child\n    if (this.closest((this.constructor as typeof BXUnorderedList).selectorListItem)) {\n      this.setAttribute('slot', 'nested');\n    } else {\n      this.removeAttribute('slot');\n    }\n    super.connectedCallback();\n  }\n\n  render() {\n    const classes = classMap({\n      [`${prefix}--list--unordered`]: true,\n      [`${prefix}--list--nested`]: this.getAttribute('slot') === 'nested',\n      [`${prefix}--list--expressive`]: this.isExpressive,\n    });\n    return html`\n      <ul class=\"${classes}\">\n        <slot></slot>\n      </ul>\n    `;\n  }\n\n  /**\n   * A selector that will return list item.\n   */\n  static get selectorListItem() {\n    return `${prefix}-list-item`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXUnorderedList;\n"],"file":"unordered-list.js"}