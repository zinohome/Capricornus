{"version":3,"sources":["components/tag/filter-tag.ts"],"names":["html","property","query","customElement","LitElement","settings","Close16","FocusMixin","HostListener","HostListenerMixin","TAG_SIZE","TAG_TYPE","styles","prefix","BXFilterTag","event","composedPath","indexOf","_buttonNode","disabled","stopPropagation","open","init","bubbles","cancelable","composed","detail","triggeredBy","target","dispatchEvent","CustomEvent","constructor","eventBeforeClose","eventClose","type","String","reflect","Boolean","REGULAR","RED","title"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport Close16 from '@carbon/icons/lib/close/16';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { TAG_SIZE, TAG_TYPE } from './defs';\nimport styles from './tag.scss';\n\nexport { TAG_SIZE, TAG_TYPE };\n\nconst { prefix } = settings;\n\n/**\n * Filter tag.\n * @element bx-filter-tag\n */\n@customElement(`${prefix}-filter-tag`)\nexport default class BXFilterTag extends HostListenerMixin(FocusMixin(LitElement)) {\n  @query('button')\n  protected _buttonNode!: HTMLButtonElement;\n\n  /**\n   * Handles `click` event on this element.\n   * @param event The event.\n   */\n  @HostListener('shadowRoot:click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleClick = (event: MouseEvent) => {\n    if (event.composedPath().indexOf(this._buttonNode!) >= 0) {\n      if (this.disabled) {\n        event.stopPropagation();\n      } else if (this.open) {\n        const init = {\n          bubbles: true,\n          cancelable: true,\n          composed: true,\n          detail: {\n            triggeredBy: event.target,\n          },\n        };\n        if (this.dispatchEvent(new CustomEvent((this.constructor as typeof BXFilterTag).eventBeforeClose, init))) {\n          this.open = false;\n          this.dispatchEvent(new CustomEvent((this.constructor as typeof BXFilterTag).eventClose, init));\n        }\n      }\n    }\n  };\n\n  /**\n   * Text to show on filter tag \"clear\" buttons. Corresponds to the attribute with the same name\n   */\n  @property({ type: String, reflect: true })\n  title = 'Clear filter';\n\n  /**\n   * `true` if the tag should be disabled\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if the tag should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = true;\n\n  /**\n   * The size of the tag.\n   */\n  @property({ reflect: true })\n  size = TAG_SIZE.REGULAR;\n\n  /**\n   * The type of the tag.\n   */\n  @property({ reflect: true })\n  type = TAG_TYPE.RED;\n\n  render() {\n    const { disabled } = this;\n    return html`\n      <slot></slot>\n      <button class=\"${prefix}--tag__close-icon\" ?disabled=${disabled}>${Close16({ 'aria-label': this.title })}</button>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired before this tag is being closed upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of closing this tag.\n   */\n  static get eventBeforeClose() {\n    return `${prefix}-filter-tag-beingclosed`;\n  }\n\n  /**\n   * The name of the custom event fired after this tag is closed upon a user gesture.\n   */\n  static get eventClose() {\n    return `${prefix}-filter-tag-closed`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n"],"file":"filter-tag.js"}