{"version":3,"sources":["components/pagination/page-sizes-select.ts"],"names":["html","property","query","customElement","LitElement","ChevronDown16","settings","FocusMixin","styles","prefix","BXPageSizesSelect","target","value","Number","dispatchEvent","CustomEvent","constructor","eventChange","bubbles","composed","detail","_selectNode","selectNode","firstChild","removeChild","assignedNodes","forEach","item","appendChild","cloneNode","attribute","type","attachShadow","mode","delegatesFocus","exec","navigator","userAgent","labelText","_handleChange","handleChange","_handleSlotChange","handleSlotChange","class"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport ChevronDown16 from '@carbon/icons/lib/chevron--down/16';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport styles from './pagination.scss';\n\nconst { prefix } = settings;\n\n/**\n * The select box for page sizes.\n * @element bx-page-sizes-select\n * @slot label-text - The label text.\n * @fires bx-page-sizes-select-changed - The custom event fired after the page size is changed.\n */\n@customElement(`${prefix}-page-sizes-select`)\nclass BXPageSizesSelect extends FocusMixin(LitElement) {\n  @query('select')\n  private _selectNode!: HTMLSelectElement;\n\n  /**\n   * Handles `change` event on the `<select>` to select page size.\n   */\n  private _handleChange({ target }: Event) {\n    const value = Number((target as HTMLSelectElement).value);\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof BXPageSizesSelect).eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          value,\n        },\n      })\n    );\n    this.value = value;\n  }\n\n  /**\n   * Handles `slotchange` event for the `<slot>` for `<options>`.\n   * @param event The event.\n   */\n  private _handleSlotChange({ target }: Event) {\n    const { _selectNode: selectNode } = this;\n    while (selectNode.firstChild) {\n      selectNode.removeChild(selectNode.firstChild);\n    }\n    ((target as HTMLSlotElement).assignedNodes() as HTMLOptionElement[]).forEach(item => {\n      selectNode?.appendChild(item.cloneNode(true));\n    });\n  }\n\n  /**\n   * The label text.\n   */\n  @property({ attribute: 'label-text' })\n  labelText = 'Items per page:';\n\n  /**\n   * The value, working as the current page size.\n   */\n  @property({ type: Number })\n  value!: number;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  render() {\n    const { labelText, value, _handleChange: handleChange, _handleSlotChange: handleSlotChange } = this;\n    return html`\n      <label for=\"select\" class=\"${prefix}--pagination__text\"><slot name=\"label-text\">${labelText}</slot></label>\n      <div class=\"${prefix}--select__item-count\">\n        <select id=\"select\" class=\"${prefix}--select-input\" .value=\"${value}\" @change=${handleChange}></select>\n        ${ChevronDown16({ class: `${prefix}--select__arrow` })}\n      </div>\n      <div hidden><slot @slotchange=\"${handleSlotChange}\"></slot></div>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after the page size is changed.\n   */\n  static get eventChange() {\n    return `${prefix}-page-sizes-select-changed`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXPageSizesSelect;\n"],"file":"page-sizes-select.js"}