{"version":3,"sources":["components/pagination/pages-select.ts"],"names":["html","property","customElement","LitElement","ChevronDown16","settings","FocusMixin","styles","prefix","BXPagesSelect","target","value","Number","dispatchEvent","CustomEvent","constructor","eventChange","bubbles","composed","detail","attribute","count","type","attachShadow","mode","delegatesFocus","exec","navigator","userAgent","formatLabelText","formatSupplementalText","total","_handleChange","handleChange","Array","from","map","_item","index","class"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport ChevronDown16 from '@carbon/icons/lib/chevron--down/16';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport styles from './pagination.scss';\n\nconst { prefix } = settings;\n\n/**\n * The select box for the current page.\n * @element bx-pages-select\n * @fires bx-pages-select-changed - The custom event fired after the page is changed.\n */\n@customElement(`${prefix}-pages-select`)\nclass BXPagesSelect extends FocusMixin(LitElement) {\n  /**\n   * Handles `change` event on the `<select>` to select page size.\n   */\n  private _handleChange({ target }: Event) {\n    const value = Number((target as HTMLSelectElement).value);\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof BXPagesSelect).eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          value,\n        },\n      })\n    );\n    this.value = value;\n  }\n\n  /**\n   * The formatter for the assistive text for screen readers to announce.\n   * Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatLabelText = ({ count }) => `Page number, of ${count} page${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter for the text next to the select box. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatSupplementalText = ({ count }) => `of ${count} page${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The number of total pages.\n   */\n  @property({ type: Number })\n  total!: number;\n\n  /**\n   * The value, working as the current page, index that starts with zero.\n   */\n  @property({ type: Number })\n  value!: number;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  render() {\n    const { formatLabelText, formatSupplementalText, total, value, _handleChange: handleChange } = this;\n    // `<option ?selected=\"${index === value}\">` is a workaround for:\n    // https://github.com/Polymer/lit-html/issues/1052\n    return html`\n      <div class=\"${prefix}--select__page-number\">\n        <label for=\"select\" class=\"${prefix}--label ${prefix}--visually-hidden\"> ${formatLabelText({ count: total })} </label>\n        <select class=\"${prefix}--select-input\" .value=\"${value}\" @change=\"${handleChange}\">\n          ${Array.from(new Array(total)).map(\n            (_item, index) => html` <option value=${index} ?selected=\"${index === value}\">${index + 1}</option> `\n          )}\n        </select>\n        ${ChevronDown16({ class: `${prefix}--select__arrow` })}\n      </div>\n      <span class=\"${prefix}--pagination__text\"> ${formatSupplementalText({ count: total })} </span>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after the page is changed.\n   */\n  static get eventChange() {\n    return `${prefix}-pages-select-changed`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXPagesSelect;\n"],"file":"pages-select.js"}