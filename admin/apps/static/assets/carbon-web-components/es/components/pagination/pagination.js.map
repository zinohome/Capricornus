{"version":3,"sources":["components/pagination/pagination.ts"],"names":["classMap","html","property","customElement","LitElement","CaretLeft24","CaretRight24","settings","FocusMixin","HostListenerMixin","HostListener","forEach","styles","prefix","BXPagination","atLastPage","start","pageSize","total","formatStatusWithDeterminateTotal","formatStatusWithIndeterminateTotal","end","undefined","Math","min","Infinity","format","count","dispatchEvent","CustomEvent","constructor","eventChangeCurrent","bubbles","composed","detail","oldStart","newStart","max","_handleUserInitiatedChangeStart","value","attribute","type","Boolean","reflect","Number","attachShadow","mode","delegatesFocus","exec","navigator","userAgent","changedProperties","selectorPageSizesSelect","selectorPagesSelect","has","querySelectorAll","elem","floor","ceil","disabled","nextButtonText","prevButtonText","_handleClickPrevButton","handleClickPrevButton","_handleClickNextButton","handleClickNextButton","prevButtonDisabled","nextButtonDisabled","prevButtonClasses","nextButtonClasses","_renderStatusText"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport CaretLeft24 from '@carbon/icons/lib/caret--left/24';\nimport CaretRight24 from '@carbon/icons/lib/caret--right/24';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport BXPagesSelect from './pages-select';\nimport BXPageSizesSelect from './page-sizes-select';\nimport styles from './pagination.scss';\n\nconst { prefix } = settings;\n\n/**\n * Pagination UI.\n * @element bx-pagination\n * @slot page-sizes-select - Where to put in the `<page-sizes-select>`.\n * @fires bx-pages-select-changed - The custom event fired after the current page is changed from `<bx-pages-select>`.\n * @fires bx-page-sizes-select-changed\n *   The custom event fired after the number of rows per page is changed from `<bx-page-sizes-select>`.\n */\n@customElement(`${prefix}-pagination`)\nclass BXPagination extends FocusMixin(HostListenerMixin(LitElement)) {\n  /**\n   * @returns Page status text.\n   */\n  private _renderStatusText() {\n    const { atLastPage, start, pageSize, total, formatStatusWithDeterminateTotal, formatStatusWithIndeterminateTotal } = this;\n    // * Regular: `1-10 of 100 items`\n    // * Indeterminate total: `Item 1-10` (`Item 11-` at the last page)\n    const end = atLastPage ? undefined : Math.min(start + pageSize, total == null ? Infinity : total);\n    const format = total == null ? formatStatusWithIndeterminateTotal : formatStatusWithDeterminateTotal;\n    // `start`/`end` properties starts with zero, whereas we want to show number starting with 1\n    return format({ start: start + 1, end, count: total });\n  }\n\n  /**\n   * Handles user-initiated change in the row number the current page starts with.\n   * @param start The new current row number, index that starts with zero.\n   */\n  private _handleUserInitiatedChangeStart(start: number) {\n    this.start = start;\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof BXPagination).eventChangeCurrent, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          start,\n        },\n      })\n    );\n  }\n\n  /**\n   * Handles `click` event on the previous button.\n   */\n  private _handleClickPrevButton() {\n    const { start: oldStart, pageSize } = this;\n    const newStart = Math.max(oldStart - pageSize, 0);\n    if (newStart !== oldStart) {\n      this._handleUserInitiatedChangeStart(newStart);\n    }\n  }\n\n  /**\n   * Handles `click` event on the next button.\n   */\n  private _handleClickNextButton() {\n    const { start: oldStart, pageSize, total } = this;\n    const newStart = oldStart + pageSize;\n    if (newStart < (total == null ? Infinity : total)) {\n      this._handleUserInitiatedChangeStart(newStart);\n    }\n  }\n\n  /**\n   * Handles user-initiated change in current page.\n   * @param event The event.\n   */\n  @HostListener('eventChangePage')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleChangePage = ({ detail }: CustomEvent) => {\n    const { value } = detail;\n    const { pageSize } = this;\n    this._handleUserInitiatedChangeStart(value * pageSize);\n  };\n\n  /**\n   * Handles user-initiated change in number of rows per page.\n   * @param event The event.\n   */\n  @HostListener('eventChangePageSize')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleChangePageSize = ({ detail }: CustomEvent) => {\n    this.pageSize = detail.value;\n  };\n\n  /**\n   * The formatter, used with determinate the total pages. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatStatusWithDeterminateTotal = ({ start, end, count }) => `${start}–${end} of ${count} item${count <= 1 ? '' : 's'}`;\n\n  /**\n   * The formatter, used with indeterminate the total pages. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatStatusWithIndeterminateTotal = ({ start, end }) => (end == null ? `Item ${start}–` : `Item ${start}–${end}`);\n\n  /**\n   * `true` to explicitly state that user is at the last page.\n   */\n  @property({ type: Boolean, attribute: 'at-last-page' })\n  atLastPage!: boolean;\n\n  /**\n   * `true` if the pagination UI should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The assistive text for the button to go to next page.\n   */\n  @property({ attribute: 'next-button-text' })\n  nextButtonText = 'Next page';\n\n  /**\n   * Number of items per page.\n   */\n  @property({ type: Number, attribute: 'page-size' })\n  pageSize = 10;\n\n  /**\n   * The label text for the UI to select page size.\n   */\n  @property({ attribute: 'page-size-label-text' })\n  pageSizeLabelText!: string;\n\n  /**\n   * The assistive text for the button to go to previous page.\n   */\n  @property({ attribute: 'prev-button-text' })\n  prevButtonText = 'Previous page';\n\n  /**\n   * The row number where current page start with, index that starts with zero.\n   */\n  @property({ type: Number })\n  start = 0;\n\n  /**\n   * The number of total items.\n   */\n  @property({ type: Number })\n  total!: number;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  updated(changedProperties) {\n    const { pageSize } = this;\n    const { selectorPageSizesSelect, selectorPagesSelect } = this.constructor as typeof BXPagination;\n    if (changedProperties.has('pageSize')) {\n      forEach(this.querySelectorAll(selectorPageSizesSelect), elem => {\n        (elem as BXPageSizesSelect).value = pageSize;\n      });\n    }\n    if (changedProperties.has('pageSize') || changedProperties.has('start')) {\n      const { start } = this;\n      forEach(this.querySelectorAll(selectorPagesSelect), elem => {\n        (elem as BXPagesSelect).value = Math.floor(start / pageSize);\n      });\n    }\n    if (changedProperties.has('pageSize') || changedProperties.has('total')) {\n      const { total } = this;\n      forEach(this.querySelectorAll(selectorPagesSelect), elem => {\n        (elem as BXPagesSelect).total = Math.ceil(total / pageSize);\n      });\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      nextButtonText,\n      prevButtonText,\n      pageSize,\n      start,\n      total,\n      _handleClickPrevButton: handleClickPrevButton,\n      _handleClickNextButton: handleClickNextButton,\n    } = this;\n    const { atLastPage = start + pageSize >= total } = this;\n    const prevButtonDisabled = disabled || start === 0;\n    const nextButtonDisabled = disabled || atLastPage;\n    const prevButtonClasses = classMap({\n      [`${prefix}--pagination__button`]: true,\n      [`${prefix}--pagination__button--backward`]: true,\n      [`${prefix}--pagination__button--no-index`]: prevButtonDisabled,\n    });\n    const nextButtonClasses = classMap({\n      [`${prefix}--pagination__button`]: true,\n      [`${prefix}--pagination__button--forward`]: true,\n      [`${prefix}--pagination__button--no-index`]: nextButtonDisabled,\n    });\n    return html`\n      <div class=\"${prefix}--pagination__left\">\n        <slot name=\"page-sizes-select\"></slot>\n        <div class=\"${prefix}-ce--pagination__divider\"></div>\n        <span class=\"${prefix}--pagination__text ${prefix}--pagination__items-count\">${this._renderStatusText()}</span>\n      </div>\n      <div class=\"${prefix}-ce--pagination__divider\"></div>\n      <div class=\"${prefix}--pagination__right\">\n        <slot></slot>\n        <div class=\"${prefix}--pagination__control-buttons\">\n          <button\n            ?disabled=\"${prevButtonDisabled}\"\n            class=\"${prevButtonClasses}\"\n            title=\"${prevButtonText}\"\n            @click=\"${handleClickPrevButton}\">\n            ${CaretLeft24()}\n          </button>\n          <button\n            ?disabled=\"${nextButtonDisabled}\"\n            class=\"${nextButtonClasses}\"\n            title=\"${nextButtonText}\"\n            @click=\"${handleClickNextButton}\">\n            ${CaretRight24()}\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * A selector that will return the select box for the current page.\n   */\n  static get selectorPagesSelect() {\n    return `${prefix}-pages-select`;\n  }\n\n  /**\n   * A selector that will return the select box for page sizes.\n   */\n  static get selectorPageSizesSelect() {\n    return `${prefix}-page-sizes-select`;\n  }\n\n  /**\n   * The name of the custom event fired after the current row number is changed.\n   */\n  static get eventChangeCurrent() {\n    return `${prefix}-pagination-changed-current`;\n  }\n\n  /**\n   * The name of the custom event fired after the current page is changed from `<bx-pages-select>`.\n   */\n  static get eventChangePage() {\n    return `${prefix}-pages-select-changed`;\n  }\n\n  /**\n   * The name of the custom event fired after the number of rows per page is changed from `<bx-page-sizes-select>`.\n   */\n  static get eventChangePageSize() {\n    return `${prefix}-page-sizes-select-changed`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXPagination;\n"],"file":"pagination.js"}