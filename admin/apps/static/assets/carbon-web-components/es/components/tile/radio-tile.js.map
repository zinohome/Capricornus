{"version":3,"sources":["components/tile/radio-tile.ts"],"names":["settings","customElement","HostListener","HostListenerMixin","RadioGroupManager","NAVIGATION_DIRECTION","SelectableTile","prefix","navigationDirectionForKey","ArrowUp","BACKWARD","Up","ArrowDown","FORWARD","Down","BXRadioTile","_manager","get","getRootNode","composed","name","_inputNode","inputNode","manager","add","delete","event","navigationDirection","key","select","navigate","preventDefault","_attachManager","_detachManager","changedProperties","has"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { customElement } from 'lit-element';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport RadioGroupManager, { NAVIGATION_DIRECTION } from '../../globals/internal/radio-group-manager';\nimport SelectableTile from './selectable-tile';\n\nconst { prefix } = settings;\n\n/**\n * Map of navigation direction by key.\n */\nconst navigationDirectionForKey = {\n  ArrowUp: NAVIGATION_DIRECTION.BACKWARD,\n  Up: NAVIGATION_DIRECTION.BACKWARD, // IE\n  ArrowDown: NAVIGATION_DIRECTION.FORWARD,\n  Down: NAVIGATION_DIRECTION.FORWARD, // IE\n};\n\n/**\n * Single-selectable tile.\n * @element bx-radio-tile\n */\n@customElement(`${prefix}-radio-tile`)\nclass BXRadioTile extends HostListenerMixin(SelectableTile) {\n  /**\n   * The radio group manager associated with the radio button.\n   */\n  private _manager!: RadioGroupManager;\n\n  /**\n   * The `type` attribute of the `<input>`.\n   */\n  protected _inputType = 'radio';\n\n  /**\n   * Attaches the radio button to the radio group manager.\n   */\n  private _attachManager() {\n    if (!this._manager) {\n      this._manager = RadioGroupManager.get(this.getRootNode({ composed: true }) as Document);\n    }\n    const { name, _inputNode: inputNode, _manager: manager } = this;\n    if (inputNode && name) {\n      manager!.add(inputNode);\n    }\n  }\n\n  /**\n   * Detaches the radio button to the radio group manager.\n   */\n  private _detachManager() {\n    const { _inputNode: inputNode, _manager: manager } = this;\n    if (inputNode && manager) {\n      manager.delete(inputNode);\n    }\n  }\n\n  /**\n   * Handles `keydown` event on this element.\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeydown = (event: KeyboardEvent) => {\n    const { _inputNode: inputNode } = this;\n    const manager = this._manager;\n    if (inputNode && manager) {\n      const navigationDirection = navigationDirectionForKey[event.key];\n      if (navigationDirection) {\n        manager.select(manager.navigate(inputNode, navigationDirection));\n        event.preventDefault(); // Prevent default (scrolling) behavior\n      }\n      if (event.key === ' ' || event.key === 'Enter') {\n        manager.select(inputNode);\n      }\n    }\n  };\n\n  /**\n   * Handles `change` event on the `<input>` in the shadow DOM.\n   */\n  protected _handleChange() {\n    super._handleChange();\n    if (this._manager) {\n      this._manager.select(this._inputNode);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._attachManager();\n  }\n\n  disconnectedCallback() {\n    this._detachManager();\n    super.disconnectedCallback();\n  }\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('name')) {\n      this._detachManager();\n    }\n    return true;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('name')) {\n      this._attachManager();\n    }\n  }\n}\n\nexport default BXRadioTile;\n"],"file":"radio-tile.js"}