{"version":3,"sources":["components/dropdown/dropdown.ts"],"names":["settings","classMap","ifDefined","html","property","query","customElement","LitElement","ChevronDown16","WarningFilled16","FocusMixin","FormMixin","HostListenerMixin","ValidityMixin","HostListener","find","forEach","indexOf","DROPDOWN_COLOR_SCHEME","DROPDOWN_KEYBOARD_ACTION","DROPDOWN_SIZE","DROPDOWN_TYPE","NAVIGATION_DIRECTION","styles","prefix","BXDropdown","itemToSelect","value","querySelectorAll","constructor","selectorItemSelected","item","selected","_assistiveStatusText","selectedItemAssistiveText","_handleUserInitiatedToggle","event","shadowRoot","contains","target","closest","selectorItem","_handleUserInitiatedSelectItem","key","action","getAction","open","NAVIGATING","_clearHighlight","CLOSING","_navigate","TRIGGERING","highlightedItem","querySelector","selectorItemHighlighted","relatedTarget","requestUpdate","_selectionShouldChange","init","bubbles","composed","detail","beforeSelectEvent","CustomEvent","eventBeforeSelect","cancelable","dispatchEvent","_selectionDidChange","afterSelectEvent","eventSelect","force","eventBeforeToggle","eventToggle","selectingItemsAssistiveText","triggerContent","assistiveStatusText","_selectedItemContent","selectedItemContent","selectedItemText","textContent","highlighted","direction","items","highlightedIndex","nextIndex","length","i","nextItem","scrollIntoView","block","nextItemText","undefined","formData","disabled","name","append","attribute","reflect","REGULAR","type","Boolean","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","changedProperties","has","elem","size","range","ownerDocument","createRange","selectNodeContents","cloneContents","helperText","inline","INLINE","console","warn","colorScheme","invalid","labelText","toggleLabelClosed","toggleLabelOpen","validityMessage","_shouldTriggerBeFocusable","shouldTriggerBeFocusable","_handleClickInner","handleClickInner","_handleKeydownInner","handleKeydownInner","_handleKeypressInner","handleKeypressInner","_handleSlotchangeHelperText","handleSlotchangeHelperText","_handleSlotchangeLabelText","handleSlotchangeLabelText","_slotHelperTextNode","slotHelperTextNode","_slotLabelTextNode","slotLabelTextNode","selectedItemsCount","classes","labelClasses","helperClasses","iconContainerClasses","toggleLabel","hasHelperText","assignedNodes","hasLabelText","helper","validityIcon","class","menuBody","String","_renderPrecedingTriggerContent","_renderTriggerContent","_renderFollowingTriggerContent","Set","TRIGGER_KEYS","NONE"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { TemplateResult } from 'lit-html';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport ChevronDown16 from '@carbon/icons/lib/chevron--down/16';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16';\nimport FocusMixin from '../../globals/mixins/focus';\nimport FormMixin from '../../globals/mixins/form';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport ValidityMixin from '../../globals/mixins/validity';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { find, forEach, indexOf } from '../../globals/internal/collection-helpers';\nimport { DROPDOWN_COLOR_SCHEME, DROPDOWN_KEYBOARD_ACTION, DROPDOWN_SIZE, DROPDOWN_TYPE, NAVIGATION_DIRECTION } from './defs';\nimport BXDropdownItem from './dropdown-item';\nimport styles from './dropdown.scss';\n\nexport { DROPDOWN_COLOR_SCHEME, DROPDOWN_KEYBOARD_ACTION, DROPDOWN_SIZE, DROPDOWN_TYPE, NAVIGATION_DIRECTION };\n\nconst { prefix } = settings;\n\n/**\n * Dropdown.\n * @element bx-dropdown\n * @csspart label-text The label text.\n * @csspart helper-text The helper text.\n * @csspart trigger-button The trigger button.\n * @csspart menu-body The menu body.\n * @csspart validity-message The validity message.\n * @fires bx-dropdown-beingselected\n *   The custom event fired before a dropdown item is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires bx-dropdown-beingtoggled\n *   The custom event fired before the open state of this dropdown is toggled upon a user gesture.\n *   Cancellation of this event stops the user-initiated toggling.\n * @fires bx-dropdown-selected - The custom event fired after a dropdown item is selected upon a user gesture.\n * @fires bx-dropdown-toggled - The custom event fired after the open state of this dropdown is toggled upon a user gesture.\n */\n@customElement(`${prefix}-dropdown`)\nclass BXDropdown extends ValidityMixin(HostListenerMixin(FormMixin(FocusMixin(LitElement)))) {\n  /**\n   * The latest status of this dropdown, for screen reader to accounce.\n   */\n  protected _assistiveStatusText?: string;\n\n  /**\n   * The content of the selected item.\n   */\n  protected _selectedItemContent: DocumentFragment | null = null;\n\n  /**\n   * `true` if the trigger button should be focusable.\n   * Derived class can set `false` to this if the trigger button contains another primary focusable element (e.g. `<input>`).\n   */\n  protected _shouldTriggerBeFocusable = true;\n\n  /**\n   * The list box `<div>` node.\n   */\n  @query(`.${prefix}--list-box`)\n  protected _listBoxNode!: HTMLDivElement;\n\n  /**\n   * The `<slot>` element for the helper text in the shadow DOM.\n   */\n  @query('slot[name=\"helper-text\"]')\n  protected _slotHelperTextNode!: HTMLSlotElement;\n\n  /**\n   * The `<slot>` element for the label text in the shadow DOM.\n   */\n  @query('slot[name=\"label-text\"]')\n  protected _slotLabelTextNode!: HTMLSlotElement;\n\n  /**\n   * @param itemToSelect A dropdown item. Absense of this argument means clearing selection.\n   * @returns `true` if the selection of this dropdown should change if the given item is selected upon user interaction.\n   */\n  protected _selectionShouldChange(itemToSelect?: BXDropdownItem) {\n    return !itemToSelect || itemToSelect.value !== this.value;\n  }\n\n  /**\n   * A callback that runs after change in dropdown selection upon user interaction is confirmed.\n   * @param itemToSelect\n   *   A dropdown item.\n   *   Absense of this argument means clearing selection, which may be handled by a derived class.\n   */\n  protected _selectionDidChange(itemToSelect?: BXDropdownItem) {\n    if (itemToSelect) {\n      this.value = itemToSelect.value;\n      forEach(this.querySelectorAll((this.constructor as typeof BXDropdown).selectorItemSelected), item => {\n        (item as BXDropdownItem).selected = false;\n      });\n      itemToSelect.selected = true;\n      this._assistiveStatusText = this.selectedItemAssistiveText;\n      this._handleUserInitiatedToggle(false);\n    }\n  }\n\n  /**\n   * Handles `click` event on the top-level element in the shadow DOM.\n   * @param event The event.\n   */\n  protected _handleClickInner(event: MouseEvent) {\n    if (this.shadowRoot!.contains(event.target as Node)) {\n      this._handleUserInitiatedToggle();\n    } else {\n      const item = (event.target as Element).closest((this.constructor as typeof BXDropdown).selectorItem) as BXDropdownItem;\n      if (this.contains(item)) {\n        this._handleUserInitiatedSelectItem(item);\n      }\n    }\n  }\n\n  /**\n   * Handler for the `keydown` event on the top-level element in the shadow DOM.\n   */\n  protected _handleKeydownInner(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof BXDropdown).getAction(key);\n    if (!this.open) {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.NAVIGATING:\n          this._handleUserInitiatedToggle(true);\n          // If this menu gets open with an arrow key, reset the highlight\n          this._clearHighlight();\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.CLOSING:\n          this._handleUserInitiatedToggle(false);\n          break;\n        case DROPDOWN_KEYBOARD_ACTION.NAVIGATING:\n          this._navigate(NAVIGATION_DIRECTION[key]);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Handler for the `keypress` event on the top-level element in the shadow DOM.\n   */\n  protected _handleKeypressInner(event: KeyboardEvent) {\n    const { key } = event;\n    const action = (this.constructor as typeof BXDropdown).getAction(key);\n    if (!this.open) {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.TRIGGERING:\n          this._handleUserInitiatedToggle(true);\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (action) {\n        case DROPDOWN_KEYBOARD_ACTION.TRIGGERING:\n          {\n            const constructor = this.constructor as typeof BXDropdown;\n            const highlightedItem = this.querySelector(constructor.selectorItemHighlighted) as BXDropdownItem;\n            if (highlightedItem) {\n              this._handleUserInitiatedSelectItem(highlightedItem);\n            } else {\n              this._handleUserInitiatedToggle(false);\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Handles `blur` event handler on the document this element is in.\n   * @param event The event.\n   */\n  @HostListener('focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  protected _handleFocusOut(event: FocusEvent) {\n    if (!this.contains(event.relatedTarget as Node)) {\n      this._handleUserInitiatedToggle(false);\n    }\n  }\n\n  /**\n   * Handles `slotchange` event for the `<slot>` for helper text.\n   */\n  protected _handleSlotchangeHelperText() {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles `slotchange` event for the `<slot>` for label text.\n   */\n  protected _handleSlotchangeLabelText() {\n    this.requestUpdate();\n  }\n\n  /**\n   * Handles user-initiated selection of a dropdown item.\n   * @param [item] The dropdown item user wants to select. Absense of this argument means clearing selection.\n   */\n  protected _handleUserInitiatedSelectItem(item?: BXDropdownItem) {\n    if (this._selectionShouldChange(item)) {\n      const init = {\n        bubbles: true,\n        composed: true,\n        detail: {\n          item,\n        },\n      };\n      const constructor = this.constructor as typeof BXDropdown;\n      const beforeSelectEvent = new CustomEvent(constructor.eventBeforeSelect, {\n        ...init,\n        cancelable: true,\n      });\n      if (this.dispatchEvent(beforeSelectEvent)) {\n        this._selectionDidChange(item);\n        const afterSelectEvent = new CustomEvent(constructor.eventSelect, init);\n        this.dispatchEvent(afterSelectEvent);\n      }\n    }\n  }\n\n  /**\n   * Handles user-initiated toggling the open state.\n   * @param [force] If specified, forces the open state to the given one.\n   */\n  protected _handleUserInitiatedToggle(force: boolean = !this.open) {\n    const { eventBeforeToggle, eventToggle } = this.constructor as typeof BXDropdown;\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        open: force,\n      },\n    };\n    if (this.dispatchEvent(new CustomEvent(eventBeforeToggle, init))) {\n      this.open = force;\n      if (this.open) {\n        this._assistiveStatusText = this.selectingItemsAssistiveText;\n      } else {\n        const {\n          selectedItemAssistiveText,\n          triggerContent,\n          _assistiveStatusText: assistiveStatusText,\n          _selectedItemContent: selectedItemContent,\n        } = this;\n        const selectedItemText = (selectedItemContent && selectedItemContent.textContent) || triggerContent;\n        if (selectedItemText && assistiveStatusText !== selectedItemAssistiveText) {\n          this._assistiveStatusText = selectedItemText;\n        }\n        forEach(this.querySelectorAll((this.constructor as typeof BXDropdown).selectorItemHighlighted), item => {\n          (item as BXDropdownItem).highlighted = false;\n        });\n      }\n      this.requestUpdate();\n      this.dispatchEvent(new CustomEvent(eventToggle, init));\n    }\n  }\n\n  /**\n   * Clears the selection of dropdown items.\n   */\n  protected _clearHighlight() {\n    forEach(this.querySelectorAll((this.constructor as typeof BXDropdown).selectorItem), item => {\n      (item as BXDropdownItem).highlighted = false;\n    });\n  }\n\n  /**\n   * Navigate through dropdown items.\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   */\n  protected _navigate(direction: number) {\n    const constructor = this.constructor as typeof BXDropdown;\n    const items = this.querySelectorAll(constructor.selectorItem);\n    const highlightedItem = this.querySelector(constructor.selectorItemHighlighted);\n    const highlightedIndex = indexOf(items, highlightedItem!);\n    let nextIndex = highlightedIndex + direction;\n    if (nextIndex < 0) {\n      nextIndex = items.length - 1;\n    }\n    if (nextIndex >= items.length) {\n      nextIndex = 0;\n    }\n    forEach(items, (item, i) => {\n      (item as BXDropdownItem).highlighted = i === nextIndex;\n    });\n\n    const nextItem = items[nextIndex];\n    // Using `{ block: 'nearest' }` to prevent scrolling unless scrolling is absolutely necessary.\n    // `scrollIntoViewOptions` seems to work in latest Safari despite of MDN/caniuse table.\n    // IE falls back to the old behavior.\n    nextItem.scrollIntoView({ block: 'nearest' });\n\n    const nextItemText = nextItem.textContent;\n    if (nextItemText) {\n      this._assistiveStatusText = nextItemText;\n    }\n    this.requestUpdate();\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * @returns The content preceding the trigger button.\n   */\n  protected _renderPrecedingTriggerContent(): TemplateResult | void {\n    return undefined;\n  }\n  /* eslint-enable class-methods-use-this */\n\n  /**\n   * @returns The main content of the trigger button.\n   */\n  protected _renderTriggerContent(): TemplateResult {\n    const { triggerContent, _selectedItemContent: selectedItemContent } = this;\n    return html` <span id=\"trigger-label\" class=\"${prefix}--list-box__label\">${selectedItemContent || triggerContent}</span> `;\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * @returns The content following the trigger button.\n   */\n  protected _renderFollowingTriggerContent(): TemplateResult | void {\n    return undefined;\n  }\n  /* eslint-enable class-methods-use-this */\n\n  /**\n   * Handles event to include selected value on the parent form.\n   * @param event The event.\n   */\n  _handleFormdata(event: Event) {\n    const { formData } = event as any; // TODO: Wait for `FormDataEvent` being available in `lib.dom.d.ts`\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * The color scheme.\n   */\n  @property({ attribute: 'color-scheme', reflect: true })\n  colorScheme = DROPDOWN_COLOR_SCHEME.REGULAR;\n\n  /**\n   * `true` if this dropdown should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The helper text.\n   */\n  @property({ attribute: 'helper-text' })\n  helperText = '';\n\n  /**\n   * `true` to show the UI of the invalid state.\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * The label text.\n   */\n  @property({ attribute: 'label-text' })\n  labelText = '';\n\n  /**\n   * Name for the dropdown in the `FormData`\n   */\n  @property()\n  name = '';\n\n  /**\n   * `true` if this dropdown should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * `true` if the value is required.\n   */\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  /**\n   * The special validity message for `required`.\n   */\n  @property({ attribute: 'required-validity-message' })\n  requiredValidityMessage = 'Please fill out this field.';\n\n  /**\n   * An assistive text for screen reader to announce, telling the open state.\n   */\n  @property({ attribute: 'selecting-items-assistive-text' })\n  selectingItemsAssistiveText = 'Selecting items. Use up and down arrow keys to navigate.';\n\n  /**\n   * An assistive text for screen reader to announce, telling that an item is selected.\n   */\n  @property({ attribute: 'selected-item-assistive-text' })\n  selectedItemAssistiveText = 'Selected an item.';\n\n  /**\n   * Dropdown size.\n   */\n  @property({ reflect: true })\n  size = DROPDOWN_SIZE.REGULAR;\n\n  /**\n   * The `aria-label` attribute for the UI indicating the closed state.\n   */\n  @property({ attribute: 'toggle-label-closed' })\n  toggleLabelClosed = '';\n\n  /**\n   * The `aria-label` attribute for the UI indicating the open state.\n   */\n  @property({ attribute: 'toggle-label-open' })\n  toggleLabelOpen = '';\n\n  /**\n   * The content of the trigger button.\n   */\n  @property({ attribute: 'trigger-content' })\n  triggerContent = '';\n\n  /**\n   * `true` if this dropdown should use the inline UI variant.\n   */\n  @property({ reflect: true })\n  type = DROPDOWN_TYPE.REGULAR;\n\n  /**\n   * The validity message.\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  /**\n   * The value of the selected item.\n   */\n  @property({ reflect: true })\n  value = '';\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  shouldUpdate(changedProperties) {\n    const { selectorItem } = this.constructor as typeof BXDropdown;\n    if (changedProperties.has('size')) {\n      forEach(this.querySelectorAll(selectorItem), elem => {\n        (elem as BXDropdownItem).size = this.size;\n      });\n    }\n    if (changedProperties.has('value')) {\n      // `<bx-multi-select>` updates selection beforehand\n      // because our rendering logic for `<bx-multi-select>` looks for selected items via `qSA()`\n      forEach(this.querySelectorAll(selectorItem), elem => {\n        (elem as BXDropdownItem).selected = (elem as BXDropdownItem).value === this.value;\n      });\n      const item = find(this.querySelectorAll(selectorItem), elem => (elem as BXDropdownItem).value === this.value);\n      if (item) {\n        const range = this.ownerDocument!.createRange();\n        range.selectNodeContents(item);\n        this._selectedItemContent = range.cloneContents();\n      } else {\n        this._selectedItemContent = null;\n      }\n    }\n    return true;\n  }\n\n  updated(changedProperties) {\n    const { helperText, type } = this;\n    const inline = type === DROPDOWN_TYPE.INLINE;\n    const { selectorItem } = this.constructor as typeof BXDropdown;\n    if (changedProperties.has('disabled')) {\n      const { disabled } = this;\n      // Propagate `disabled` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(this.querySelectorAll(selectorItem), elem => {\n        (elem as BXDropdownItem).disabled = disabled;\n      });\n    }\n    if ((changedProperties.has('helperText') || changedProperties.has('type')) && helperText && inline) {\n      // eslint-disable-next-line no-console\n      console.warn('Found `helperText` property/attribute usage in inline mode, that is not supported, at:', this);\n    }\n  }\n\n  render() {\n    const {\n      colorScheme,\n      disabled,\n      helperText,\n      invalid,\n      labelText,\n      open,\n      toggleLabelClosed,\n      toggleLabelOpen,\n      size,\n      type,\n      validityMessage,\n      _assistiveStatusText: assistiveStatusText,\n      _shouldTriggerBeFocusable: shouldTriggerBeFocusable,\n      _handleClickInner: handleClickInner,\n      _handleKeydownInner: handleKeydownInner,\n      _handleKeypressInner: handleKeypressInner,\n      _handleSlotchangeHelperText: handleSlotchangeHelperText,\n      _handleSlotchangeLabelText: handleSlotchangeLabelText,\n      _slotHelperTextNode: slotHelperTextNode,\n      _slotLabelTextNode: slotLabelTextNode,\n    } = this;\n    const inline = type === DROPDOWN_TYPE.INLINE;\n    const selectedItemsCount = this.querySelectorAll((this.constructor as typeof BXDropdown).selectorItemSelected).length;\n    const classes = classMap({\n      [`${prefix}--dropdown`]: true,\n      [`${prefix}--list-box`]: true,\n      [`${prefix}--list-box--${colorScheme}`]: colorScheme,\n      [`${prefix}--list-box--disabled`]: disabled,\n      [`${prefix}--list-box--inline`]: inline,\n      [`${prefix}--list-box--expanded`]: open,\n      [`${prefix}--list-box--${size}`]: size,\n      [`${prefix}--dropdown--invalid`]: invalid,\n      [`${prefix}--dropdown--inline`]: inline,\n      [`${prefix}--dropdown--selected`]: selectedItemsCount > 0,\n    });\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--label--disabled`]: disabled,\n    });\n    const helperClasses = classMap({\n      [`${prefix}--form__helper-text`]: true,\n      [`${prefix}--form__helper-text--disabled`]: disabled,\n    });\n    const iconContainerClasses = classMap({\n      [`${prefix}--list-box__menu-icon`]: true,\n      [`${prefix}--list-box__menu-icon--open`]: open,\n    });\n    const toggleLabel = (open ? toggleLabelOpen : toggleLabelClosed) || undefined;\n    const hasHelperText = helperText || (slotHelperTextNode && slotHelperTextNode.assignedNodes().length > 0);\n    const hasLabelText = labelText || (slotLabelTextNode && slotLabelTextNode.assignedNodes().length > 0);\n    const helper = !invalid\n      ? html`\n          <div part=\"helper-text\" class=\"${helperClasses}\" ?hidden=\"${inline || !hasHelperText}\">\n            <slot name=\"helper-text\" @slotchange=\"${handleSlotchangeHelperText}\">${helperText}</slot>\n          </div>\n        `\n      : html`\n          <div part=\"validity-message\" class=${`${prefix}--form-requirement`}>\n            <slot name=\"validity-message\">${validityMessage}</slot>\n          </div>\n        `;\n    const validityIcon = !invalid\n      ? undefined\n      : WarningFilled16({ class: `${prefix}--list-box__invalid-icon`, 'aria-label': toggleLabel });\n    const menuBody = !open\n      ? undefined\n      : html`\n          <div id=\"menu-body\" part=\"menu-body\" class=\"${prefix}--list-box__menu\" role=\"listbox\" tabindex=\"-1\">\n            <slot></slot>\n          </div>\n        `;\n    return html`\n      <label part=\"label-text\" class=\"${labelClasses}\" ?hidden=\"${!hasLabelText}\">\n        <slot name=\"label-text\" @slotchange=\"${handleSlotchangeLabelText}\">${labelText}</slot>\n      </label>\n      <div\n        role=\"listbox\"\n        class=\"${classes}\"\n        ?data-invalid=${invalid}\n        @click=${handleClickInner}\n        @keydown=${handleKeydownInner}\n        @keypress=${handleKeypressInner}>\n        ${validityIcon}\n        <div\n          part=\"trigger-button\"\n          role=\"${ifDefined(!shouldTriggerBeFocusable ? undefined : 'button')}\"\n          class=\"${prefix}--list-box__field\"\n          tabindex=\"${ifDefined(!shouldTriggerBeFocusable ? undefined : '0')}\"\n          aria-labelledby=\"trigger-label\"\n          aria-expanded=\"${String(open)}\"\n          aria-haspopup=\"listbox\"\n          aria-owns=\"menu-body\"\n          aria-controls=\"menu-body\">\n          ${this._renderPrecedingTriggerContent()}${this._renderTriggerContent()}${this._renderFollowingTriggerContent()}\n          <div class=\"${iconContainerClasses}\">${ChevronDown16({ 'aria-label': toggleLabel })}</div>\n        </div>\n        ${menuBody}\n      </div>\n      ${helper}\n      <div class=\"${prefix}--assistive-text\" role=\"status\" aria-live=\"assertive\" aria-relevant=\"additions text\">\n        ${assistiveStatusText}\n      </div>\n    `;\n  }\n\n  /**\n   * Symbols of keys that triggers opening/closing menu and selecting/deselecting menu item.\n   */\n  static TRIGGER_KEYS = new Set([' ', 'Enter']);\n\n  /**\n   * A selector that will return highlighted items.\n   */\n  static get selectorItemHighlighted() {\n    return `${prefix}-dropdown-item[highlighted]`;\n  }\n\n  /**\n   * A selector that will return dropdown items.\n   */\n  static get selectorItem() {\n    return `${prefix}-dropdown-item`;\n  }\n\n  /**\n   * A selector that will return selected items.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-dropdown-item[selected]`;\n  }\n\n  /**\n   * The name of the custom event fired before a dropdown item is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-dropdown-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a dropdown item is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-dropdown-selected`;\n  }\n\n  /**\n   * The name of the custom event fired before this dropdown item is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this dropdown item.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-dropdown-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this dropdown item is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-dropdown-toggled`;\n  }\n\n  static styles = styles;\n\n  /**\n   * @returns A action for dropdown for the given key symbol.\n   */\n  static getAction(key: string) {\n    if (key === 'Escape') {\n      return DROPDOWN_KEYBOARD_ACTION.CLOSING;\n    }\n    if (key in NAVIGATION_DIRECTION) {\n      return DROPDOWN_KEYBOARD_ACTION.NAVIGATING;\n    }\n    if (this.TRIGGER_KEYS.has(key)) {\n      return DROPDOWN_KEYBOARD_ACTION.TRIGGERING;\n    }\n    return DROPDOWN_KEYBOARD_ACTION.NONE;\n  }\n}\n\nexport default BXDropdown;\n"],"file":"dropdown.js"}