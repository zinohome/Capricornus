{"version":3,"sources":["components/ui-shell/side-nav-menu.ts"],"names":["settings","html","property","query","customElement","LitElement","ChevronDown20","forEach","FocusMixin","styles","prefix","BXSideNavMenu","expanded","eventBeforeToggle","eventToggle","constructor","init","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","_handleUserInitiatedToggle","target","_hasIcon","hasIcon","assignedNodes","item","nodeType","Node","ELEMENT_NODE","toggleAttribute","attribItemHasIcon","length","_titleIconContainerNode","querySelectorAll","selectorItem","type","Boolean","reflect","attribute","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","hasAttribute","setAttribute","changedProperties","has","elem","tabIndex","forceCollapsed","title","_handleClickExpando","handleClickExpando","_handleSlotChange","handleSlotChange","_handleSlotChangeTitleIcon","handleSlotChangeTitleIcon","String","part"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport ChevronDown20 from '@carbon/icons/lib/chevron--down/20';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport FocusMixin from '../../globals/mixins/focus';\nimport styles from './side-nav.scss';\n\nconst { prefix } = settings;\n\n/**\n * Side nav menu.\n * @element bx-side-nav-menu\n * @slot title-icon - The icon.\n * @csspart expando The expando.\n * @csspart expando-icon-container The expando icon container.\n * @csspart expando-icon The expando icon.\n * @csspart title The title.\n * @csspart title-icon-container The title icon container.\n * @csspart menu-body The menu body.\n */\n@customElement(`${prefix}-side-nav-menu`)\nclass BXSideNavMenu extends FocusMixin(LitElement) {\n  /**\n   * `true` if this menu has an icon.\n   */\n  private _hasIcon = false;\n\n  /**\n   * The container for the title icon.\n   */\n  @query('#title-icon-container')\n  private _titleIconContainerNode!: HTMLDivElement;\n\n  /**\n   * Handles user-initiated toggle request of this side nav menu.\n   * @param expanded The new expanded state.\n   */\n  private _handleUserInitiatedToggle(expanded = !this.expanded) {\n    const { eventBeforeToggle, eventToggle } = this.constructor as typeof BXSideNavMenu;\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        expanded,\n      },\n    };\n    if (this.dispatchEvent(new CustomEvent(eventBeforeToggle, init))) {\n      this.expanded = expanded;\n      this.dispatchEvent(new CustomEvent(eventToggle, init));\n    }\n  }\n\n  /**\n   * Handler for the `click` event on the expando button.\n   */\n  private _handleClickExpando() {\n    this._handleUserInitiatedToggle();\n  }\n\n  /**\n   * Handles `slotchange` event on the non-named `<slot>`.\n   */\n  private _handleSlotChange({ target }) {\n    const { _hasIcon: hasIcon } = this;\n    forEach(target.assignedNodes(), item => {\n      if (item.nodeType === Node.ELEMENT_NODE) {\n        item.toggleAttribute((this.constructor as typeof BXSideNavMenu).attribItemHasIcon, hasIcon);\n      }\n    });\n  }\n\n  /**\n   * Handles `slotchange` event on the `<slot>` for the title icon.\n   */\n  private _handleSlotChangeTitleIcon({ target }) {\n    const constructor = this.constructor as typeof BXSideNavMenu;\n    const hasIcon = target.assignedNodes().length > 0;\n    this._hasIcon = hasIcon;\n    this._titleIconContainerNode?.toggleAttribute('hidden', !hasIcon);\n    forEach(this.querySelectorAll(constructor.selectorItem), item => {\n      item.toggleAttribute(constructor.attribItemHasIcon, hasIcon);\n    });\n  }\n\n  /**\n   * `true` if the menu has active menu item.\n   */\n  @property({ type: Boolean, reflect: true })\n  active = false;\n\n  /**\n   * `true` if the menu should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  /**\n   * `true` if the menu should be forced collapsed upon side nav's expanded state.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'force-collapsed' })\n  forceCollapsed = false;\n\n  /**\n   * The title text.\n   */\n  @property()\n  title = '';\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'listitem');\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('expanded')) {\n      const { selectorItem } = this.constructor as typeof BXSideNavMenu;\n      const { expanded } = this;\n      forEach(this.querySelectorAll(selectorItem), elem => {\n        (elem as HTMLElement).tabIndex = expanded ? 0 : -1;\n      });\n    }\n  }\n\n  render() {\n    const {\n      expanded,\n      forceCollapsed,\n      title,\n      _handleClickExpando: handleClickExpando,\n      _handleSlotChange: handleSlotChange,\n      _handleSlotChangeTitleIcon: handleSlotChangeTitleIcon,\n    } = this;\n    return html`\n      <button\n        type=\"button\"\n        part=\"expando\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"${String(Boolean(expanded && !forceCollapsed))}\"\n        class=\"${prefix}--side-nav__submenu\"\n        @click=${handleClickExpando}>\n        <div id=\"title-icon-container\" part=\"title-icon-container\" hidden class=\"${prefix}--side-nav__icon\">\n          <slot name=\"title-icon\" @slotchange=${handleSlotChangeTitleIcon}></slot>\n        </div>\n        <span part=\"title\" class=\"${prefix}--side-nav__submenu-title\">${title}</span>\n        <div\n          part=\"expando-icon-container\"\n          class=\"${prefix}--side-nav__icon ${prefix}--side-nav__icon--small ${prefix}--side-nav__submenu-chevron\">\n          ${ChevronDown20({ part: 'expando-icon' })}\n        </div>\n      </button>\n      <ul part=\"menu-body\" class=\"${prefix}--side-nav__menu\">\n        <slot @slotchange=${handleSlotChange}></slot>\n      </ul>\n    `;\n  }\n\n  /**\n   * The attribute name of the menu items, that is set if this menu has an icon.\n   */\n  static attribItemHasIcon = 'parent-has-icon';\n\n  /**\n   * A selector that will return the menu items.\n   */\n  static get selectorItem() {\n    return `${prefix}-side-nav-menu-item`;\n  }\n\n  /**\n   * The name of the custom event fired before this side nav menu is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling this side nav menu.\n   */\n  static get eventBeforeToggle() {\n    return `${prefix}-side-nav-menu-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after this side nav menu is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-side-nav-menu-toggled`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXSideNavMenu;\n"],"file":"side-nav-menu.js"}