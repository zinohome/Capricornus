{"version":3,"sources":["components/ui-shell/header-menu-button.ts"],"names":["settings","classMap","html","property","customElement","LitElement","Close20","Menu20","ifNonNull","FocusMixin","SIDE_NAV_COLLAPSE_MODE","SIDE_NAV_USAGE_MODE","styles","prefix","BXHeaderMenuButton","active","dispatchEvent","CustomEvent","constructor","eventToggle","bubbles","cancelable","composed","detail","type","Boolean","reflect","attribute","RESPONSIVE","REGULAR","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","buttonLabelActive","buttonLabelInactive","disabled","_handleClick","handleClick","buttonLabel","classes","slot"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport Close20 from '@carbon/icons/lib/close/20';\nimport Menu20 from '@carbon/icons/lib/menu/20';\nimport ifNonNull from '../../globals/directives/if-non-null';\nimport FocusMixin from '../../globals/mixins/focus';\nimport { SIDE_NAV_COLLAPSE_MODE, SIDE_NAV_USAGE_MODE } from './side-nav';\nimport styles from './header.scss';\n\nconst { prefix } = settings;\n\n/**\n * The trigger button for side nav in header nav.\n * @element bx-header-menu-button\n * @csspart button The button.\n * @csspart toggle-icon The toggle icon.\n * @fires bx-header-menu-button-toggled - The custom event fired after this header menu button is toggled upon a user gesture.\n */\n@customElement(`${prefix}-header-menu-button`)\nclass BXHeaderMenuButton extends FocusMixin(LitElement) {\n  private _handleClick() {\n    const active = !this.active;\n    this.active = active;\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof BXHeaderMenuButton).eventToggle, {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          active,\n        },\n      })\n    );\n  }\n\n  /**\n   * `true` if the button should represent its active state.\n   */\n  @property({ type: Boolean, reflect: true })\n  active = false;\n\n  /**\n   * The `aria-label` attribute for the button in its active state.\n   */\n  @property({ attribute: 'button-label-active' })\n  buttonLabelActive = 'Close navigation menu';\n\n  /**\n   * The `aria-label` attribute for the button in its inactive state.\n   */\n  @property({ attribute: 'button-label-inactive' })\n  buttonLabelInactive = 'Open navigation menu';\n\n  /**\n   * Collapse mode of the side nav.\n   */\n  @property({ reflect: true, attribute: 'collapse-mode' })\n  collapseMode = SIDE_NAV_COLLAPSE_MODE.RESPONSIVE;\n\n  /**\n   * `true` if the button should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Usage mode of the side nav.\n   */\n  @property({ reflect: true, attribute: 'usage-mode' })\n  usageMode = SIDE_NAV_USAGE_MODE.REGULAR;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  render() {\n    const { active, buttonLabelActive, buttonLabelInactive, disabled, _handleClick: handleClick } = this;\n    const buttonLabel = active ? buttonLabelActive : buttonLabelInactive;\n    const classes = classMap({\n      [`${prefix}--header__action`]: true,\n      [`${prefix}--header__menu-trigger`]: true,\n      [`${prefix}--header__menu-toggle`]: true,\n      [`${prefix}--header__action--active`]: active,\n    });\n    return html`\n      <button part=\"button\" class=\"${classes}\" ?disabled=${disabled} aria-label=\"${ifNonNull(buttonLabel)}\" @click=${handleClick}>\n        ${(active ? Close20 : Menu20)({ slot: 'toggle-icon' })}\n      </button>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after this header menu button is toggled upon a user gesture.\n   */\n  static get eventToggle() {\n    return `${prefix}-header-menu-button-toggled`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXHeaderMenuButton;\n"],"file":"header-menu-button.js"}