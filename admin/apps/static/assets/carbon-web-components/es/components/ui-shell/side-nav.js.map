{"version":3,"sources":["components/ui-shell/side-nav.ts"],"names":["html","property","customElement","LitElement","settings","on","HostListenerMixin","HostListener","forEach","SIDE_NAV_COLLAPSE_MODE","SIDE_NAV_USAGE_MODE","styles","prefix","BXSideNav","Promise","resolve","updateComplete","then","_transitionPromise","_hTransition","release","event","expanded","detail","active","_updateAndTransitionPromise","querySelector","constructor","selectorNavItems","focus","_hovered","hovered","querySelectorAll","selectorMenu","item","forceCollapsed","_updatedSideNavMenuForceCollapsedState","reflect","attribute","RESPONSIVE","type","Boolean","REGULAR","hasAttribute","setAttribute","_cleanHTransition","changedProperties","has","collapseMode","usageMode","FIXED","RAIL","HEADER_NAV","console","warn","doc","getRootNode","selectorButtonToggle"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport on from 'carbon-components/es/globals/js/misc/on';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport Handle from '../../globals/internal/handle';\nimport { SIDE_NAV_COLLAPSE_MODE, SIDE_NAV_USAGE_MODE } from './defs';\nimport BXHeaderMenuButton from './header-menu-button';\nimport BXSideNavMenu from './side-nav-menu';\nimport styles from './side-nav.scss';\n\nexport { SIDE_NAV_COLLAPSE_MODE, SIDE_NAV_USAGE_MODE };\n\nconst { prefix } = settings;\n\n/**\n * Side nav.\n * @element bx-side-nav\n */\n@customElement(`${prefix}-side-nav`)\nclass BXSideNav extends HostListenerMixin(LitElement) {\n  /**\n   * `true` if this side nav is hovered.\n   */\n  private _hovered = false;\n\n  /**\n   * The handle for `transitionend` event listener.\n   */\n  private _hTransition: Handle | null = null;\n\n  /**\n   * A promise that is resolved when the transition is complete.\n   */\n  private _transitionPromise = Promise.resolve();\n\n  /**\n   * A promise that is resolved when the transition upon proprety update is complete.\n   */\n  private get _updateAndTransitionPromise() {\n    return this.updateComplete.then(() => this._transitionPromise);\n  }\n\n  /**\n   * Cleans the handle for `transitionend` event listener.\n   */\n  private _cleanHTransition() {\n    if (this._hTransition) {\n      this._hTransition = this._hTransition.release();\n    }\n  }\n\n  /**\n   * Handles `${prefix}-header-menu-button-toggle` event on the document.\n   */\n  @HostListener('parentRoot:eventButtonToggle')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleButtonToggle = async (event: CustomEvent) => {\n    this.expanded = event.detail.active;\n    if (this.expanded) {\n      await this._updateAndTransitionPromise;\n      // Checks if the side nav is not collapsed during the animation\n      if (this.expanded) {\n        (this.querySelector((this.constructor as typeof BXSideNav).selectorNavItems) as HTMLElement)?.focus();\n      }\n    }\n  };\n\n  /**\n   * Force child side nav menus collapsed upon the hover/expanded state of this side nav.\n   */\n  private _updatedSideNavMenuForceCollapsedState() {\n    const { expanded, _hovered: hovered } = this;\n    forEach(this.querySelectorAll((this.constructor as typeof BXSideNav).selectorMenu), item => {\n      (item as BXSideNavMenu).forceCollapsed = !expanded && !hovered;\n    });\n  }\n\n  /**\n   * Handles `mouseover` event handler.\n   */\n  @HostListener('mouseover')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleMouseover() {\n    this._hovered = true;\n    this._updatedSideNavMenuForceCollapsedState();\n  }\n\n  /**\n   * Handles `mouseout` event handler.\n   */\n  @HostListener('mouseout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleMouseout() {\n    this._hovered = false;\n    this._updatedSideNavMenuForceCollapsedState();\n  }\n\n  /**\n   * Collapse mode of the side nav.\n   */\n  @property({ reflect: true, attribute: 'collapse-mode' })\n  collapseMode = SIDE_NAV_COLLAPSE_MODE.RESPONSIVE;\n\n  /**\n   * `true` to expand the side nav.\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  /**\n   * Usage mode of the side nav.\n   */\n  @property({ reflect: true, attribute: 'usage-mode' })\n  usageMode = SIDE_NAV_USAGE_MODE.REGULAR;\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'navigation');\n    }\n    super.connectedCallback();\n  }\n\n  disconnectedCallback() {\n    this._cleanHTransition();\n    super.disconnectedCallback();\n  }\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('expanded')) {\n      this._transitionPromise = new Promise(resolve => {\n        this._cleanHTransition();\n        this._hTransition = on(this, 'transitionend', () => {\n          this._cleanHTransition();\n          resolve();\n        });\n      });\n    }\n    return true;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('collapseMode') || changedProperties.has('usageMode')) {\n      const { collapseMode, usageMode } = this;\n      if (\n        (collapseMode === SIDE_NAV_COLLAPSE_MODE.FIXED || collapseMode === SIDE_NAV_COLLAPSE_MODE.RAIL) &&\n        usageMode === SIDE_NAV_USAGE_MODE.HEADER_NAV\n      ) {\n        console.warn('Fixed/rail modes of side nav cannot be used with header nav mode.'); // eslint-disable-line no-console\n      }\n    }\n    const doc = this.getRootNode() as Document;\n    if (changedProperties.has('collapseMode')) {\n      forEach(doc.querySelectorAll((this.constructor as typeof BXSideNav).selectorButtonToggle), item => {\n        (item as BXHeaderMenuButton).collapseMode = this.collapseMode;\n      });\n    }\n    if (changedProperties.has('expanded')) {\n      this._updatedSideNavMenuForceCollapsedState();\n      forEach(doc.querySelectorAll((this.constructor as typeof BXSideNav).selectorButtonToggle), item => {\n        (item as BXHeaderMenuButton).active = this.expanded;\n      });\n    }\n    if (changedProperties.has('usageMode')) {\n      forEach(doc.querySelectorAll((this.constructor as typeof BXSideNav).selectorButtonToggle), item => {\n        (item as BXHeaderMenuButton).usageMode = this.usageMode;\n      });\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  /**\n   * A selector that will return the toggle buttons.\n   */\n  static get selectorButtonToggle() {\n    return `${prefix}-header-menu-button`;\n  }\n\n  /**\n   * A selector that will return side nav focusable items.\n   */\n  static get selectorNavItems() {\n    return `${prefix}-side-nav-menu, ${prefix}-side-nav-menu-item, ${prefix}-side-nav-link`;\n  }\n\n  /**\n   * A selector that will return side nav menus.\n   */\n  static get selectorMenu() {\n    return `${prefix}-side-nav-menu`;\n  }\n\n  /**\n   * The name of the custom event fired after the header menu button in the document is toggled upon a user gesture.\n   */\n  static get eventButtonToggle() {\n    return `${prefix}-header-menu-button-toggled`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXSideNav;\n"],"file":"side-nav.js"}