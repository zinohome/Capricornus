{"version":3,"sources":["components/ui-shell/header-menu.ts"],"names":["settings","ifDefined","html","property","query","customElement","LitElement","ChevronDownGlyph","FocusMixin","HostListenerMixin","HostListener","forEach","styles","prefix","BXHeaderMenu","_handleUserInitiatedToggle","key","force","expanded","_trigger","focus","relatedTarget","contains","type","Boolean","reflect","attribute","attachShadow","mode","delegatesFocus","hasAttribute","setAttribute","changedProperties","has","selectorItem","constructor","querySelectorAll","elem","tabIndex","triggerContent","menuLabel","_handleClick","handleClick","_handleKeydownTrigger","handleKeydownTrigger","String","part","class"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport ChevronDownGlyph from '@carbon/icons/lib/chevron--down/16';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport styles from './header.scss';\n\nconst { prefix } = settings;\n\n/**\n * Header menu.\n * @element bx-header-menu\n * @csspart trigger The trigger button.\n * @csspart trigger-icon The trigger button icon.\n * @csspart menu-body The menu body.\n */\n@customElement(`${prefix}-header-menu`)\nclass BXHeaderMenu extends HostListenerMixin(FocusMixin(LitElement)) {\n  /**\n   * The trigger button.\n   */\n  @query('a')\n  private _trigger!: HTMLElement;\n\n  /**\n   * Handles `click` event handler on this element.\n   */\n  private _handleClick() {\n    this._handleUserInitiatedToggle();\n  }\n\n  /**\n   * Handler for the `keydown` event on the trigger button.\n   */\n  private _handleKeydownTrigger({ key }: KeyboardEvent) {\n    if (key === 'Esc' || key === 'Escape') {\n      this._handleUserInitiatedToggle(false);\n    }\n  }\n\n  /**\n   * Handles user-initiated toggling the open state.\n   * @param [force] If specified, forces the open state to the given one.\n   */\n  private _handleUserInitiatedToggle(force: boolean = !this.expanded) {\n    this.expanded = force;\n    if (!force) {\n      this._trigger.focus();\n    }\n  }\n\n  /**\n   * Handles `blur` event handler on this element.\n   */\n  @HostListener('focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleBlur({ relatedTarget }: FocusEvent) {\n    if (!this.contains(relatedTarget as Node)) {\n      this.expanded = false;\n    }\n  }\n\n  /**\n   * `true` if the menu should be expanded.\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  /**\n   * The content of the trigger button.\n   */\n  @property({ attribute: 'trigger-content' })\n  triggerContent = '';\n\n  /**\n   * The `aria-label` attribute for the menu UI.\n   */\n  @property({ attribute: 'menu-label' })\n  menuLabel!: string;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: true,\n    });\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'listitem');\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('expanded')) {\n      const { selectorItem } = this.constructor as typeof BXHeaderMenu;\n      const { expanded } = this;\n      forEach(this.querySelectorAll(selectorItem), elem => {\n        (elem as HTMLElement).tabIndex = expanded ? 0 : -1;\n      });\n    }\n  }\n\n  render() {\n    const { expanded, triggerContent, menuLabel, _handleClick: handleClick, _handleKeydownTrigger: handleKeydownTrigger } = this;\n    return html`\n      <a\n        part=\"trigger\"\n        tabindex=\"0\"\n        class=\"${prefix}--header__menu-item ${prefix}--header__menu-title\"\n        href=\"javascript:void 0\"\n        aria-haspopup=\"menu\"\n        aria-expanded=\"${String(Boolean(expanded))}\"\n        @click=${handleClick}\n        @keydown=${handleKeydownTrigger}>\n        ${triggerContent}${ChevronDownGlyph({ part: 'trigger-icon', class: `${prefix}--header__menu-arrow` })}\n      </a>\n      <ul part=\"menu-body\" class=\"${prefix}--header__menu\" aria-label=\"${ifDefined(menuLabel)}\">\n        <slot></slot>\n      </ul>\n    `;\n  }\n\n  /**\n   * A selector that will return the menu items.\n   */\n  static get selectorItem() {\n    return `${prefix}-header-menu-item`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXHeaderMenu;\n"],"file":"header-menu.js"}