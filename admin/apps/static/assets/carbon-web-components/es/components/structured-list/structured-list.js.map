{"version":3,"sources":["components/structured-list/structured-list.ts"],"names":["settings","classMap","html","property","customElement","LitElement","forEach","FocusMixin","styles","prefix","BXStructuredList","attribute","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","hasAttribute","setAttribute","changedProperties","has","querySelectorAll","constructor","selectorRowsWithHeader","elem","selectionName","classes","Boolean"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,0CAArB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAA0D,aAA1D;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaT,QAAnB;AAEA;AACA;AACA;AACA;;IAEMU,gB,cADLN,aAAa,CAAE,GAAEK,MAAO,kBAAX,C;AAAd,QACMC,gBADN,qBACsD;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAAhDA,gB;;;mBAKHP,QAAQ,CAAC;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAD,C;;;;eACO,E;;;;;;;AALhB;AACF;AACA;AACA;AAIE,kCAAmB;AAAA;;AACjB,eAAO,KAAKC,YAAL,CAAkB;AACvBC,UAAAA,IAAI,EAAE,MADiB;AAEvBC,UAAAA,cAAc,EAAEC,MAAM,CAAC,WAAC,gBAAgBC,IAAhB,CAAqBC,SAAS,CAACC,SAA/B,CAAD,2CAA8C,CAAC,EAAD,EAAK,CAAL,CAA9C,EAAuD,CAAvD,CAAD,CAAN,IAAqE;AAF9D,SAAlB,CAAP;AAID;;;;aAED,6BAAoB;AAClB,YAAI,CAAC,KAAKC,YAAL,CAAkB,MAAlB,CAAL,EAAgC;AAC9B,eAAKC,YAAL,CAAkB,MAAlB,EAA0B,OAA1B;AACD;;AACD,6BAnBEV,gBAmBF;AACD;;;;aAED,sBAAaW,iBAAb,EAAgC;AAC9B,YAAIA,iBAAiB,CAACC,GAAlB,CAAsB,eAAtB,CAAJ,EAA4C;AAC1C;AACAhB,UAAAA,OAAO,CAAC,KAAKiB,gBAAL,CAAuB,KAAKC,WAAN,CAA8CC,sBAApE,CAAD,EAA8FC,IAAI,IAAI;AAC1GA,YAAAA,IAAD,CAA8BC,aAA9B,GAA8C,KAAKA,aAAnD;AACD,WAFM,CAAP;AAGD;;AACD,eAAO,IAAP;AACD;;;;aAED,kBAAS;AACP,cAAM;AAAEA,UAAAA;AAAF,YAAoB,IAA1B;AACA,cAAMC,OAAO,GAAG3B,QAAQ,CAAC;AACvB,WAAE,GAAEQ,MAAO,mBAAX,GAAgC,IADT;AAEvB,WAAE,GAAEA,MAAO,8BAAX,GAA2CoB,OAAO,CAACF,aAAD;AAF3B,SAAD,CAAxB;AAIA,eAAOzB,IAAP,+EAA2C0B,OAA3C;AACD;AAED;AACF;AACA;;;;;;;;eACmC,GAAEnB,MAAO,wBAAuBA,MAAO,6B;;;;;;;;;eAExDD,M;;;;;GA9CaD,UAAU,CAACF,UAAD,C;;AAiDzC,eAAeK,gBAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport FocusMixin from '../../globals/mixins/focus';\nimport BXStructuredListRow from './structured-list-row';\nimport styles from './structured-list.scss';\n\nconst { prefix } = settings;\n\n/**\n * Structured list wrapper.\n * @element bx-structured-list\n */\n@customElement(`${prefix}-structured-list`)\nclass BXStructuredList extends FocusMixin(LitElement) {\n  /**\n   * The `name` attribute for the `<input>` for selection.\n   * If present, this structured list will be a selectable one.\n   */\n  @property({ attribute: 'selection-name' })\n  selectionName = '';\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'table');\n    }\n    super.connectedCallback();\n  }\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('selectionName')) {\n      // Propagate `selectionName` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(this.querySelectorAll((this.constructor as typeof BXStructuredList).selectorRowsWithHeader), elem => {\n        (elem as BXStructuredListRow).selectionName = this.selectionName;\n      });\n    }\n    return true;\n  }\n\n  render() {\n    const { selectionName } = this;\n    const classes = classMap({\n      [`${prefix}--structured-list`]: true,\n      [`${prefix}--structured-list--selection`]: Boolean(selectionName),\n    });\n    return html` <section id=\"section\" class=${classes}><slot></slot></section> `;\n  }\n\n  /**\n   * The CSS selector to find the rows, including header rows.\n   */\n  static selectorRowsWithHeader = `${prefix}-structured-list-row,${prefix}-structured-list-header-row`;\n\n  static styles = styles;\n}\n\nexport default BXStructuredList;\n"],"file":"structured-list.js"}