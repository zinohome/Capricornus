{"version":3,"sources":["components/modal/modal.ts"],"names":["settings","classMap","html","property","query","customElement","LitElement","HostListener","HostListenerMixin","MODAL_SIZE","styles","selectorTabbable","prefix","PRECEDING","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINS","FOLLOWING","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","tryFocusElems","elems","reverse","i","length","elem","focus","ownerDocument","activeElement","BXModal","event","composedPath","indexOf","shadowRoot","_handleUserInitiatedClose","target","relatedTarget","open","_startSentinelNode","startSentinelNode","_endSentinelNode","endSentinelNode","oldContains","contains","currentContains","selectorTabbableForModal","constructor","comparisonResult","compareDocumentPosition","_delay","querySelectorAll","key","matches","selectorCloseButton","triggeredBy","init","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","eventBeforeClose","eventClose","attribute","type","Boolean","reflect","REGULAR","size","containerClass","split","filter","reduce","acc","item","containerClasses","_handleClickContainer","changedProperties","has","_launcher","primaryFocusNode","querySelector","selectorPrimaryFocus","ms","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { MODAL_SIZE } from './defs';\nimport styles from './modal.scss';\nimport { selectorTabbable } from '../../globals/settings';\n\nexport { MODAL_SIZE };\n\nconst { prefix } = settings;\n\n// eslint-disable-next-line no-bitwise\nconst PRECEDING = Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n// eslint-disable-next-line no-bitwise\nconst FOLLOWING = Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY;\n\n/**\n * Tries to focus on the given elements and bails out if one of them is successful.\n * @param elems The elements.\n * @param reverse `true` to go through the list in reverse order.\n * @returns `true` if one of the attempts is successful, `false` otherwise.\n */\nfunction tryFocusElems(elems: NodeListOf<HTMLElement>, reverse: boolean = false) {\n  if (!reverse) {\n    for (let i = 0; i < elems.length; ++i) {\n      const elem = elems[i];\n      elem.focus();\n      if (elem.ownerDocument!.activeElement === elem) {\n        return true;\n      }\n    }\n  } else {\n    for (let i = elems.length - 1; i >= 0; --i) {\n      const elem = elems[i];\n      elem.focus();\n      if (elem.ownerDocument!.activeElement === elem) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Modal.\n * @element bx-modal\n * @csspart dialog The dialog.\n * @fires bx-modal-beingclosed\n *   The custom event fired before this modal is being closed upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of closing this modal.\n * @fires bx-modal-closed - The custom event fired after this modal is closed upon a user gesture.\n */\n@customElement(`${prefix}-modal`)\nclass BXModal extends HostListenerMixin(LitElement) {\n  /**\n   * The element that had focus before this modal gets open.\n   */\n  private _launcher: Element | null = null;\n\n  /**\n   * Node to track focus going outside of modal content.\n   */\n  @query('#start-sentinel')\n  private _startSentinelNode!: HTMLAnchorElement;\n\n  /**\n   * Node to track focus going outside of modal content.\n   */\n  @query('#end-sentinel')\n  private _endSentinelNode!: HTMLAnchorElement;\n\n  /**\n   * Handles `click` event on this element.\n   * @param event The event.\n   */\n  @HostListener('click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleClick = (event: MouseEvent) => {\n    if (event.composedPath().indexOf(this.shadowRoot!) < 0) {\n      this._handleUserInitiatedClose(event.target);\n    }\n  };\n\n  /**\n   * Handles `blur` event on this element.\n   * @param event The event.\n   */\n  @HostListener('shadowRoot:focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleBlur = async ({ target, relatedTarget }: FocusEvent) => {\n    const { open, _startSentinelNode: startSentinelNode, _endSentinelNode: endSentinelNode } = this;\n    const oldContains = target !== this && this.contains(target as Node);\n    const currentContains =\n      relatedTarget !== this &&\n      (this.contains(relatedTarget as Node) ||\n        (this.shadowRoot?.contains(relatedTarget as Node) && relatedTarget !== (endSentinelNode as Node)));\n\n    // Performs focus wrapping if _all_ of the following is met:\n    // * This modal is open\n    // * The viewport still has focus\n    // * Modal body used to have focus but no longer has focus\n    const { selectorTabbable: selectorTabbableForModal } = this.constructor as typeof BXModal;\n    if (open && relatedTarget && oldContains && !currentContains) {\n      const comparisonResult = (target as Node).compareDocumentPosition(relatedTarget as Node);\n      // eslint-disable-next-line no-bitwise\n      if (relatedTarget === startSentinelNode || comparisonResult & PRECEDING) {\n        await (this.constructor as typeof BXModal)._delay();\n        if (!tryFocusElems(this.querySelectorAll(selectorTabbableForModal), true) && relatedTarget !== this) {\n          this.focus();\n        }\n      }\n      // eslint-disable-next-line no-bitwise\n      else if (relatedTarget === endSentinelNode || comparisonResult & FOLLOWING) {\n        await (this.constructor as typeof BXModal)._delay();\n        if (!tryFocusElems(this.querySelectorAll(selectorTabbableForModal))) {\n          this.focus();\n        }\n      }\n    }\n  };\n\n  @HostListener('document:keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeydown = ({ key, target }: KeyboardEvent) => {\n    if (key === 'Esc' || key === 'Escape') {\n      this._handleUserInitiatedClose(target);\n    }\n  };\n\n  /**\n   * Handles `click` event on the modal container.\n   * @param event The event.\n   */\n  private _handleClickContainer(event: MouseEvent) {\n    if ((event.target as Element).matches((this.constructor as typeof BXModal).selectorCloseButton)) {\n      this._handleUserInitiatedClose(event.target);\n    }\n  }\n\n  /**\n   * Handles user-initiated close request of this modal.\n   * @param triggeredBy The element that triggered this close request.\n   */\n  private _handleUserInitiatedClose(triggeredBy: EventTarget | null) {\n    if (this.open) {\n      const init = {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: {\n          triggeredBy,\n        },\n      };\n      if (this.dispatchEvent(new CustomEvent((this.constructor as typeof BXModal).eventBeforeClose, init))) {\n        this.open = false;\n        this.dispatchEvent(new CustomEvent((this.constructor as typeof BXModal).eventClose, init));\n      }\n    }\n  }\n\n  /**\n   * The additional CSS class names for the container <div> of the element.\n   */\n  @property({ attribute: 'container-class' })\n  containerClass = '';\n\n  /**\n   * `true` if the modal should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * Modal size.\n   */\n  @property({ reflect: true })\n  size = MODAL_SIZE.REGULAR;\n\n  render() {\n    const { size } = this;\n    const containerClass = this.containerClass\n      .split(' ')\n      .filter(Boolean)\n      .reduce((acc, item) => ({ ...acc, [item]: true }), {});\n    const containerClasses = classMap({\n      [`${prefix}--modal-container`]: true,\n      [`${prefix}--modal-container--${size}`]: size,\n      ...containerClass,\n    });\n    return html`\n      <a id=\"start-sentinel\" class=\"${prefix}--visually-hidden\" href=\"javascript:void 0\" role=\"navigation\"></a>\n      <div part=\"dialog\" class=${containerClasses} role=\"dialog\" tabindex=\"-1\" @click=${this._handleClickContainer}>\n        <slot></slot>\n      </div>\n      <a id=\"end-sentinel\" class=\"${prefix}--visually-hidden\" href=\"javascript:void 0\" role=\"navigation\"></a>\n    `;\n  }\n\n  async updated(changedProperties) {\n    if (changedProperties.has('open')) {\n      if (this.open) {\n        this._launcher = this.ownerDocument!.activeElement;\n        const primaryFocusNode = this.querySelector((this.constructor as typeof BXModal).selectorPrimaryFocus);\n        await (this.constructor as typeof BXModal)._delay();\n        if (primaryFocusNode) {\n          // For cases where a `carbon-web-components` component (e.g. `<bx-btn>`) being `primaryFocusNode`,\n          // where its first update/render cycle that makes it focusable happens after `<bx-modal>`'s first update/render cycle\n          (primaryFocusNode as HTMLElement).focus();\n        } else if (!tryFocusElems(this.querySelectorAll((this.constructor as typeof BXModal).selectorTabbable), true)) {\n          this.focus();\n        }\n      } else if (this._launcher && typeof (this._launcher as HTMLElement).focus === 'function') {\n        (this._launcher as HTMLElement).focus();\n        this._launcher = null;\n      }\n    }\n  }\n\n  /**\n   * @param ms The number of milliseconds.\n   * @returns A promise that is resolves after the given milliseconds.\n   */\n  private static _delay(ms: number = 0) {\n    return new Promise(resolve => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  /**\n   * A selector selecting buttons that should close this modal.\n   */\n  static get selectorCloseButton() {\n    return `[data-modal-close],${prefix}-modal-close-button`;\n  }\n\n  /**\n   * A selector selecting tabbable nodes.\n   */\n  static get selectorTabbable() {\n    return selectorTabbable;\n  }\n\n  /**\n   * A selector selecting the nodes that should be focused when modal gets open.\n   */\n  static get selectorPrimaryFocus() {\n    return `[data-modal-primary-focus],${prefix}-modal-footer ${prefix}-btn[kind=\"primary\"]`;\n  }\n\n  /**\n   * The name of the custom event fired before this modal is being closed upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of closing this modal.\n   */\n  static get eventBeforeClose() {\n    return `${prefix}-modal-beingclosed`;\n  }\n\n  /**\n   * The name of the custom event fired after this modal is closed upon a user gesture.\n   */\n  static get eventClose() {\n    return `${prefix}-modal-closed`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXModal;\n"],"file":"modal.js"}