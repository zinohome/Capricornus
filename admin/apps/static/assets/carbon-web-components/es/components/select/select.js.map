{"version":3,"sources":["components/select/select.ts"],"names":["ifDefined","html","property","query","customElement","LitElement","classMap","settings","ChevronDown16","WarningFilled16","FORM_ELEMENT_COLOR_SCHEME","ifNonNull","FormMixin","ValidityMixin","filter","INPUT_SIZE","styles","SELECT_COLOR_SCHEME","prefix","BXSelect","Math","random","toString","slice","target","value","eventSelect","constructor","dispatchEvent","CustomEvent","bubbles","composed","detail","requestUpdate","element","selectorItem","selectorLeafItem","childNodes","item","nodeType","Node","ELEMENT_NODE","matches","map","disabled","hasAttribute","label","getAttribute","selected","textContent","_renderItems","event","formData","name","append","_selectNode","length","options","type","Boolean","attribute","reflect","REGULAR","Number","selectedIndex","attachShadow","mode","delegatesFocus","_observerMutation","MutationObserver","_handleMutation","observe","attributes","childList","subtree","disconnect","changedProperties","has","_placeholderItemValue","placeholderItemValue","helperText","invalid","labelText","placeholder","size","validityMessage","_handleInput","handleInput","inputClasses","labelClasses","helperTextClasses","supplementalText","String","undefined","class"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ifDefined } from 'lit-html/directives/if-defined';\nimport { html, property, query, customElement, LitElement } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport ChevronDown16 from '@carbon/icons/lib/chevron--down/16';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16';\nimport { FORM_ELEMENT_COLOR_SCHEME } from '../../globals/shared-enums';\nimport ifNonNull from '../../globals/directives/if-non-null';\nimport FormMixin from '../../globals/mixins/form';\nimport ValidityMixin from '../../globals/mixins/validity';\nimport { filter } from '../../globals/internal/collection-helpers';\nimport { INPUT_SIZE } from '../input/input';\nimport styles from './select.scss';\n\nexport { FORM_ELEMENT_COLOR_SCHEME as SELECT_COLOR_SCHEME } from '../../globals/shared-enums';\n\nconst { prefix } = settings;\n\n/**\n * Select box.\n * @element bx-select\n * @slot helper-text - The helper text.\n * @slot label-text - The label text.\n * @slot validity-message - The validity message. If present and non-empty, this input shows the UI of its invalid state.\n */\n@customElement(`${prefix}-select`)\nclass BXSelect extends ValidityMixin(FormMixin(LitElement)) {\n  /**\n   * The mutation observer DOM mutation.\n   */\n  private _observerMutation: MutationObserver | null = null;\n\n  /**\n   * The `value` for placeholder `<option>`.\n   */\n  private _placeholderItemValue = `__${prefix}-select-placeholder_${Math.random().toString(36).slice(2)}`;\n\n  /**\n   * The select box.\n   */\n  @query('select')\n  private _selectNode!: HTMLSelectElement;\n\n  /**\n   * Handles `oninput` event on the `<input>`.\n   * @param event The event.\n   */\n  private _handleInput({ target }: Event) {\n    const { value } = target as HTMLSelectElement;\n    this.value = value;\n    const { eventSelect } = this.constructor as typeof BXSelect;\n    this.dispatchEvent(\n      new CustomEvent(eventSelect, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          value,\n        },\n      })\n    );\n  }\n\n  /**\n   * Handles DOM mutation of `<bx-select-item>` or `<bx-select-item-group>` put in `<bx-select>`, or their changes.\n   * In such event, `<bx-select>` creates the corresponding `<option>` and `<optgroup>`, respectively, into shadow DOM,\n   * with `._renderItems()`.\n   * Doing so allows the shadow DOM style of `<bx-select>` to control the style of the `<option>` and `<optgroup>`,\n   * notably the disabled ones.\n   */\n  private _handleMutation = () => {\n    this.requestUpdate();\n  };\n\n  /**\n   * @param element The parent element containing pseudo `<optgroup>`/`<option>`.\n   * @returns The template containing child `<optgroup>`/`<option>` that will be rendered to shadow DOM.\n   */\n  private _renderItems(element: BXSelect | HTMLOptGroupElement) {\n    const { selectorItem, selectorLeafItem } = this.constructor as typeof BXSelect;\n    // Harvests attributes from `<bx-select-item>` and `<bx-select-item-group>`.\n    // Does not use properties to avoid delay in attribute to property mapping, which runs in custom element reaction cycle:\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-reactions\n    return html`\n      ${filter(element.childNodes, item => item.nodeType === Node.ELEMENT_NODE && (item as Element).matches(selectorItem)).map(\n        item => {\n          const disabled = item.hasAttribute('disabled');\n          const label = item.getAttribute('label');\n          const selected = item.hasAttribute('selected');\n          const value = item.getAttribute('value');\n          const { textContent } = item;\n          return item.matches(selectorLeafItem)\n            ? html`\n                <option\n                  class=\"${prefix}--select-option\"\n                  ?disabled=\"${disabled}\"\n                  label=\"${ifNonNull(label ?? textContent)}\"\n                  ?selected=\"${selected}\"\n                  value=\"${ifNonNull(value)}\">\n                  ${textContent}\n                </option>\n              `\n            : html`\n                <optgroup class=\"${prefix}--select-optgroup\" ?disabled=\"${disabled}\" label=\"${ifNonNull(label)}\">\n                  ${this._renderItems(item)}\n                </optgroup>\n              `;\n        }\n      )}\n    `;\n  }\n\n  _handleFormdata(event: Event) {\n    const { formData } = event as any; // TODO: Wait for `FormDataEvent` being available in `lib.dom.d.ts`\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * The count of child `<option>`s.\n   * If the placeholder is in effect, it includes the `<option>` for the placeholder.\n   */\n  get length() {\n    return this._selectNode.length;\n  }\n\n  /**\n   * The child `<option>`s.\n   */\n  get options() {\n    return this._selectNode.options;\n  }\n\n  /**\n   * This form control's type.\n   */\n  get type() {\n    return this._selectNode.type;\n  }\n\n  /**\n   * Sets the select to be focussed automatically on page load. Defaults to false\n   */\n  @property({ type: Boolean })\n  autofocus = false;\n\n  /**\n   * The color scheme.\n   */\n  @property({ attribute: 'color-scheme', reflect: true })\n  colorScheme = FORM_ELEMENT_COLOR_SCHEME.REGULAR;\n\n  /**\n   * Controls the disabled state of the select\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The helper text.\n   */\n  @property({ attribute: 'helper-text' })\n  helperText = '';\n\n  /**\n   * ID to link the `label` and `select`\n   */\n  @property()\n  id = '';\n\n  /**\n   * Controls the invalid state and visibility of the `validityMessage`\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * The label text.\n   */\n  @property({ attribute: 'label-text' })\n  labelText = '';\n\n  /**\n   * `true` to enable multiple selection.\n   */\n  @property({ type: Boolean })\n  // eslint-disable-next-line class-methods-use-this\n  get multiple() {\n    return false;\n  }\n\n  /**\n   * Name for the select in the `FormData`\n   */\n  @property()\n  name = '';\n\n  /**\n   * Pattern to validate the select against for HTML validity checking\n   */\n  @property()\n  pattern = '';\n\n  /**\n   * Value to display when the select has an empty `value`\n   */\n  @property({ reflect: true })\n  placeholder = '';\n\n  /**\n   * Controls the readonly state of the select\n   */\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  /**\n   * Boolean property to set the required status\n   */\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  /**\n   * The special validity message for `required`.\n   */\n  @property({ attribute: 'required-validity-message' })\n  requiredValidityMessage = 'Please fill out this field.';\n\n  /**\n   * The selected index.\n   */\n  @property({ type: Number })\n  get selectedIndex() {\n    return this._selectNode.selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    this._selectNode.selectedIndex = value;\n    this.value = this._selectNode.value;\n  }\n\n  /**\n   * The input box size.\n   */\n  @property({ reflect: true })\n  size = INPUT_SIZE.REGULAR;\n\n  /**\n   * The validity message.\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  /**\n   * The value of the text area.\n   */\n  @property()\n  value = '';\n\n  createRenderRoot() {\n    return this.attachShadow({ mode: 'open', delegatesFocus: true });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this._observerMutation = new MutationObserver(this._handleMutation);\n    this._observerMutation.observe(this, {\n      attributes: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  disconnectedCallback() {\n    if (this._observerMutation) {\n      this._observerMutation.disconnect();\n      this._observerMutation = null;\n    }\n    super.disconnectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('value')) {\n      const { value, _placeholderItemValue: placeholderItemValue } = this;\n      // Ensures setting the `value` after rendering child `<option>`s/`<optgroup>`s when there is a change in `value`,\n      // given reflecting `value` requires child `<option>`s/`<optgroup>`s being there beforehand\n      this._selectNode.value = !value ? placeholderItemValue : value;\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      helperText,\n      invalid,\n      labelText,\n      placeholder,\n      size,\n      validityMessage,\n      value,\n      _placeholderItemValue: placeholderItemValue,\n      _handleInput: handleInput,\n    } = this;\n\n    const inputClasses = classMap({\n      [`${prefix}--select-input`]: true,\n      [`${prefix}--select-input--${size}`]: size,\n    });\n\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--label--disabled`]: disabled,\n    });\n\n    const helperTextClasses = classMap({\n      [`${prefix}--form__helper-text`]: true,\n      [`${prefix}--form__helper-text--disabled`]: disabled,\n    });\n\n    const supplementalText = !invalid\n      ? html`\n          <div class=\"${helperTextClasses}\">\n            <slot name=\"helper-text\"> ${helperText} </slot>\n          </div>\n        `\n      : html`\n          <div class=\"${prefix}--form-requirement\" id=\"validity-message\">\n            <slot name=\"validity-message\"> ${validityMessage} </slot>\n          </div>\n        `;\n\n    return html`\n      <label class=\"${labelClasses}\" for=\"input\">\n        <slot name=\"label-text\"> ${labelText} </slot>\n      </label>\n      <div class=\"${prefix}--select-input__wrapper\" ?data-invalid=\"${invalid}\">\n        <select\n          id=\"input\"\n          class=\"${inputClasses}\"\n          ?disabled=\"${disabled}\"\n          aria-invalid=\"${String(Boolean(invalid))}\"\n          aria-describedby=\"${ifDefined(!invalid ? undefined : 'validity-message')}\"\n          @input=\"${handleInput}\">\n          ${!placeholder || value\n            ? undefined\n            : html`\n                <option disabled hidden class=\"${prefix}--select-option\" value=\"${placeholderItemValue}\" selected>\n                  ${placeholder}\n                </option>\n              `}\n          ${this._renderItems(this)}\n        </select>\n        ${ChevronDown16({ class: `${prefix}--select__arrow` })}\n        ${!invalid ? undefined : WarningFilled16({ class: `${prefix}--select__invalid-icon` })}\n      </div>\n      ${supplementalText}\n    `;\n  }\n\n  /**\n   * A selector selecting child pseudo `<optgroup>`/`<option>`.\n   */\n  static get selectorItem() {\n    return `${prefix}-select-item-group,${prefix}-select-item`;\n  }\n\n  /**\n   * A selector selecting child pseudo `<option>`.\n   */\n  static get selectorLeafItem() {\n    return `${prefix}-select-item`;\n  }\n\n  /**\n   * The name of the custom event fired after item is selected.\n   */\n  static get eventSelect() {\n    return `${prefix}-select-selected`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXSelect;\n"],"file":"select.js"}