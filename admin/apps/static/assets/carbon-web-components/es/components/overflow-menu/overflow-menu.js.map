{"version":3,"sources":["components/overflow-menu/overflow-menu.ts"],"names":["settings","html","property","customElement","LitElement","OverflowMenuVertical16","HostListener","FocusMixin","HostListenerMixin","find","OVERFLOW_MENU_COLOR_SCHEME","OVERFLOW_MENU_SIZE","styles","prefix","BXOverflowMenu","open","updateComplete","_menuBody","menuBody","focus","_handleUserInitiatedToggle","key","attribute","reflect","REGULAR","type","Boolean","getBoundingClientRect","hasAttribute","setAttribute","shadowRoot","attachShadow","mode","changedProperties","has","colorScheme","childNodes","elem","constructor","FLOATING_MENU","String","class"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport OverflowMenuVertical16 from '@carbon/icons/lib/overflow-menu--vertical/16';\nimport HostListener from '../../globals/decorators/host-listener';\nimport FocusMixin from '../../globals/mixins/focus';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport { find } from '../../globals/internal/collection-helpers';\nimport BXFloatingMenuTrigger from '../floating-menu/floating-menu-trigger';\nimport { OVERFLOW_MENU_COLOR_SCHEME, OVERFLOW_MENU_SIZE } from './defs';\nimport BXOverflowMenuBody from './overflow-menu-body';\nimport styles from './overflow-menu.scss';\n\nexport { OVERFLOW_MENU_COLOR_SCHEME, OVERFLOW_MENU_SIZE };\n\nconst { prefix } = settings;\n\n/**\n * Overflow menu.\n * @element bx-overflow-menu\n * @slot icon - The icon for the trigger button.\n */\n@customElement(`${prefix}-overflow-menu`)\nclass BXOverflowMenu extends HostListenerMixin(FocusMixin(LitElement)) implements BXFloatingMenuTrigger {\n  /**\n   * The menu body.\n   */\n  private _menuBody: BXOverflowMenuBody | null = null;\n\n  /**\n   * Handles user-initiated toggling of the menu.\n   */\n  private async _handleUserInitiatedToggle() {\n    this.open = !this.open;\n    const { open, updateComplete } = this;\n    if (open) {\n      await updateComplete;\n      const { _menuBody: menuBody } = this;\n      menuBody?.focus();\n    }\n  }\n\n  /**\n   * Handles `click` event on the trigger button.\n   */\n  @HostListener('click')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleClickTrigger = async () => {\n    this._handleUserInitiatedToggle();\n  };\n\n  /**\n   * Handles `keydown` event on the trigger button.\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeydownTrigger = async ({ key }) => {\n    if (key === ' ' || key === 'Enter') {\n      this._handleUserInitiatedToggle();\n    }\n  };\n\n  /**\n   * The color scheme.\n   */\n  @property({ attribute: 'color-scheme', reflect: true })\n  colorScheme = OVERFLOW_MENU_COLOR_SCHEME.REGULAR;\n\n  /**\n   * `true` if this overflow menu should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if the dropdown should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * Overflow menu size.\n   */\n  @property({ reflect: true })\n  size = OVERFLOW_MENU_SIZE.REGULAR;\n\n  /**\n   * @returns The position of the trigger button in the viewport.\n   */\n  get triggerPosition() {\n    return this.getBoundingClientRect();\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'button');\n    }\n    if (!this.hasAttribute('tabindex')) {\n      // TODO: Should we use a property?\n      this.setAttribute('tabindex', '0');\n    }\n    if (!this.hasAttribute('aria-haspopup')) {\n      this.setAttribute('aria-haspopup', 'true');\n    }\n    if (!this.hasAttribute('aria-expanded')) {\n      this.setAttribute('aria-expanded', 'false');\n    }\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: 'open' });\n    }\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('open')) {\n      const { colorScheme, open } = this;\n      if (open && !this._menuBody) {\n        this._menuBody = find(this.childNodes, elem => (elem.constructor as typeof BXOverflowMenuBody).FLOATING_MENU);\n      }\n      const { _menuBody: menuBody } = this;\n      if (menuBody) {\n        menuBody.colorScheme = colorScheme;\n        menuBody.open = open;\n        this.setAttribute('aria-expanded', String(Boolean(open)));\n      }\n    }\n    if (changedProperties.has('colorScheme')) {\n      const { colorScheme } = this;\n      const { _menuBody: menuBody } = this;\n      if (menuBody) {\n        menuBody.colorScheme = colorScheme;\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <slot name=\"icon\">\n        ${OverflowMenuVertical16({\n          class: `${prefix}--overflow-menu__icon`,\n        })}\n      </slot>\n    `;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXOverflowMenu;\n"],"file":"overflow-menu.js"}