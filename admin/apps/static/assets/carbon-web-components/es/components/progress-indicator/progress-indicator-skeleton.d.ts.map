{"version":3,"sources":["components/progress-indicator/progress-indicator-skeleton.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO,EAAiC,UAAU,EAAE,MAAM,aAAa,CAAC;AAQxE;;GAEG;AACH,cACM,2BAA4B,SAAQ,UAAU;IAClD;;OAEG;IAEH,QAAQ,UAAS;IAEjB,OAAO,CAAC,iBAAiB,KAAA;IASzB,MAAM;IAIN;;OAEG;IACH,MAAM,KAAK,YAAY,WAEtB;IAED,MAAM,CAAC,MAAM,MAAU;CACxB;AAED,eAAe,2BAA2B,CAAC","file":"progress-indicator-skeleton.d.ts","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport BXProgressStepSkeleton from './progress-step-skeleton';\nimport styles from './progress-indicator.scss';\n\nconst { prefix } = settings;\n\n/**\n * Skeleton of progress indicator.\n */\n@customElement(`${prefix}-progress-indicator-skeleton`)\nclass BXProgressIndicatorSkeleton extends LitElement {\n  /**\n   * `true` if the progress indicator should be vertical. Corresponds to the attribute with the same name.\n   */\n  @property({ type: Boolean, reflect: true })\n  vertical = false;\n\n  updated(changedProperties) {\n    if (changedProperties.has('vertical')) {\n      // Propagate `vertical` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(this.querySelectorAll((this.constructor as typeof BXProgressIndicatorSkeleton).selectorStep), item => {\n        (item as BXProgressStepSkeleton).vertical = this.vertical;\n      });\n    }\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  /**\n   * A selector that will return progress steps.\n   */\n  static get selectorStep() {\n    return `${prefix}-progress-step-skeleton`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXProgressIndicatorSkeleton;\n"]}