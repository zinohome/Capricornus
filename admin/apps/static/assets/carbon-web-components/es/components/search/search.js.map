{"version":3,"sources":["components/search/search.ts"],"names":["classMap","html","property","customElement","LitElement","Close16","Close20","Search16","settings","ifNonEmpty","FocusMixin","INPUT_SIZE","SEARCH_COLOR_SCHEME","styles","prefix","BXSearch","event","target","value","dispatchEvent","CustomEvent","constructor","eventInput","bubbles","composed","cancelable","detail","input","shadowRoot","querySelector","focus","attribute","reflect","REGULAR","type","Boolean","String","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","closeButtonAssistiveText","disabled","labelText","name","placeholder","size","_handleInput","handleInput","_handleClearInputButtonClick","handleClearInputButtonClick","clearClasses","part","class","role","SMALL"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport Close16 from '@carbon/icons/lib/close/16';\nimport Close20 from '@carbon/icons/lib/close/20';\nimport Search16 from '@carbon/icons/lib/search/16';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport FocusMixin from '../../globals/mixins/focus';\nimport { INPUT_SIZE } from '../input/input';\nimport { SEARCH_COLOR_SCHEME } from './defs';\nimport styles from './search.scss';\n\nexport { SEARCH_COLOR_SCHEME };\n\nconst { prefix } = settings;\n\n/**\n * Search box.\n * @element bx-search\n * @csspart search-icon The search icon.\n * @csspart label-text The label text.\n * @csspart input The input box.\n * @csspart close-button The close button.\n * @csspart close-icon The close icon.\n * @fires bx-search-input - The custom event fired after the search content is changed upon a user gesture.\n */\n@customElement(`${prefix}-search`)\nclass BXSearch extends FocusMixin(LitElement) {\n  /**\n   * Handles `input` event on the `<input>` in the shadow DOM.\n   */\n  private _handleInput(event: Event) {\n    const { target } = event;\n    const { value } = target as HTMLInputElement;\n    this.dispatchEvent(\n      new CustomEvent((this.constructor as typeof BXSearch).eventInput, {\n        bubbles: true,\n        composed: true,\n        cancelable: false,\n        detail: {\n          value,\n        },\n      })\n    );\n    this.value = value;\n  }\n\n  /**\n   * Handles `click` event on the button to clear search box content.\n   */\n  private _handleClearInputButtonClick() {\n    if (this.value) {\n      this.dispatchEvent(\n        new CustomEvent((this.constructor as typeof BXSearch).eventInput, {\n          bubbles: true,\n          composed: true,\n          cancelable: false,\n          detail: {\n            value: '',\n          },\n        })\n      );\n      this.value = '';\n\n      // set focus on back to input once search is cleared\n      const input = this.shadowRoot!.querySelector('input');\n      (input as HTMLElement).focus();\n    }\n  }\n\n  /**\n   * The assistive text for the close button.\n   */\n  @property({ attribute: 'close-button-assistive-text' })\n  closeButtonAssistiveText = '';\n\n  /**\n   * The color scheme.\n   */\n  @property({ attribute: 'color-scheme', reflect: true })\n  colorScheme = SEARCH_COLOR_SCHEME.REGULAR;\n\n  /**\n   * `true` if the search box should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * The label text.\n   */\n  @property({ attribute: 'label-text' })\n  labelText = '';\n\n  /**\n   * The form name.\n   */\n  @property()\n  name = '';\n\n  /**\n   * The placeholder text.\n   */\n  @property()\n  placeholder = '';\n\n  /**\n   * The search box size.\n   */\n  @property({ reflect: true })\n  size = INPUT_SIZE.REGULAR;\n\n  /**\n   * The `<input>` name.\n   */\n  @property()\n  type = '';\n\n  /**\n   * The value.\n   */\n  @property({ type: String })\n  value = '';\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  render() {\n    const {\n      closeButtonAssistiveText,\n      disabled,\n      labelText,\n      name,\n      placeholder,\n      size,\n      type,\n      value = '',\n      _handleInput: handleInput,\n      _handleClearInputButtonClick: handleClearInputButtonClick,\n    } = this;\n    const clearClasses = classMap({\n      [`${prefix}--search-close`]: true,\n      [`${prefix}--search-close--hidden`]: !this.value,\n    });\n    return html`\n      ${Search16({\n        part: 'search-icon',\n        class: `${prefix}--search-magnifier-icon`,\n        role: 'img',\n      })}\n      <label for=\"input\" part=\"label-text\" class=\"${prefix}--label\">\n        <slot>${labelText}</slot>\n      </label>\n      <input\n        id=\"input\"\n        part=\"input\"\n        type=\"${ifNonEmpty(type)}\"\n        class=\"${prefix}--search-input\"\n        ?disabled=\"${disabled}\"\n        name=\"${ifNonEmpty(name)}\"\n        placeholder=\"${ifNonEmpty(placeholder)}\"\n        role=\"searchbox\"\n        .value=\"${value}\"\n        @input=\"${handleInput}\" />\n      <button\n        part=\"close-button\"\n        class=\"${clearClasses}\"\n        @click=\"${handleClearInputButtonClick}\"\n        type=\"button\"\n        aria-label=\"${closeButtonAssistiveText}\">\n        ${(size === INPUT_SIZE.SMALL ? Close16 : Close20)({\n          part: 'close-icon',\n          'aria-label': closeButtonAssistiveText,\n          role: 'img',\n        })}\n      </button>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after the search content is changed upon a user gesture.\n   */\n  static get eventInput() {\n    return `${prefix}-search-input`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXSearch;\n"],"file":"search.js"}