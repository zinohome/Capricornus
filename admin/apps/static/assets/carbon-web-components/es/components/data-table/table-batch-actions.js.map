{"version":3,"sources":["components/data-table/table-batch-actions.ts"],"names":["html","property","customElement","LitElement","settings","styles","prefix","BXTableBatchActions","eventClickCancel","constructor","dispatchEvent","CustomEvent","bubbles","composed","type","Boolean","reflect","attribute","count","Number","changedProperties","has","setAttribute","active","formatSelectedItemsCount","selectedRowsCount","_handleCancel","handleCancel"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAA0D,aAA1D;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB;AAEA;AACA;AACA;AACA;AACA;;IAEMG,mB,cADLL,aAAa,CAAE,GAAEI,MAAO,sBAAX,C;AAAd,QACMC,mBADN,qBAC6C;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAAvCA,mB;;;;;AACJ;AACF;AACA;AACE,+BAAwB;AACtB,cAAM;AAAEC,UAAAA;AAAF,YAAuB,KAAKC,WAAlC;AACA,aAAKC,aAAL,CAAmB,IAAIC,WAAJ,CAAgBH,gBAAhB,EAAkC;AAAEI,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B,SAAlC,CAAnB;AACD;AAED;AACF;AACA;;;;mBACGZ,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEC,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,C;;;;eACA,K;;;;;mBAKRf,QAAQ,CAAC;AAAEgB,QAAAA,SAAS,EAAE;AAAb,OAAD,C;;;;eACkB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAgB,GAAEA,KAAM,QAAOA,KAAK,IAAI,CAAT,GAAa,EAAb,GAAkB,GAAI,W;;;;;mBAM/EjB,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEK,MAAR;AAAgBF,QAAAA,SAAS,EAAE;AAA3B,OAAD,C;;;;eACW,C;;;;;;;AAXpB;AACF;AACA;;AAIE;AACF;AACA;AACA;AAIE,uBAAQG,iBAAR,EAA2B;AACzB,YAAIA,iBAAiB,CAACC,GAAlB,CAAsB,QAAtB,CAAJ,EAAqC;AACnC,eAAKC,YAAL,CAAkB,UAAlB,EAA+B,GAAE,KAAKC,MAAL,GAAc,EAAd,GAAmB,IAAK,EAAzD;AACD;AACF;;;;aAED,kBAAS;AACP,cAAM;AAAEC,UAAAA,wBAAF;AAA4BC,UAAAA,iBAA5B;AAA+CC,UAAAA,aAAa,EAAEC;AAA9D,YAA+E,IAArF;AACA,eAAO3B,IAAP,mTACgBM,MADhB,EAEgBA,MAFhB,EAEgDkB,wBAAwB,CAAC;AAAEN,UAAAA,KAAK,EAAEO;AAAT,SAAD,CAFxE,EAIgBnB,MAJhB,EAMqBA,MANrB,EAMoCA,MANpC,EAM4DA,MAN5D,EAMqGqB,YANrG;AAWD;AAED;AACF;AACA;;;;;;aACE,4BAA8B;AAC5B,eAAQ,GAAErB,MAAO,qCAAjB;AACD;;;;;;;eAEeD,M;;;;;GAxDgBF,U;;AA2DlC,eAAeI,mBAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport styles from './data-table.scss';\n\nconst { prefix } = settings;\n\n/**\n * Table batch actions.\n * @element bx-table-batch-actions\n * @fires bx-table-batch-actions-cancel-clicked - The custom event fired after the Cancel button is clicked.\n */\n@customElement(`${prefix}-table-batch-actions`)\nclass BXTableBatchActions extends LitElement {\n  /**\n   * Handles `click` event on the Cancel button.\n   */\n  private _handleCancel() {\n    const { eventClickCancel } = this.constructor as typeof BXTableBatchActions;\n    this.dispatchEvent(new CustomEvent(eventClickCancel, { bubbles: true, composed: true }));\n  }\n\n  /**\n   * `true` if this batch actions bar should be active.\n   */\n  @property({ type: Boolean, reflect: true })\n  active = false;\n\n  /**\n   * The formatter for selected items. Should be changed upon the locale the UI is rendered with.\n   */\n  @property({ attribute: false })\n  formatSelectedItemsCount = ({ count }) => `${count} item${count <= 1 ? '' : 's'} selected`;\n\n  /**\n   * Numeric representation of the total number of items selected in a table.\n   * This number is used to derive the selection message.\n   */\n  @property({ type: Number, attribute: 'selected-rows-count' })\n  selectedRowsCount = 0;\n\n  updated(changedProperties) {\n    if (changedProperties.has('active')) {\n      this.setAttribute('tabindex', `${this.active ? '' : '-1'}`);\n    }\n  }\n\n  render() {\n    const { formatSelectedItemsCount, selectedRowsCount, _handleCancel: handleCancel } = this;\n    return html`\n      <div class=\"${prefix}--batch-summary\">\n        <p class=\"${prefix}--batch-summary__para\">${formatSelectedItemsCount({ count: selectedRowsCount })}</p>\n      </div>\n      <div class=\"${prefix}--action-list\">\n        <slot></slot>\n        <button class=\"${prefix}--btn ${prefix}--btn--primary ${prefix}--batch-summary__cancel\" @click=${handleCancel}>\n          <slot name=\"cancel-button-content\">Cancel</slot>\n        </button>\n      </div>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired after the Cancel button is clicked.\n   */\n  static get eventClickCancel() {\n    return `${prefix}-table-batch-actions-cancel-clicked`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXTableBatchActions;\n"],"file":"table-batch-actions.js"}