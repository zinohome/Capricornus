{"version":3,"sources":["components/data-table/table-expanded-row.ts"],"names":["html","property","customElement","LitElement","settings","styles","prefix","BXTableExpandedRow","type","Number","attribute","Boolean","reflect","colSpan"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAA0D,aAA1D;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB;AAEA;AACA;AACA;AACA;;IAEMG,kB,cADLL,aAAa,CAAE,GAAEI,MAAO,qBAAX,C;AAAd,QACMC,kBADN,qBAC4C;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAAtCA,kB;;;mBAIHN,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEC,MAAR;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAD,C;;;;eACC,C;;;;;mBAKTT,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEG,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,C;;;;eACE,K;;;;;mBAKVX,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEG,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,C;;;;eACK,K;;;;;;;AAhBd;AACF;AACA;;AAIE;AACF;AACA;;AAIE;AACF;AACA;AAIE,wBAAS;AACP,cAAM;AAAEC,UAAAA;AAAF,YAAc,IAApB;AACA,eAAOb,IAAP,iHACiBa,OADjB,EAEkBP,MAFlB;AAOD;;;;;;;eAEeD,M;;;;;GA9BeF,U;;AAiCjC,eAAeI,kBAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport styles from './data-table.scss';\n\nconst { prefix } = settings;\n\n/**\n * Table row of collapsible details.\n * @element bx-table-expanded-row\n */\n@customElement(`${prefix}-table-expanded-row`)\nclass BXTableExpandedRow extends LitElement {\n  /**\n   * The colspan.\n   */\n  @property({ type: Number, attribute: 'colspan' })\n  colSpan = 1;\n\n  /**\n   * `true` if the table row should be expanded.\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  /**\n   * `true` if the table row should be highlighted.\n   */\n  @property({ type: Boolean, reflect: true })\n  highlighted = false;\n\n  render() {\n    const { colSpan } = this;\n    return html`\n      <td colspan=\"${colSpan}\">\n        <div class=\"${prefix}--child-row-inner-container\">\n          <slot></slot>\n        </div>\n      </td>\n    `;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXTableExpandedRow;\n"],"file":"table-expanded-row.js"}