{"version":3,"sources":["components/data-table/table-header-cell.ts"],"names":["settings","html","property","customElement","LitElement","Arrows16","ArrowDown16","FocusMixin","TABLE_SORT_CYCLE","TABLE_SORT_CYCLES","TABLE_SORT_DIRECTION","styles","prefix","BXTableHeaderCell","nextSortDirection","_getNextSort","init","bubbles","cancelable","composed","detail","oldSortDirection","sortDirection","constructor","dispatchEvent","CustomEvent","eventBeforeSort","sortActive","requestUpdate","sortCycle","TRI_STATES_FROM_ASCENDING","TypeError","directions","index","indexOf","NONE","RangeError","length","type","Boolean","reflect","attribute","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","hasAttribute","setAttribute","sortIcon","part","class","textContent","_handleClickSortButton","_handleSlotChange"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport Arrows16 from '@carbon/icons/lib/arrows/16';\nimport ArrowDown16 from '@carbon/icons/lib/arrow--down/16';\nimport FocusMixin from '../../globals/mixins/focus';\nimport { TABLE_SORT_CYCLE, TABLE_SORT_CYCLES, TABLE_SORT_DIRECTION } from './defs';\nimport styles from './data-table.scss';\n\nexport { TABLE_SORT_CYCLE, TABLE_SORT_CYCLES, TABLE_SORT_DIRECTION };\n\nconst { prefix } = settings;\n\n/**\n * Data table header cell.\n * @element bx-table-header-cell\n * @fires bx-table-header-cell-sort\n *   The custom event fired before a new sort direction is set upon a user gesture.\n *   Cancellation of this event stops the user-initiated change in sort direction.\n */\n@customElement(`${prefix}-table-header-cell`)\nclass BXTableHeaderCell extends FocusMixin(LitElement) {\n  /**\n   * Handles `click` event on the sort button.\n   * @param event The event.\n   */\n  private _handleClickSortButton() {\n    const nextSortDirection = this._getNextSort();\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        oldSortDirection: this.sortDirection,\n        sortDirection: nextSortDirection,\n      },\n    };\n    const constructor = this.constructor as typeof BXTableHeaderCell;\n    if (this.dispatchEvent(new CustomEvent(constructor.eventBeforeSort, init))) {\n      this.sortActive = true;\n      this.sortDirection = nextSortDirection;\n    }\n  }\n\n  /**\n   * Handles `slotchange` event.\n   * @param event The event.\n   */\n  private _handleSlotChange() {\n    this.requestUpdate();\n  }\n\n  /**\n   * @returns The next sort direction.\n   */\n  private _getNextSort() {\n    const { sortCycle = TABLE_SORT_CYCLE.TRI_STATES_FROM_ASCENDING, sortDirection } = this;\n    if (!sortDirection) {\n      throw new TypeError(\n        'Table sort direction is not defined. ' +\n          'Likely that `_getNextSort()` is called with non-sorted table column, which should not happen in regular condition.'\n      );\n    }\n    const directions = (this.constructor as typeof BXTableHeaderCell).TABLE_SORT_CYCLES[sortCycle];\n    const index = directions.indexOf(sortDirection as TABLE_SORT_DIRECTION);\n    if (index < 0) {\n      if (sortDirection === TABLE_SORT_DIRECTION.NONE) {\n        // If the current sort direction is `none` in bi-state sort cycle, returns the first one in the cycle\n        return directions[0];\n      }\n      throw new RangeError(`The given sort state (${sortDirection}) is not found in the given table sort cycle: ${sortCycle}`);\n    }\n    return directions[(index + 1) % directions.length];\n  }\n\n  /**\n   * `true` if this table header cell is of a primary sorting column.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'sort-active' })\n  sortActive = false;\n\n  /**\n   * The table sort cycle in use.\n   */\n  @property({ reflect: true, attribute: 'sort-cycle' })\n  sortCycle?: TABLE_SORT_CYCLE;\n\n  /**\n   * The table sort direction.\n   * If present, this table header cell will have a sorting UI. Choose between `ascending` or `descending`.\n   */\n  @property({ reflect: true, attribute: 'sort-direction' })\n  sortDirection?: TABLE_SORT_DIRECTION;\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'columnheader');\n    }\n    super.connectedCallback();\n  }\n\n  render() {\n    const { sortDirection } = this;\n    if (sortDirection) {\n      const sortIcon =\n        sortDirection === TABLE_SORT_DIRECTION.NONE\n          ? Arrows16({\n              part: 'sort-icon',\n              class: `${prefix}--table-sort__icon-unsorted`,\n            })\n          : ArrowDown16({\n              part: 'sort-icon',\n              class: `${prefix}--table-sort__icon`,\n            });\n      return html`\n        <button\n          part=\"sort-button\"\n          class=\"${prefix}--table-sort\"\n          title=\"${this.textContent}\"\n          @click=${this._handleClickSortButton}>\n          <span part=\"label-text\" class=\"${prefix}--table-header-label\"><slot @slotchange=${this._handleSlotChange}></slot></span>\n          ${sortIcon}\n        </button>\n      `;\n    }\n    return html`<slot></slot>`;\n  }\n\n  /**\n   * The name of the custom event fired before a new sort direction is set upon a user gesture.\n   * Cancellation of this event stops the user-initiated change in sort direction.\n   */\n  static get eventBeforeSort() {\n    return `${prefix}-table-header-cell-sort`;\n  }\n\n  static styles = styles;\n\n  /**\n   * Mapping of table sort cycles to table sort states.\n   */\n  static TABLE_SORT_CYCLES = TABLE_SORT_CYCLES;\n}\n\nexport default BXTableHeaderCell;\n"],"file":"table-header-cell.js"}