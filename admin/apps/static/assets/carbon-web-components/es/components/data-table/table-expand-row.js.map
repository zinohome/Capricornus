{"version":3,"sources":["components/data-table/table-expand-row.ts"],"names":["html","property","customElement","ChevronRight16","settings","HostListenerMixin","HostListener","BXTableRow","styles","prefix","BXTableExpandRow","_handleUserInitiatedToggleExpando","event","selectorExpandedRow","constructor","nextElementSibling","matches","highlighted","type","expanded","init","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","eventBeforeExpandoToggle","eventExpandoToggle","_handleClickExpando","handleClickExpando","class","Boolean","reflect","changedProperties","has"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement } from 'lit-element';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport BXTableRow from './table-row';\nimport BXTableExpandedRow from './table-expanded-row';\nimport styles from './data-table.scss';\n\nconst { prefix } = settings;\n\n/**\n * The expando row in table row.\n * @element bx-table-expand-row\n */\n@customElement(`${prefix}-table-expand-row`)\nclass BXTableExpandRow extends HostListenerMixin(BXTableRow) {\n  /**\n   * Handles `click` event on the expando button.\n   */\n  private _handleClickExpando() {\n    this._handleUserInitiatedToggleExpando();\n  }\n\n  /**\n   * Handles `mouseover`/`mouseout` event handler on this element.\n   * @param event The event.\n   */\n  @HostListener('mouseover')\n  @HostListener('mouseout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleMouseOverOut(event: MouseEvent) {\n    const { selectorExpandedRow } = this.constructor as typeof BXTableExpandRow;\n    const { nextElementSibling } = this;\n    if (nextElementSibling?.matches(selectorExpandedRow)) {\n      (nextElementSibling as BXTableExpandedRow).highlighted = event.type === 'mouseover';\n    }\n  }\n\n  /**\n   * Handles user-initiated toggle request of the expando button in this table row.\n   * @param expanded The new expanded state.\n   */\n  private _handleUserInitiatedToggleExpando(expanded = !this.expanded) {\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        expanded,\n      },\n    };\n    if (this.dispatchEvent(new CustomEvent((this.constructor as typeof BXTableExpandRow).eventBeforeExpandoToggle, init))) {\n      this.expanded = expanded;\n      this.dispatchEvent(new CustomEvent((this.constructor as typeof BXTableExpandRow).eventExpandoToggle, init));\n    }\n  }\n\n  protected _renderFirstCells() {\n    const { _handleClickExpando: handleClickExpando } = this;\n    return html`\n      <div class=\"${prefix}--table-expand\">\n        <button class=\"${prefix}--table-expand__button\" @click=\"${handleClickExpando}\">\n          ${ChevronRight16({ class: `${prefix}--table-expand__svg` })}\n        </button>\n      </div>\n      ${super._renderFirstCells()}\n    `;\n  }\n\n  /**\n   * `true` if the table row should be expanded.\n   */\n  @property({ type: Boolean, reflect: true })\n  expanded = false;\n\n  updated(changedProperties) {\n    if (changedProperties.has('expanded')) {\n      const { selectorExpandedRow } = this.constructor as typeof BXTableExpandRow;\n      const { expanded, nextElementSibling } = this;\n      if (nextElementSibling?.matches(selectorExpandedRow)) {\n        (nextElementSibling as BXTableExpandedRow).expanded = expanded;\n      }\n    }\n  }\n\n  /**\n   * A selector that will return the corresponding expanded row.\n   */\n  static get selectorExpandedRow() {\n    return `${prefix}-table-expanded-row`;\n  }\n\n  /**\n   * The name of the custom event fired before the expanded state this row is being toggled upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of toggling the expanded state.\n   */\n  static get eventBeforeExpandoToggle() {\n    return `${prefix}-table-row-expando-beingtoggled`;\n  }\n\n  /**\n   * The name of the custom event fired after the expanded state this row is toggled upon a user gesture.\n   */\n  static get eventExpandoToggle() {\n    return `${prefix}-table-row-expando-toggled`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXTableExpandRow;\n"],"file":"table-expand-row.js"}