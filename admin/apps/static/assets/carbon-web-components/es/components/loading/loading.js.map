{"version":3,"sources":["components/loading/loading.ts"],"names":["settings","classMap","html","property","customElement","LitElement","LOADING_TYPE","getLoadingIcon","styles","prefix","BXLoading","attribute","REGULAR","type","Boolean","reflect","inactive","assistiveText","innerClasses","icon","OVERLAY"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,0CAArB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAA0D,aAA1D;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaT,QAAnB;AAEA;AACA;AACA;AACA;;IAEMU,S,cADLN,aAAa,CAAE,GAAEK,MAAO,UAAX,C;AAAd,QACMC,SADN,qBACmC;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAA7BA,S;;;mBAIHP,QAAQ,CAAC;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAD,C;;;;eACO,S;;;;;mBAKfR,QAAQ,E;;;;eACFG,YAAY,CAACM,O;;;;;mBAKnBT,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAEC,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,C;;;;eACE,K;;;;;;;AAhBX;AACF;AACA;;AAIE;AACF;AACA;;AAIE;AACF;AACA;AAIE,wBAAS;AACP,cAAM;AAAEC,UAAAA,QAAF;AAAYC,UAAAA,aAAZ;AAA2BJ,UAAAA;AAA3B,YAAoC,IAA1C;AACA,cAAMK,YAAY,GAAGjB,QAAQ,CAAC;AAC5B,WAAE,GAAEQ,MAAO,WAAX,GAAwB,IADI;AAE5B,WAAE,GAAEA,MAAO,iBAAX,GAA8BO;AAFF,SAAD,CAA7B;AAIA,cAAMG,IAAI,GAAGZ,cAAc,CAAC;AAAEU,UAAAA,aAAF;AAAiBJ,UAAAA;AAAjB,SAAD,CAA3B;AACA,eAAOA,IAAI,KAAKP,YAAY,CAACc,OAAtB,GAAgCD,IAAhC,GAAuCjB,IAAvC,iDAA2DgB,YAA3D,EAA4EC,IAA5E,CAAP;AACD;;;;;;;eAEeX,M;;;;;GA7BMH,U;;AAgCxB,SAASC,YAAT;AAEA,eAAeI,SAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport { LOADING_TYPE } from './defs';\nimport getLoadingIcon from './loading-icon';\nimport styles from './loading.scss';\n\nconst { prefix } = settings;\n\n/**\n * Spinner indicating loading state.\n * @element bx-loading\n */\n@customElement(`${prefix}-loading`)\nclass BXLoading extends LitElement {\n  /**\n   * The assistive text for the spinner icon.\n   */\n  @property({ attribute: 'assistive-text' })\n  assistiveText = 'Loading';\n\n  /**\n   * Spinner type.\n   */\n  @property()\n  type = LOADING_TYPE.REGULAR;\n\n  /**\n   * `true` if spinner should stop.\n   */\n  @property({ type: Boolean, reflect: true })\n  inactive = false;\n\n  render() {\n    const { inactive, assistiveText, type } = this;\n    const innerClasses = classMap({\n      [`${prefix}--loading`]: true,\n      [`${prefix}--loading--stop`]: inactive,\n    });\n    const icon = getLoadingIcon({ assistiveText, type });\n    return type !== LOADING_TYPE.OVERLAY ? icon : html` <div class=\"${innerClasses}\">${icon}</div> `;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport { LOADING_TYPE };\n\nexport default BXLoading;\n"],"file":"loading.js"}