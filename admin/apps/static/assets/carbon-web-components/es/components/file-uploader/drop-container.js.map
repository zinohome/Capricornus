{"version":3,"sources":["components/file-uploader/drop-container.ts"],"names":["classMap","html","property","customElement","LitElement","settings","HostListenerMixin","HostListener","ifNonEmpty","styles","FORM_ELEMENT_COLOR_SCHEME","TILE_COLOR_SCHEME","prefix","dropEffects","dragover","dragleave","BXFileDropContainer","event","addedFiles","_getFiles","eventChange","selectorInput","constructor","dispatchEvent","CustomEvent","bubbles","composed","detail","fileInput","shadowRoot","querySelector","value","preventDefault","disabled","dataTransfer","type","dropEffect","_active","_handleChange","requestUpdate","files","target","accept","test","Array","from","acceptedTypes","Set","split","prototype","filter","call","name","mimeType","fileExtensionRegExp","hasFileExtension","fileExtension","undefined","exec","has","Boolean","reflect","multiple","active","handleChange","labelClasses","dropareaClasses"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport styles from './file-uploader.scss';\n\nexport { FORM_ELEMENT_COLOR_SCHEME as TILE_COLOR_SCHEME } from '../../globals/shared-enums';\n\nconst { prefix } = settings;\n\n/**\n * The value to set to `event.dataTransfer.dropEffect`, keyed by the event nane.\n */\nconst dropEffects = {\n  dragover: 'copy',\n  dragleave: 'move',\n};\n\n/**\n * File drop container.\n * @element bx-file-drop-container\n * @fires bx-file-drop-container-changed The custom event fired when there is a user gesture to select files to upload.\n */\n@customElement(`${prefix}-file-drop-container`)\nclass BXFileDropContainer extends HostListenerMixin(LitElement) {\n  /**\n   * `true` to show the active state of this UI.\n   */\n  private _active = false;\n\n  /**\n   * Handles user gesture to select files to upload.\n   * @param event The event.\n   */\n  private _handleChange(event: Event | DragEvent) {\n    const addedFiles = this._getFiles(event);\n    const { eventChange, selectorInput } = this.constructor as typeof BXFileDropContainer;\n    this.dispatchEvent(\n      new CustomEvent(eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          addedFiles,\n        },\n      })\n    );\n\n    const fileInput = this?.shadowRoot?.querySelector(selectorInput);\n    if (fileInput) {\n      (fileInput as HTMLInputElement).value = ''; // carbon-web-components#904\n    }\n  }\n\n  /**\n   * Handles `dragover`, `dragleave` and `drop` events.\n   * @param event The event.\n   */\n  @HostListener('dragover')\n  @HostListener('dragleave')\n  @HostListener('drop')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleDrag(event: DragEvent) {\n    event.preventDefault(); // Prevents page navigation upon dropping\n    if (this.disabled) {\n      return;\n    }\n    const { dataTransfer, type } = event;\n    const dropEffect = dropEffects[type];\n    if (dataTransfer && dropEffect) {\n      dataTransfer.dropEffect = dropEffect;\n    }\n    this._active = type === 'dragover';\n    if (type === 'drop') {\n      this._handleChange(event);\n    }\n    this.requestUpdate();\n  }\n\n  /**\n   * @param event The event.\n   * @returns The list of files user chose to upload.\n   */\n  private _getFiles(event: Event | DragEvent) {\n    const { files } = (event.type === 'drop' ? (event as DragEvent).dataTransfer : (event.target as HTMLInputElement)) ?? {};\n    const { accept } = this;\n    if (!accept || !/^(change|drop)$/.test(event.type)) {\n      return Array.from(files ?? []);\n    }\n    const acceptedTypes = new Set(accept.split(' '));\n    return Array.prototype.filter.call(files, ({ name, type: mimeType = '' }) => {\n      const fileExtensionRegExp = /\\.[^.]+$/;\n      const hasFileExtension = fileExtensionRegExp.test(name);\n      const [fileExtension] = !hasFileExtension ? [undefined] : fileExtensionRegExp.exec(name) ?? [];\n      return acceptedTypes.has(mimeType) || (fileExtension && acceptedTypes.has(fileExtension));\n    }) as File[];\n  }\n\n  /**\n   * The file types the file input should accept, separated by space.\n   */\n  @property()\n  accept = '';\n\n  /**\n   * `true` if this drop container should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if this drop container should accept more than one files at once.\n   * Note that even with `false` set here, user _can_ select multiple files one by one.\n   */\n  @property({ type: Boolean, reflect: true })\n  multiple = false;\n\n  /**\n   * The shadow DOM slot to put this drop container in.\n   */\n  @property({ reflect: true })\n  slot = 'drop-container';\n\n  render() {\n    const { accept, disabled, multiple, _active: active, _handleChange: handleChange } = this;\n    const labelClasses = classMap({\n      [`${prefix}--file-browse-btn`]: true,\n      [`${prefix}--file-browse-btn--disabled`]: disabled,\n    });\n    const dropareaClasses = classMap({\n      [`${prefix}--file__drop-container`]: true,\n      [`${prefix}--file__drop-container--drag-over`]: active,\n    });\n    return html`\n      <label class=\"${labelClasses}\" for=\"file\" tabindex=\"0\">\n        <div class=\"${dropareaClasses}\" role=\"button\">\n          <slot></slot>\n          <input\n            id=\"file\"\n            type=\"file\"\n            class=\"${prefix}--file-input\"\n            tabindex=\"-1\"\n            accept=\"${ifNonEmpty(accept)}\"\n            ?disabled=\"${disabled}\"\n            ?multiple=\"${multiple}\"\n            @change=\"${handleChange}\" />\n        </div>\n      </label>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired when there is a user gesture to select files to upload.\n   */\n  static get eventChange() {\n    return `${prefix}-file-drop-container-changed`;\n  }\n\n  /**\n   * A selector that will return the file `<input>`.\n   */\n  static get selectorInput() {\n    return `.${prefix}--file-input`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXFileDropContainer;\n"],"file":"drop-container.js"}