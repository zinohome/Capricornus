{"version":3,"sources":["components/file-uploader/file-uploader-item.ts"],"names":["html","property","customElement","LitElement","CheckmarkFilled16","Close16","WarningFilled16","settings","LOADING_TYPE","FILE_UPLOADER_ITEM_SIZE","FILE_UPLOADER_ITEM_STATE","styles","prefix","BXFileUploaderItem","init","bubbles","cancelable","composed","eventBeforeDelete","eventDelete","constructor","dispatchEvent","CustomEvent","deleteAssistiveText","invalid","_handleClickDeleteButton","handleClickDeleteButton","undefined","class","uploadingAssistiveText","SMALL","uploadedAssistiveText","state","EDITING","_renderEditing","UPLOADING","_renderUploading","UPLOADED","_renderUploaded","attribute","type","Boolean","reflect","REGULAR","validityMessage","_renderStatus"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport CheckmarkFilled16 from '@carbon/icons/lib/checkmark--filled/16';\nimport Close16 from '@carbon/icons/lib/close/16';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { LOADING_TYPE } from '../loading/loading';\nimport { FILE_UPLOADER_ITEM_SIZE, FILE_UPLOADER_ITEM_STATE } from './defs';\nimport styles from './file-uploader.scss';\n\nexport { FILE_UPLOADER_ITEM_SIZE, FILE_UPLOADER_ITEM_STATE };\n\nconst { prefix } = settings;\n\n/**\n * File uploader item.\n * @element bx-file-uploader-item\n * @slot validity-message The validity message.\n * @slot validity-message-supplement The supplemental validity message.\n * @fires bx-file-uploader-item-beingdeleted\n *   The custom event fired before this file uploader item is being deleted upon a user gesture.\n *   Cancellation of this event stops the user-initiated action of deleting this file uploader item.\n * @fires bx-file-uploader-item-deleted - The custom event fired after this file uploader item is deleted upon a user gesture.\n */\n@customElement(`${prefix}-file-uploader-item`)\nclass BXFileUploaderItem extends LitElement {\n  /**\n   * Handles `click` event on the delete button.\n   */\n  private _handleClickDeleteButton() {\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    };\n    const { eventBeforeDelete, eventDelete } = this.constructor as typeof BXFileUploaderItem;\n    if (this.dispatchEvent(new CustomEvent(eventBeforeDelete, init))) {\n      this.dispatchEvent(new CustomEvent(eventDelete, init));\n    }\n  }\n\n  /**\n   * @returns The content showing the editing UI of this file uploader item.\n   */\n  private _renderEditing() {\n    const { deleteAssistiveText, invalid, _handleClickDeleteButton: handleClickDeleteButton } = this;\n    return html`\n      ${!invalid ? undefined : WarningFilled16({ class: `${prefix}--file-invalid` })}\n      <button type=\"button\" aria-label=\"${deleteAssistiveText}\" class=\"${prefix}--file-close\" @click=\"${handleClickDeleteButton}\">\n        ${Close16()}\n      </button>\n    `;\n  }\n\n  /**\n   * @returns The content showing this file uploader's file uploading status as in progress.\n   */\n  private _renderUploading() {\n    const { uploadingAssistiveText } = this;\n    return html` <bx-loading assistive-text=\"${uploadingAssistiveText}\" type=\"${LOADING_TYPE.SMALL}\"></bx-loading> `;\n  }\n\n  /**\n   * @returns The content showing this file uploader's file uploading status as complete.\n   */\n  private _renderUploaded() {\n    const { uploadedAssistiveText } = this;\n    return CheckmarkFilled16({\n      class: `${prefix}--file-complete`,\n      'aria-label': uploadedAssistiveText,\n    });\n  }\n\n  /**\n   * @returns The content showing this file uploader's status.\n   */\n  private _renderStatus() {\n    const { state } = this;\n    switch (state) {\n      case FILE_UPLOADER_ITEM_STATE.EDITING:\n        return this._renderEditing();\n      case FILE_UPLOADER_ITEM_STATE.UPLOADING:\n        return this._renderUploading();\n      case FILE_UPLOADER_ITEM_STATE.UPLOADED:\n        return this._renderUploaded();\n      default:\n        return undefined;\n    }\n  }\n\n  /**\n   * The `aria-label` attribute for the icon to delete this file uploader item.\n   */\n  @property({ attribute: 'delete-assistive-text' })\n  deleteAssistiveText = 'Delete this file';\n\n  /**\n   * Controls the invalid state and visibility of the `validityMessage`.\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * The size of this file uploader item.\n   */\n  @property({ reflect: true })\n  size = FILE_UPLOADER_ITEM_SIZE.REGULAR;\n\n  /**\n   * The state of this file uploader item.\n   */\n  @property({ reflect: true })\n  state = FILE_UPLOADER_ITEM_STATE.UPLOADING;\n\n  /**\n   * The `aria-label` attribute for the icon to indicate file uploading is in progress.\n   */\n  @property({ attribute: 'uploading-assistive-text' })\n  uploadingAssistiveText = 'Uploading';\n\n  /**\n   * The `aria-label` attribute for the icon to indicate file uploading is complete.\n   */\n  @property({ attribute: 'uploaded-assistive-text' })\n  uploadedAssistiveText = 'Uploaded';\n\n  /**\n   * The validity message.\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  render() {\n    const { validityMessage } = this;\n    return html`\n      <p class=\"${prefix}--file-filename\"><slot></slot></p>\n      <span class=\"${prefix}--file__state-container\">${this._renderStatus()}</span>\n      <div class=\"${prefix}--form-requirement\">\n        <div class=\"${prefix}--form-requirement__title\">\n          <slot name=\"validity-message\">${validityMessage}</slot>\n        </div>\n        <p class=\"${prefix}--form-requirement__supplement\">\n          <slot name=\"validity-message-supplement\"></slot>\n        </p>\n      </div>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired before this file uplodaer item is being deleted upon a user gesture.\n   * Cancellation of this event stops the user-initiated action of deleting this file uploader item.\n   */\n  static get eventBeforeDelete() {\n    return `${prefix}-file-uploader-item-beingdeleted`;\n  }\n\n  /**\n   * The name of the custom event fired after this file uplodaer item is deleted upon a user gesture.\n   */\n  static get eventDelete() {\n    return `${prefix}-file-uploader-item-deleted`;\n  }\n\n  static styles = styles;\n}\n\nexport default BXFileUploaderItem;\n"],"file":"file-uploader-item.js"}