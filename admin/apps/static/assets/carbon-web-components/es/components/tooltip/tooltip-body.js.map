{"version":3,"sources":["components/tooltip/tooltip-body.ts"],"names":["settings","html","property","customElement","HostListener","BXFloatingMenu","FLOATING_MENU_ALIGNMENT","FLOATING_MENU_DIRECTION","FLOATING_MENU_POSITION_DIRECTION","styles","prefix","BXTooltipBody","CENTER","BOTTOM","type","Boolean","reflect","event","key","open","direction","position","positionDirection","start","top","LEFT","style","ownerDocument","defaultView","getComputedStyle","margin","Number","exec","getPropertyValue","RTL","isNaN","TOP","hasAttribute","setAttribute"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { html, property, customElement } from 'lit-element';\nimport HostListener from '../../globals/decorators/host-listener';\nimport BXFloatingMenu, {\n  FLOATING_MENU_ALIGNMENT,\n  FLOATING_MENU_DIRECTION,\n  FLOATING_MENU_POSITION_DIRECTION,\n} from '../floating-menu/floating-menu';\nimport styles from './tooltip.scss';\n\nconst { prefix } = settings;\n\n/**\n * Tooltip body.\n */\n@customElement(`${prefix}-tooltip-body`)\nclass BXTooltipBody extends BXFloatingMenu {\n  /**\n   * How the menu is aligned to the trigger button.\n   */\n  @property()\n  alignment = FLOATING_MENU_ALIGNMENT.CENTER;\n\n  /**\n   * The menu direction.\n   */\n  @property()\n  direction = FLOATING_MENU_DIRECTION.BOTTOM;\n\n  /**\n   * `true` if the dropdown should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = false;\n\n  /**\n   * Handles `keydown` event on this element.\n   */\n  @HostListener('keydown')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleKeydown = async event => {\n    if (event.key === 'Escape') {\n      this.open = false;\n    }\n  };\n\n  /**\n   * The position of this tooltip body.\n   */\n  get position() {\n    const { direction } = this;\n    const position = super.position;\n    const { direction: positionDirection, start, top } = position;\n\n    if (direction === FLOATING_MENU_DIRECTION.LEFT) {\n      const style = this.ownerDocument!.defaultView!.getComputedStyle(this);\n      const margin = Number(\n        (/^([\\d-.]+)px$/.exec(\n          style.getPropertyValue(positionDirection !== FLOATING_MENU_POSITION_DIRECTION.RTL ? 'margin-right' : 'margin-left')\n        ) || [])[1]\n      );\n      if (!isNaN(margin)) {\n        // For direction === DIRECTION_RIGHT, the left/top margin the caret size effectively adjusts the position,\n        // but for direction === DIRECTION_LEFT such thing won't happen\n        return {\n          ...position,\n          start: start - margin,\n        };\n      }\n    }\n\n    if (direction === FLOATING_MENU_DIRECTION.TOP) {\n      const style = this.ownerDocument!.defaultView!.getComputedStyle(this);\n      const margin = Number((/^([\\d-.]+)px$/.exec(style.getPropertyValue('margin-bottom')) || [])[1]);\n      if (!isNaN(margin)) {\n        // For direction === DIRECTION_BOTTOM, the left/top margin the caret size effectively adjusts the position,\n        // but for direction === DIRECTION_TOP such thing won't happen\n        return {\n          ...position,\n          top: top - margin,\n        };\n      }\n    }\n\n    return position;\n  }\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'menu');\n    }\n    if (!this.hasAttribute('tabindex')) {\n      // TODO: Should we use a property?\n      this.setAttribute('tabindex', '-1');\n    }\n    super.connectedCallback();\n  }\n\n  render() {\n    return html`\n      <span class=\"${prefix}--tooltip__caret\"></span>\n      <div class=\"${prefix}--tooltip__content\"><slot></slot></div>\n    `;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default BXTooltipBody;\n"],"file":"tooltip-body.js"}