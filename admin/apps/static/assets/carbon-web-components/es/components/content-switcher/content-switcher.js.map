{"version":3,"sources":["components/content-switcher/content-switcher.ts"],"names":["html","property","customElement","LitElement","settings","forEach","indexOf","NAVIGATION_DIRECTION","CONTENT_SWITCHER_SIZE","styles","prefix","capIndex","index","length","BXContentSwitcher","target","type","selectorItem","constructor","items","querySelectorAll","closest","nextIndex","elem","i","hideDivider","currentItem","direction","selectorItemEnabled","currentIndex","_handleUserInitiatedSelectItem","key","_navigate","item","disabled","value","init","bubbles","composed","detail","beforeSelectEvent","CustomEvent","eventBeforeSelect","cancelable","dispatchEvent","_selectionDidChange","afterSelectEvent","eventSelect","selectorItemSelected","nextItem","_getNextItem","querySelector","requestUpdate","itemToSelect","selected","Promise","resolve","then","focus","reflect","REGULAR","changedProperties","has","_handleHover","handleHover","_handleKeydown","handleKeydown","_handleClick"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport { forEach, indexOf } from '../../globals/internal/collection-helpers';\nimport { NAVIGATION_DIRECTION, CONTENT_SWITCHER_SIZE } from './defs';\nimport BXSwitch from './content-switcher-item';\nimport styles from './content-switcher.scss';\n\nexport { NAVIGATION_DIRECTION, CONTENT_SWITCHER_SIZE };\n\nconst { prefix } = settings;\n\n/**\n * @param index The index\n * @param length The length of the array.\n * @returns The new index, adjusting overflow/underflow.\n */\nconst capIndex = (index: number, length: number) => {\n  if (index < 0) {\n    return length - 1;\n  }\n  if (index >= length) {\n    return 0;\n  }\n  return index;\n};\n\n/**\n * Content switcher.\n * @element bx-content-switcher\n * @fires bx-content-switcher-beingselected\n *   The custom event fired before a content switcher item is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires bx-content-switcher-selected - The custom event fired after a a content switcher item is selected upon a user gesture.\n */\n@customElement(`${prefix}-content-switcher`)\nclass BXContentSwitcher extends LitElement {\n  /**\n   * Handles `mouseover`/`mouseout` events on `<slot>`.\n   * @param event The event.\n   */\n  private _handleHover({ target, type }: MouseEvent) {\n    const { selectorItem } = this.constructor as typeof BXContentSwitcher;\n    const items = this.querySelectorAll(selectorItem);\n    const index = type !== 'mouseover' ? -1 : indexOf(items, (target as Element).closest(selectorItem)!);\n    const nextIndex = index < 0 ? index : index + 1;\n    forEach(this.querySelectorAll(selectorItem), (elem, i) => {\n      // Specifies child `<bx-content-switcher-item>` to hide its divider instead of using CSS,\n      // until `:host-context()` gets supported in all major browsers\n      (elem as BXSwitch).hideDivider = i === nextIndex;\n    });\n  }\n\n  /**\n   * @param currentItem The currently selected item.\n   * @param direction The navigation direction.\n   * @returns The item to be selected.\n   */\n  protected _getNextItem(currentItem: BXSwitch, direction: number) {\n    const items = this.querySelectorAll((this.constructor as typeof BXContentSwitcher).selectorItemEnabled);\n    const currentIndex = indexOf(items, currentItem);\n    const nextIndex = capIndex(currentIndex + direction, items.length);\n    return nextIndex === currentIndex ? null : items[nextIndex];\n  }\n\n  /**\n   * Handles `click` event on the top-level element in the shadow DOM.\n   * @param event The event.\n   */\n  protected _handleClick({ target }: MouseEvent) {\n    this._handleUserInitiatedSelectItem(target as BXSwitch);\n  }\n\n  /**\n   * Handles `keydown` event on the top-level element in the shadow DOM.\n   * @param event The event.\n   */\n  protected _handleKeydown({ key }: KeyboardEvent) {\n    if (key in NAVIGATION_DIRECTION) {\n      this._navigate(NAVIGATION_DIRECTION[key]);\n    }\n  }\n\n  /**\n   * Handles user-initiated selection of a content switcher item.\n   * @param [item] The content switcher item user wants to select.\n   */\n  protected _handleUserInitiatedSelectItem(item: BXSwitch) {\n    if (!item.disabled && item.value !== this.value) {\n      const init = {\n        bubbles: true,\n        composed: true,\n        detail: {\n          item,\n        },\n      };\n      const constructor = this.constructor as typeof BXContentSwitcher;\n      const beforeSelectEvent = new CustomEvent(constructor.eventBeforeSelect, {\n        ...init,\n        cancelable: true,\n      });\n      if (this.dispatchEvent(beforeSelectEvent)) {\n        this._selectionDidChange(item);\n        const afterSelectEvent = new CustomEvent(constructor.eventSelect, init);\n        this.dispatchEvent(afterSelectEvent);\n      }\n    }\n  }\n\n  /**\n   * Navigates through content switcher items.\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   */\n  protected _navigate(direction: number) {\n    const { selectorItemSelected } = this.constructor as typeof BXContentSwitcher;\n    const nextItem = this._getNextItem(this.querySelector(selectorItemSelected) as BXSwitch, direction);\n    if (nextItem) {\n      this._handleUserInitiatedSelectItem(nextItem as BXSwitch);\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * A callback that runs after change in content switcher selection upon user interaction is confirmed.\n   * @param itemToSelect A content switcher item.\n   */\n  protected _selectionDidChange(itemToSelect: BXSwitch) {\n    this.value = itemToSelect.value;\n    forEach(this.querySelectorAll((this.constructor as typeof BXContentSwitcher).selectorItemSelected), item => {\n      (item as BXSwitch).selected = false;\n    });\n    itemToSelect.selected = true;\n    // Waits for rendering with the new state that updates `tabindex`\n    Promise.resolve().then(() => {\n      itemToSelect.focus();\n    });\n  }\n\n  /**\n   * The value of the selected item.\n   */\n  @property({ reflect: true })\n  value = '';\n\n  /**\n   * Content switcher size.\n   */\n  @property({ reflect: true })\n  size = CONTENT_SWITCHER_SIZE.REGULAR;\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('value')) {\n      const { selectorItem } = this.constructor as typeof BXContentSwitcher;\n      forEach(this.querySelectorAll(selectorItem), elem => {\n        (elem as BXSwitch).selected = (elem as BXSwitch).value === this.value;\n      });\n    }\n    return true;\n  }\n\n  /**\n   * A selector that will return content switcher items.\n   */\n  static get selectorItem() {\n    return `${prefix}-content-switcher-item`;\n  }\n\n  /**\n   * A selector that will return enabled content switcher items.\n   */\n  static get selectorItemEnabled() {\n    return `${prefix}-content-switcher-item:not([disabled])`;\n  }\n\n  /**\n   * A selector that will return selected items.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-content-switcher-item[selected]`;\n  }\n\n  /**\n   * The name of the custom event fired before a content switcher item is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-content-switcher-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a content switcher item is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-content-switcher-selected`;\n  }\n\n  render() {\n    const { _handleHover: handleHover, _handleKeydown: handleKeydown } = this;\n    return html`\n      <slot\n        @click=\"${this._handleClick}\"\n        @keydown=\"${handleKeydown}\"\n        @mouseover=\"${handleHover}\"\n        @mouseout=\"${handleHover}\"></slot>\n    `;\n  }\n\n  static styles = styles;\n}\n\nexport default BXContentSwitcher;\n"],"file":"content-switcher.js"}