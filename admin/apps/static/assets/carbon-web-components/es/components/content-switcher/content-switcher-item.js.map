{"version":3,"sources":["components/content-switcher/content-switcher-item.ts"],"names":["classMap","html","property","customElement","LitElement","settings","ifNonNull","FocusMixin","styles","prefix","BXContentSwitcherItem","type","Boolean","reflect","attribute","attachShadow","mode","delegatesFocus","Number","exec","navigator","userAgent","changedProperties","has","selected","target","doc","getRootNode","targetNode","getElementById","toggleAttribute","disabled","className"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,+BAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAA0D,aAA1D;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaJ,QAAnB;AAEA;AACA;AACA;AACA;;IAEMK,qB,cADLP,aAAa,CAAE,GAAEM,MAAO,wBAAX,C;AAAd,QACMC,qBADN,qBAC2D;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;OAArDA,qB;;;mBAIHR,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEC,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,C;;;;eACE,K;;;;;mBAMVX,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEC,OAAR;AAAiBC,QAAAA,OAAO,EAAE,IAA1B;AAAgCC,QAAAA,SAAS,EAAE;AAA3C,OAAD,C;;;;eACK,K;;;;;mBAMbZ,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEC,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,C;;;;eACE,K;;;;;mBAKVX,QAAQ,E;;;;;mBAMRA,QAAQ,E;;;;eACD,E;;;;;;;AA9BR;AACF;AACA;;AAIE;AACF;AACA;AACA;;AAIE;AACF;AACA;AACA;;AAIE;AACF;AACA;;AAIE;AACF;AACA;AAIE,kCAAmB;AAAA;;AACjB,eAAO,KAAKa,YAAL,CAAkB;AACvBC,UAAAA,IAAI,EAAE,MADiB;AAEvBC,UAAAA,cAAc,EAAEC,MAAM,CAAC,WAAC,gBAAgBC,IAAhB,CAAqBC,SAAS,CAACC,SAA/B,CAAD,2CAA8C,CAAC,EAAD,EAAK,CAAL,CAA9C,EAAuD,CAAvD,CAAD,CAAN,IAAqE;AAF9D,SAAlB,CAAP;AAID;;;;aAED,sBAAaC,iBAAb,EAAgC;AAC9B,YAAIA,iBAAiB,CAACC,GAAlB,CAAsB,UAAtB,KAAqCD,iBAAiB,CAACC,GAAlB,CAAsB,QAAtB,CAAzC,EAA0E;AACxE,gBAAM;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,cAAuB,IAA7B;;AACA,cAAIA,MAAJ,EAAY;AACV,kBAAMC,GAAG,GAAG,KAAKC,WAAL,EAAZ,CADU,CAEV;;AACA,kBAAMC,UAAU,GAAGF,GAAG,CAACG,cAAJ,IAAsBH,GAAG,CAACG,cAAJ,CAAmBJ,MAAnB,CAAzC;;AACA,gBAAIG,UAAJ,EAAgB;AACdA,cAAAA,UAAU,CAACE,eAAX,CAA2B,QAA3B,EAAqC,CAACN,QAAtC;AACD;AACF;AACF;;AACD,eAAO,IAAP;AACD;;;;aAED,kBAAS;AACP,cAAM;AAAEO,UAAAA,QAAF;AAAYP,UAAAA,QAAZ;AAAsBC,UAAAA;AAAtB,YAAiC,IAAvC;AACA,cAAMO,SAAS,GAAGhC,QAAQ,CAAC;AACzB,WAAE,GAAES,MAAO,wBAAX,GAAqC,IADZ;AAEzB,WAAE,GAAEA,MAAO,8BAAX,GAA2Ce;AAFlB,SAAD,CAA1B;AAIA,eAAOvB,IAAP,yNAIa+B,SAJb,EAKiBD,QALjB,EAMgBP,QAAQ,GAAG,GAAH,GAAS,IANjC,EAOqBlB,SAAS,CAACmB,MAAD,CAP9B,EAQqBb,OAAO,CAACY,QAAD,CAR5B,EASmBf,MATnB;AAYD;;;;;;;eAEeD,M;;;;;GA3EkBD,UAAU,CAACH,UAAD,C;;AA8E9C,eAAeM,qBAAf","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, customElement, LitElement } from 'lit-element';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport ifNonNull from '../../globals/directives/if-non-null';\nimport FocusMixin from '../../globals/mixins/focus';\nimport styles from './content-switcher.scss';\n\nconst { prefix } = settings;\n\n/**\n * Content switcher button.\n * @element bx-content-switcher-item\n */\n@customElement(`${prefix}-content-switcher-item`)\nclass BXContentSwitcherItem extends FocusMixin(LitElement) {\n  /**\n   * `true` if this content switcher item should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` to hide the divider at the left.\n   * @private\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'hide-divider' })\n  hideDivider = false;\n\n  /**\n   * `true` if the content switcher button should be selected.\n   * @private\n   */\n  @property({ type: Boolean, reflect: true })\n  selected = false;\n\n  /**\n   * The element ID of target panel.\n   */\n  @property()\n  target!: string;\n\n  /**\n   * The `value` attribute that is set to the parent `<bx-content-switcher>` when this content switcher item is selected.\n   */\n  @property()\n  value = '';\n\n  createRenderRoot() {\n    return this.attachShadow({\n      mode: 'open',\n      delegatesFocus: Number((/Safari\\/(\\d+)/.exec(navigator.userAgent) ?? ['', 0])[1]) <= 537,\n    });\n  }\n\n  shouldUpdate(changedProperties) {\n    if (changedProperties.has('selected') || changedProperties.has('target')) {\n      const { selected, target } = this;\n      if (target) {\n        const doc = this.getRootNode() as HTMLDocument;\n        // `doc` can be an element if such element is orphaned\n        const targetNode = doc.getElementById && doc.getElementById(target);\n        if (targetNode) {\n          targetNode.toggleAttribute('hidden', !selected);\n        }\n      }\n    }\n    return true;\n  }\n\n  render() {\n    const { disabled, selected, target } = this;\n    const className = classMap({\n      [`${prefix}--content-switcher-btn`]: true,\n      [`${prefix}--content-switcher--selected`]: selected,\n    });\n    return html`\n      <button\n        type=\"button\"\n        role=\"tab\"\n        class=\"${className}\"\n        ?disabled=\"${disabled}\"\n        tabindex=\"${selected ? '0' : '-1'}\"\n        aria-controls=\"${ifNonNull(target)}\"\n        aria-selected=\"${Boolean(selected)}\">\n        <span class=\"${prefix}--content-switcher__label\"><slot></slot></span>\n      </button>\n    `;\n  }\n\n  static styles = styles;\n}\n\nexport default BXContentSwitcherItem;\n"],"file":"content-switcher-item.js"}