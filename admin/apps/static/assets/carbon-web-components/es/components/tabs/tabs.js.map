{"version":3,"sources":["components/tabs/tabs.ts"],"names":["classMap","html","property","query","customElement","ChevronDown16","settings","HostListenerMixin","HostListener","find","forEach","BXContentSwitcher","NAVIGATION_DIRECTION","NAVIGATION_DIRECTION_NARROW","TABS_COLOR_SCHEME","TABS_KEYBOARD_ACTION","TABS_TYPE","styles","prefix","BXTabs","selectorItem","constructor","querySelectorAll","item","inFocus","relatedTarget","contains","_handleUserInitiatedToggle","force","_open","_assistiveStatusText","selectingItemsAssistiveText","selectedItemAssistiveText","triggerContent","assistiveStatusText","_selectedItemContent","selectedItemContent","selectedItemText","textContent","requestUpdate","highlighted","direction","immediate","selectorItemHighlighted","selectorItemSelected","nextItem","_getNextItem","querySelector","_handleUserInitiatedSelectItem","scrollIntoView","block","nextItemText","event","target","value","key","open","_triggerNode","triggerNode","narrowMode","Boolean","offsetParent","action","getAction","NAVIGATING","_clearHighlight","TRIGGERING","CLOSING","_navigate","highlightedItem","itemToSelect","attribute","reflect","REGULAR","changedProperties","has","elem","type","range","ownerDocument","createRange","selectNodeContents","cloneContents","triggerClasses","listClasses","String","Set","TRIGGER_KEYS","NONE"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2021\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit-html/directives/class-map';\nimport { html, property, query, customElement } from 'lit-element';\nimport ChevronDown16 from '@carbon/icons/lib/chevron--down/16';\nimport settings from 'carbon-components/es/globals/js/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport { find, forEach } from '../../globals/internal/collection-helpers';\nimport BXContentSwitcher, { NAVIGATION_DIRECTION } from '../content-switcher/content-switcher';\nimport { NAVIGATION_DIRECTION_NARROW, TABS_COLOR_SCHEME, TABS_KEYBOARD_ACTION, TABS_TYPE } from './defs';\nimport BXTab from './tab';\nimport styles from './tabs.scss';\n\nconst { prefix } = settings;\n\nexport { NAVIGATION_DIRECTION, NAVIGATION_DIRECTION_NARROW, TABS_COLOR_SCHEME, TABS_KEYBOARD_ACTION, TABS_TYPE };\n\n/**\n * Tabs.\n * @element bx-tabs\n * @fires bx-tabs-beingselected\n *   The custom event fired before a tab is selected upon a user gesture.\n *   Cancellation of this event stops changing the user-initiated selection.\n * @fires bx-tabs-selected - The custom event fired after a a tab is selected upon a user gesture.\n */\n@customElement(`${prefix}-tabs`)\nclass BXTabs extends HostListenerMixin(BXContentSwitcher) {\n  /**\n   * The latest status of this dropdown, for screen reader to accounce.\n   */\n  private _assistiveStatusText?: string;\n\n  /**\n   * `true` if the narrow mode dropdown should be open.\n   */\n  private _open = false;\n\n  /**\n   * The content of the selected item, used in the narrow mode.\n   */\n  private _selectedItemContent: DocumentFragment | null = null;\n\n  /**\n   * The DOM element for the trigger button in narrow mode.\n   */\n  @query('#trigger')\n  private _triggerNode!: HTMLDivElement;\n\n  /**\n   * Handles `focus` event handler on this element.\n   */\n  @HostListener('focusin')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleFocusIn() {\n    const { selectorItem } = this.constructor as typeof BXTabs;\n    forEach(this.querySelectorAll(selectorItem), item => {\n      (item as BXTab).inFocus = true;\n    });\n  }\n\n  /**\n   * Handles `blur` event handler on this element.\n   * @param event The event.\n   */\n  @HostListener('focusout')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleFocusOut({ relatedTarget }: FocusEvent) {\n    if (!this.contains(relatedTarget as Node)) {\n      const { selectorItem } = this.constructor as typeof BXTabs;\n      forEach(this.querySelectorAll(selectorItem), item => {\n        (item as BXTab).inFocus = false;\n      });\n      this._handleUserInitiatedToggle(false);\n    }\n  }\n\n  /**\n   * Handles user-initiated toggling the open state.\n   * @param [force] If specified, forces the open state to the given one.\n   */\n  private _handleUserInitiatedToggle(force: boolean = !this._open) {\n    this._open = force;\n    if (this._open) {\n      this._assistiveStatusText = this.selectingItemsAssistiveText;\n    } else {\n      const {\n        selectedItemAssistiveText,\n        triggerContent,\n        _assistiveStatusText: assistiveStatusText,\n        _selectedItemContent: selectedItemContent,\n      } = this;\n      const selectedItemText = (selectedItemContent && selectedItemContent.textContent) || triggerContent;\n      if (selectedItemText && assistiveStatusText !== selectedItemAssistiveText) {\n        this._assistiveStatusText = selectedItemText;\n      }\n    }\n    this.requestUpdate();\n  }\n\n  /**\n   * Clears the selection of tabs.\n   */\n  private _clearHighlight() {\n    forEach(this.querySelectorAll((this.constructor as typeof BXTabs).selectorItem), item => {\n      (item as BXTab).highlighted = false;\n    });\n  }\n\n  /**\n   * Navigates through tabs.\n   * @param direction `-1` to navigate backward, `1` to navigate forward.\n   * @param [options] The options.\n   * @param [options.immediate]\n   *   `true` to make it \"immediate selection change\" mode, which does:\n   *\n   *   * Starts with the selected item\n   *   * Going prev/next item immediately changes the selection\n   */\n  protected _navigate(direction: number, { immediate }: { immediate?: boolean } = {}) {\n    const { selectorItem, selectorItemHighlighted, selectorItemSelected } = this.constructor as typeof BXTabs;\n    const nextItem = this._getNextItem(\n      this.querySelector(immediate ? selectorItemSelected : selectorItemHighlighted) as BXTab,\n      direction\n    );\n    if (!nextItem) {\n      return;\n    }\n\n    if (immediate) {\n      this._handleUserInitiatedSelectItem(nextItem as BXTab);\n    } else {\n      forEach(this.querySelectorAll(selectorItem), item => {\n        (item as BXTab)[immediate ? 'selected' : 'highlighted'] = nextItem === item;\n      });\n    }\n\n    // Using `{ block: 'nearest' }` to prevent scrolling unless scrolling is absolutely necessary.\n    // `scrollIntoViewOptions` seems to work in latest Safari despite of MDN/caniuse table.\n    // IE falls back to the old behavior.\n    nextItem.scrollIntoView({ block: 'nearest' });\n\n    const nextItemText = nextItem.textContent;\n    if (nextItemText) {\n      this._assistiveStatusText = nextItemText;\n    }\n    this.requestUpdate();\n  }\n\n  @HostListener('click')\n  protected _handleClick(event: MouseEvent) {\n    const { target } = event;\n    if (this === target) {\n      this._handleUserInitiatedToggle();\n    } else if ((target as BXTab).value === this.value) {\n      // Clicking on selected item, simply closes the narrow mode dropdown\n      this._handleUserInitiatedToggle(false);\n    } else {\n      // Trying to select the item\n      // If the custom event of the selection is canceled, we don't close the narrow mode dropdown\n      super._handleClick(event);\n    }\n  }\n\n  @HostListener('keydown')\n  protected _handleKeydown({ key }: KeyboardEvent) {\n    const { _open: open, _triggerNode: triggerNode } = this;\n    const narrowMode = Boolean(triggerNode.offsetParent);\n    const action = (this.constructor as typeof BXTabs).getAction(key, { narrowMode });\n    if (!open && narrowMode) {\n      // Menu closed in narrow mode\n      switch (action) {\n        case TABS_KEYBOARD_ACTION.NAVIGATING:\n          this._handleUserInitiatedToggle(true);\n          // If this menu gets open with an arrow key, resets the highlight\n          this._clearHighlight();\n          break;\n        case TABS_KEYBOARD_ACTION.TRIGGERING:\n          this._handleUserInitiatedToggle(true);\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (action) {\n        case TABS_KEYBOARD_ACTION.CLOSING:\n          this._handleUserInitiatedToggle(false);\n          break;\n        case TABS_KEYBOARD_ACTION.NAVIGATING:\n          {\n            const direction = narrowMode ? NAVIGATION_DIRECTION_NARROW[key] : NAVIGATION_DIRECTION[key];\n            if (direction) {\n              this._navigate(direction, { immediate: !narrowMode });\n            }\n          }\n          break;\n        case TABS_KEYBOARD_ACTION.TRIGGERING:\n          {\n            const { selectorItemHighlighted } = this.constructor as typeof BXTabs;\n            const highlightedItem = this.querySelector(selectorItemHighlighted) as BXTab;\n            if (highlightedItem) {\n              if (highlightedItem.value === this.value) {\n                // Selecting an already-selected item, simply closes the narrow mode dropdown\n                this._handleUserInitiatedToggle(false);\n              } else {\n                // Trying to select the item\n                // If the custom event of the selection is canceled, we don't close the narrow mode dropdown\n                this._handleUserInitiatedSelectItem(highlightedItem);\n              }\n            } else {\n              this._handleUserInitiatedToggle();\n            }\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected _selectionDidChange(itemToSelect: BXTab) {\n    super._selectionDidChange(itemToSelect);\n    this._assistiveStatusText = this.selectedItemAssistiveText;\n    this._handleUserInitiatedToggle(false);\n  }\n\n  /**\n   * The color scheme.\n   */\n  @property({ attribute: 'color-scheme', reflect: true })\n  colorScheme = TABS_COLOR_SCHEME.REGULAR;\n\n  /**\n   * An assistive text for screen reader to announce, telling the open state.\n   */\n  @property({ attribute: 'selecting-items-assistive-text' })\n  selectingItemsAssistiveText = 'Selecting items. Use up and down arrow keys to navigate.';\n\n  /**\n   * An assistive text for screen reader to announce, telling that an item is selected.\n   */\n  @property({ attribute: 'selected-item-assistive-text' })\n  selectedItemAssistiveText = 'Selected an item.';\n\n  /**\n   * The content of the trigger button for narrow mode.\n   */\n  @property({ attribute: 'trigger-content' })\n  triggerContent = '';\n\n  /**\n   * Tabs type.\n   */\n  @property({ reflect: true })\n  type = TABS_TYPE.REGULAR;\n\n  shouldUpdate(changedProperties) {\n    super.shouldUpdate(changedProperties);\n    const { selectorItem } = this.constructor as typeof BXTabs;\n    if (changedProperties.has('type')) {\n      forEach(this.querySelectorAll(selectorItem), elem => {\n        (elem as BXTab).type = this.type;\n      });\n    }\n    if (changedProperties.has('value')) {\n      const item = find(this.querySelectorAll(selectorItem), elem => (elem as BXTab).value === this.value);\n      if (item) {\n        const range = this.ownerDocument!.createRange();\n        range.selectNodeContents(item);\n        this._selectedItemContent = range.cloneContents();\n      } else {\n        this._selectedItemContent = null;\n      }\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      triggerContent,\n      _assistiveStatusText: assistiveStatusText,\n      _open: open,\n      _selectedItemContent: selectedItemContent,\n    } = this;\n    const triggerClasses = classMap({\n      [`${prefix}--tabs-trigger`]: true,\n      [`${prefix}--tabs-trigger--open`]: open,\n    });\n    const listClasses = classMap({\n      [`${prefix}--tabs__nav`]: true,\n      [`${prefix}--tabs__nav--hidden`]: !open,\n    });\n    return html`\n      <div\n        id=\"trigger\"\n        role=\"button\"\n        class=\"${triggerClasses}\"\n        aria-labelledby=\"trigger-label\"\n        aria-expanded=\"${String(open)}\"\n        aria-haspopup=\"listbox\"\n        aria-owns=\"tablist\"\n        aria-controls=\"tablist\">\n        <span id=\"trigger-label\" class=\"${prefix}--tabs-trigger-text\"> ${selectedItemContent || triggerContent} </span>\n        ${ChevronDown16({ 'aria-hidden': 'true' })}\n      </div>\n      <ul id=\"tablist\" role=\"tablist\" class=\"${listClasses}\">\n        <slot></slot>\n      </ul>\n      <div class=\"${prefix}--assistive-text\" role=\"status\" aria-live=\"assertive\" aria-relevant=\"additions text\">\n        ${assistiveStatusText}\n      </div>\n    `;\n  }\n\n  /**\n   * Symbols of keys that triggers opening/closing menu and selecting/deselecting menu item.\n   */\n  static TRIGGER_KEYS = new Set([' ', 'Enter']);\n\n  /**\n   * A selector that will return tabs.\n   */\n  static get selectorItem() {\n    return `${prefix}-tab`;\n  }\n\n  /**\n   * A selector that will return enabled tabs.\n   */\n  static get selectorItemEnabled() {\n    return `${prefix}-tab:not([disabled])`;\n  }\n\n  /**\n   * A selector that will return highlighted tabs.\n   */\n  static get selectorItemHighlighted() {\n    return `${prefix}-tab[highlighted]`;\n  }\n\n  /**\n   * A selector that will return selected tabs.\n   */\n  static get selectorItemSelected() {\n    return `${prefix}-tab[selected]`;\n  }\n\n  /**\n   * The name of the custom event fired before a tab is selected upon a user gesture.\n   * Cancellation of this event stops changing the user-initiated selection.\n   */\n  static get eventBeforeSelect() {\n    return `${prefix}-tabs-beingselected`;\n  }\n\n  /**\n   * The name of the custom event fired after a a tab is selected upon a user gesture.\n   */\n  static get eventSelect() {\n    return `${prefix}-tabs-selected`;\n  }\n\n  static styles = styles;\n\n  /**\n   * @param key The key symbol.\n   * @param [options] The options.\n   * @param [options.narrowMode] `true` to get the action for narrow mode.\n   * @returns A action for dropdown for the given key symbol.\n   */\n  static getAction(key: string, { narrowMode }: { narrowMode?: boolean }) {\n    if (key === 'Escape') {\n      return TABS_KEYBOARD_ACTION.CLOSING;\n    }\n    if (key in (narrowMode ? NAVIGATION_DIRECTION_NARROW : NAVIGATION_DIRECTION)) {\n      return TABS_KEYBOARD_ACTION.NAVIGATING;\n    }\n    if (narrowMode && this.TRIGGER_KEYS.has(key)) {\n      return TABS_KEYBOARD_ACTION.TRIGGERING;\n    }\n    return TABS_KEYBOARD_ACTION.NONE;\n  }\n}\n\nexport default BXTabs;\n"],"file":"tabs.js"}