{"version":3,"sources":["globals/internal/storybook-cdn.ts"],"names":["packageJson","_renderScript","components","tag","isRTL","scripts","rtl","forEach","component","cdnJs","version","cdnCss"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,WAAP,MAAwB,uBAAxB;AAEA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,GAAnC,EAAwCC,KAAK,GAAG,KAAhD,EAAuD;AACrD,MAAIC,OAAO,GAAG,EAAd;AACA,QAAMC,GAAG,GAAGF,KAAK,GAAG,MAAH,GAAY,EAA7B;AACAF,EAAAA,UAAU,CAACK,OAAX,CAAmBC,SAAS,IAAI;AAC9BH,IAAAA,OAAO,IAAK,kFAAiFF,GAAI,IAAGK,SAAU,GAAEF,GAAI,sBAApH;AACD,GAFD;AAGA,SAAOD,OAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMI,KAAK,GAAG,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAoB;AACvC,SAAQ;AACV;AACA;AACA;AACA;AACA,GAAGD,aAAa,CAACC,UAAD,EAAc,YAAWF,WAAW,CAACU,OAAQ,EAA7C,CAAgD;AAChE;AACA;AACA,GAAGT,aAAa,CAACC,UAAD,EAAa,eAAb,CAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAGD,aAAa,CAACC,UAAD,EAAc,YAAWF,WAAW,CAACU,OAAQ,EAA7C,EAAgD,IAAhD,CAAsD;AACtE;AACA;AACA,GAAGT,aAAa,CAACC,UAAD,EAAa,eAAb,EAA8B,IAA9B,CAAoC;AACpD;AACA,IAzBE;AA0BD,CA3BM;AA6BP;AACA;AACA;;AACA,OAAO,MAAMS,MAAM,GAAG,MAAM;AAC1B,SAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAPE;AAQD,CATM","sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2021, 2022\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport packageJson from '../../../package.json';\n\n/* eslint-disable import/prefer-default-export,max-len */\n\n/**\n *\n */\n/**\n * Renders the component(s) script tag content and returns back the string\n *\n * @param {Array} components array of component names\n * @param {string} tag tag folder\n * @param {boolean} isRTL flag to show rtl version\n */\nfunction _renderScript(components, tag, isRTL = false) {\n  let scripts = '';\n  const rtl = isRTL ? '.rtl' : '';\n  components.forEach(component => {\n    scripts += `<script type=\"module\" src=\"https://1.www.s81c.com/common/carbon/web-components/${tag}/${component}${rtl}.min.js\"></script>\\n`;\n  });\n  return scripts;\n}\n\n/**\n * This is the markdown block for JS via CDN\n *\n * @param {Array} components array of components to render\n */\nexport const cdnJs = ({ components }) => {\n  return `\n ### JS (via CDN)\n\n \\`\\`\\`html\n // SPECIFIC VERSION (available starting v1.6.0)\n ${_renderScript(components, `version/v${packageJson.version}`)}\n\n // LATEST tag\n ${_renderScript(components, 'tag/v1/latest')}\n \\`\\`\\`\n\n > NOTE: The latest tag is a moving version. While beneficial to\n > always stay on the most recent version, it is recommended to choose a specific\n > version and properly test your application when upgrading to a newer version.\n\n\n #### Right-to-left (RTL) versions\n\n \\`\\`\\`html\n // SPECIFIC VERSION (available starting v1.6.0)\n ${_renderScript(components, `version/v${packageJson.version}`, true)}\n\n // LATEST tag\n ${_renderScript(components, 'tag/v1/latest', true)}\n \\`\\`\\`\n   `;\n};\n\n/**\n * This is the markdown block for CSS via CDN\n */\nexport const cdnCss = () => {\n  return `\n### Carbon CDN style helpers (optional)\n\nThere are optional CDN artifacts available that can assist with global Carbon\nstyles in lieu of including into your specific application bundle.\n\n[Click here to learn more](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/web-components/docs/carbon-cdn-style-helpers.md)\\n\\n\n  `;\n};\n"],"file":"storybook-cdn.js"}